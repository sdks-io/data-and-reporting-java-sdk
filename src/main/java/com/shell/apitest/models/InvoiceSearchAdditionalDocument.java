/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for InvoiceSearchAdditionalDocument type.
 */
public class InvoiceSearchAdditionalDocument {
    private OptionalNullable<String> reference;
    private OptionalNullable<String> type;
    private OptionalNullable<String> isApplicable;

    /**
     * Default constructor.
     */
    public InvoiceSearchAdditionalDocument() {
    }

    /**
     * Initialization constructor.
     * @param  reference  String value for reference.
     * @param  type  String value for type.
     * @param  isApplicable  String value for isApplicable.
     */
    public InvoiceSearchAdditionalDocument(
            String reference,
            String type,
            String isApplicable) {
        this.reference = OptionalNullable.of(reference);
        this.type = OptionalNullable.of(type);
        this.isApplicable = OptionalNullable.of(isApplicable);
    }

    /**
     * Initialization constructor.
     * @param  reference  String value for reference.
     * @param  type  String value for type.
     * @param  isApplicable  String value for isApplicable.
     */

    protected InvoiceSearchAdditionalDocument(OptionalNullable<String> reference,
            OptionalNullable<String> type, OptionalNullable<String> isApplicable) {
        this.reference = reference;
        this.type = type;
        this.isApplicable = isApplicable;
    }

    /**
     * Internal Getter for Reference.
     * Unique ID for the additional invoice document.
     * @return Returns the Internal String
     */
    @JsonGetter("Reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetReference() {
        return this.reference;
    }

    /**
     * Getter for Reference.
     * Unique ID for the additional invoice document.
     * @return Returns the String
     */
    public String getReference() {
        return OptionalNullable.getFrom(reference);
    }

    /**
     * Setter for Reference.
     * Unique ID for the additional invoice document.
     * @param reference Value for String
     */
    @JsonSetter("Reference")
    public void setReference(String reference) {
        this.reference = OptionalNullable.of(reference);
    }

    /**
     * UnSetter for Reference.
     * Unique ID for the additional invoice document.
     */
    public void unsetReference() {
        reference = null;
    }

    /**
     * Internal Getter for Type.
     * Type of the additional document. Mandatory Possible values: • KSeF - Applicable for Poland
     * market.
     * @return Returns the Internal String
     */
    @JsonGetter("Type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * Type of the additional document. Mandatory Possible values: • KSeF - Applicable for Poland
     * market.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * Type of the additional document. Mandatory Possible values: • KSeF - Applicable for Poland
     * market.
     * @param type Value for String
     */
    @JsonSetter("Type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     * Type of the additional document. Mandatory Possible values: • KSeF - Applicable for Poland
     * market.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for IsApplicable.
     * True if a KSeF PDF will be produced for the customer.
     * @return Returns the Internal String
     */
    @JsonGetter("IsApplicable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetIsApplicable() {
        return this.isApplicable;
    }

    /**
     * Getter for IsApplicable.
     * True if a KSeF PDF will be produced for the customer.
     * @return Returns the String
     */
    public String getIsApplicable() {
        return OptionalNullable.getFrom(isApplicable);
    }

    /**
     * Setter for IsApplicable.
     * True if a KSeF PDF will be produced for the customer.
     * @param isApplicable Value for String
     */
    @JsonSetter("IsApplicable")
    public void setIsApplicable(String isApplicable) {
        this.isApplicable = OptionalNullable.of(isApplicable);
    }

    /**
     * UnSetter for IsApplicable.
     * True if a KSeF PDF will be produced for the customer.
     */
    public void unsetIsApplicable() {
        isApplicable = null;
    }

    /**
     * Converts this InvoiceSearchAdditionalDocument into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InvoiceSearchAdditionalDocument [" + "reference=" + reference + ", type=" + type
                + ", isApplicable=" + isApplicable + "]";
    }

    /**
     * Builds a new {@link InvoiceSearchAdditionalDocument.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InvoiceSearchAdditionalDocument.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.reference = internalGetReference();
        builder.type = internalGetType();
        builder.isApplicable = internalGetIsApplicable();
        return builder;
    }

    /**
     * Class to build instances of {@link InvoiceSearchAdditionalDocument}.
     */
    public static class Builder {
        private OptionalNullable<String> reference;
        private OptionalNullable<String> type;
        private OptionalNullable<String> isApplicable;



        /**
         * Setter for reference.
         * @param  reference  String value for reference.
         * @return Builder
         */
        public Builder reference(String reference) {
            this.reference = OptionalNullable.of(reference);
            return this;
        }

        /**
         * UnSetter for reference.
         * @return Builder
         */
        public Builder unsetReference() {
            reference = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for isApplicable.
         * @param  isApplicable  String value for isApplicable.
         * @return Builder
         */
        public Builder isApplicable(String isApplicable) {
            this.isApplicable = OptionalNullable.of(isApplicable);
            return this;
        }

        /**
         * UnSetter for isApplicable.
         * @return Builder
         */
        public Builder unsetIsApplicable() {
            isApplicable = null;
            return this;
        }

        /**
         * Builds a new {@link InvoiceSearchAdditionalDocument} object using the set fields.
         * @return {@link InvoiceSearchAdditionalDocument}
         */
        public InvoiceSearchAdditionalDocument build() {
            return new InvoiceSearchAdditionalDocument(reference, type, isApplicable);
        }
    }
}
