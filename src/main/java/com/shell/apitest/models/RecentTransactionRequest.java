/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RecentTransactionRequest type.
 */
public class RecentTransactionRequest {
    private int pageSize;
    private int page;
    private RecentTransactionReq filters;

    /**
     * Default constructor.
     */
    public RecentTransactionRequest() {
    }

    /**
     * Initialization constructor.
     * @param  pageSize  int value for pageSize.
     * @param  page  int value for page.
     * @param  filters  RecentTransactionReq value for filters.
     */
    public RecentTransactionRequest(
            int pageSize,
            int page,
            RecentTransactionReq filters) {
        this.pageSize = pageSize;
        this.page = page;
        this.filters = filters;
    }

    /**
     * Getter for PageSize.
     * Specify the number of records to returned; Max 1000
     * @return Returns the int
     */
    @JsonGetter("PageSize")
    public int getPageSize() {
        return pageSize;
    }

    /**
     * Setter for PageSize.
     * Specify the number of records to returned; Max 1000
     * @param pageSize Value for int
     */
    @JsonSetter("PageSize")
    public void setPageSize(int pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * Getter for Page.
     * Specify the page of results to be returned.
     * @return Returns the int
     */
    @JsonGetter("Page")
    public int getPage() {
        return page;
    }

    /**
     * Setter for Page.
     * Specify the page of results to be returned.
     * @param page Value for int
     */
    @JsonSetter("Page")
    public void setPage(int page) {
        this.page = page;
    }

    /**
     * Getter for Filters.
     * @return Returns the RecentTransactionReq
     */
    @JsonGetter("Filters")
    public RecentTransactionReq getFilters() {
        return filters;
    }

    /**
     * Setter for Filters.
     * @param filters Value for RecentTransactionReq
     */
    @JsonSetter("Filters")
    public void setFilters(RecentTransactionReq filters) {
        this.filters = filters;
    }

    /**
     * Converts this RecentTransactionRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RecentTransactionRequest [" + "pageSize=" + pageSize + ", page=" + page
                + ", filters=" + filters + "]";
    }

    /**
     * Builds a new {@link RecentTransactionRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RecentTransactionRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(pageSize, page, filters);
        return builder;
    }

    /**
     * Class to build instances of {@link RecentTransactionRequest}.
     */
    public static class Builder {
        private int pageSize;
        private int page;
        private RecentTransactionReq filters;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  pageSize  int value for pageSize.
         * @param  page  int value for page.
         * @param  filters  RecentTransactionReq value for filters.
         */
        public Builder(int pageSize, int page, RecentTransactionReq filters) {
            this.pageSize = pageSize;
            this.page = page;
            this.filters = filters;
        }

        /**
         * Setter for pageSize.
         * @param  pageSize  int value for pageSize.
         * @return Builder
         */
        public Builder pageSize(int pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        /**
         * Setter for page.
         * @param  page  int value for page.
         * @return Builder
         */
        public Builder page(int page) {
            this.page = page;
            return this;
        }

        /**
         * Setter for filters.
         * @param  filters  RecentTransactionReq value for filters.
         * @return Builder
         */
        public Builder filters(RecentTransactionReq filters) {
            this.filters = filters;
            return this;
        }

        /**
         * Builds a new {@link RecentTransactionRequest} object using the set fields.
         * @return {@link RecentTransactionRequest}
         */
        public RecentTransactionRequest build() {
            return new RecentTransactionRequest(pageSize, page, filters);
        }
    }
}
