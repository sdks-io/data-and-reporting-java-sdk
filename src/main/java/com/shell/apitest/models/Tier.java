/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Tier type.
 */
public class Tier {
    private OptionalNullable<Integer> tierPriceListId;
    private OptionalNullable<String> priceListDescription;
    private OptionalNullable<Integer> tierMin;
    private OptionalNullable<Integer> tierMax;
    private OptionalNullable<String> tieredPricingGroupName;
    private OptionalNullable<String> tieredPricingGroupPeriod;
    private OptionalNullable<Double> discountValue;
    private OptionalNullable<Double> pricePerUnit;
    private OptionalNullable<Double> pricePerUnitAfterDiscount;

    /**
     * Default constructor.
     */
    public Tier() {
    }

    /**
     * Initialization constructor.
     * @param  tierPriceListId  Integer value for tierPriceListId.
     * @param  priceListDescription  String value for priceListDescription.
     * @param  tierMin  Integer value for tierMin.
     * @param  tierMax  Integer value for tierMax.
     * @param  tieredPricingGroupName  String value for tieredPricingGroupName.
     * @param  tieredPricingGroupPeriod  String value for tieredPricingGroupPeriod.
     * @param  discountValue  Double value for discountValue.
     * @param  pricePerUnit  Double value for pricePerUnit.
     * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
     */
    public Tier(
            Integer tierPriceListId,
            String priceListDescription,
            Integer tierMin,
            Integer tierMax,
            String tieredPricingGroupName,
            String tieredPricingGroupPeriod,
            Double discountValue,
            Double pricePerUnit,
            Double pricePerUnitAfterDiscount) {
        this.tierPriceListId = OptionalNullable.of(tierPriceListId);
        this.priceListDescription = OptionalNullable.of(priceListDescription);
        this.tierMin = OptionalNullable.of(tierMin);
        this.tierMax = OptionalNullable.of(tierMax);
        this.tieredPricingGroupName = OptionalNullable.of(tieredPricingGroupName);
        this.tieredPricingGroupPeriod = OptionalNullable.of(tieredPricingGroupPeriod);
        this.discountValue = OptionalNullable.of(discountValue);
        this.pricePerUnit = OptionalNullable.of(pricePerUnit);
        this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
    }

    /**
     * Initialization constructor.
     * @param  tierPriceListId  Integer value for tierPriceListId.
     * @param  priceListDescription  String value for priceListDescription.
     * @param  tierMin  Integer value for tierMin.
     * @param  tierMax  Integer value for tierMax.
     * @param  tieredPricingGroupName  String value for tieredPricingGroupName.
     * @param  tieredPricingGroupPeriod  String value for tieredPricingGroupPeriod.
     * @param  discountValue  Double value for discountValue.
     * @param  pricePerUnit  Double value for pricePerUnit.
     * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
     */

    protected Tier(OptionalNullable<Integer> tierPriceListId,
            OptionalNullable<String> priceListDescription, OptionalNullable<Integer> tierMin,
            OptionalNullable<Integer> tierMax, OptionalNullable<String> tieredPricingGroupName,
            OptionalNullable<String> tieredPricingGroupPeriod,
            OptionalNullable<Double> discountValue, OptionalNullable<Double> pricePerUnit,
            OptionalNullable<Double> pricePerUnitAfterDiscount) {
        this.tierPriceListId = tierPriceListId;
        this.priceListDescription = priceListDescription;
        this.tierMin = tierMin;
        this.tierMax = tierMax;
        this.tieredPricingGroupName = tieredPricingGroupName;
        this.tieredPricingGroupPeriod = tieredPricingGroupPeriod;
        this.discountValue = discountValue;
        this.pricePerUnit = pricePerUnit;
        this.pricePerUnitAfterDiscount = pricePerUnitAfterDiscount;
    }

    /**
     * Internal Getter for TierPriceListId.
     * The price list if reference price is list price. Only used when the Price Rule category is
     * set to. ‘Tiered Pricing’.
     * @return Returns the Internal Integer
     */
    @JsonGetter("TierPriceListId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTierPriceListId() {
        return this.tierPriceListId;
    }

    /**
     * Getter for TierPriceListId.
     * The price list if reference price is list price. Only used when the Price Rule category is
     * set to. ‘Tiered Pricing’.
     * @return Returns the Integer
     */
    public Integer getTierPriceListId() {
        return OptionalNullable.getFrom(tierPriceListId);
    }

    /**
     * Setter for TierPriceListId.
     * The price list if reference price is list price. Only used when the Price Rule category is
     * set to. ‘Tiered Pricing’.
     * @param tierPriceListId Value for Integer
     */
    @JsonSetter("TierPriceListId")
    public void setTierPriceListId(Integer tierPriceListId) {
        this.tierPriceListId = OptionalNullable.of(tierPriceListId);
    }

    /**
     * UnSetter for TierPriceListId.
     * The price list if reference price is list price. Only used when the Price Rule category is
     * set to. ‘Tiered Pricing’.
     */
    public void unsetTierPriceListId() {
        tierPriceListId = null;
    }

    /**
     * Internal Getter for PriceListDescription.
     * Price list description of the tier.
     * @return Returns the Internal String
     */
    @JsonGetter("PriceListDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceListDescription() {
        return this.priceListDescription;
    }

    /**
     * Getter for PriceListDescription.
     * Price list description of the tier.
     * @return Returns the String
     */
    public String getPriceListDescription() {
        return OptionalNullable.getFrom(priceListDescription);
    }

    /**
     * Setter for PriceListDescription.
     * Price list description of the tier.
     * @param priceListDescription Value for String
     */
    @JsonSetter("PriceListDescription")
    public void setPriceListDescription(String priceListDescription) {
        this.priceListDescription = OptionalNullable.of(priceListDescription);
    }

    /**
     * UnSetter for PriceListDescription.
     * Price list description of the tier.
     */
    public void unsetPriceListDescription() {
        priceListDescription = null;
    }

    /**
     * Internal Getter for TierMin.
     * Minimum tier volume E.g., 500
     * @return Returns the Internal Integer
     */
    @JsonGetter("TierMin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTierMin() {
        return this.tierMin;
    }

    /**
     * Getter for TierMin.
     * Minimum tier volume E.g., 500
     * @return Returns the Integer
     */
    public Integer getTierMin() {
        return OptionalNullable.getFrom(tierMin);
    }

    /**
     * Setter for TierMin.
     * Minimum tier volume E.g., 500
     * @param tierMin Value for Integer
     */
    @JsonSetter("TierMin")
    public void setTierMin(Integer tierMin) {
        this.tierMin = OptionalNullable.of(tierMin);
    }

    /**
     * UnSetter for TierMin.
     * Minimum tier volume E.g., 500
     */
    public void unsetTierMin() {
        tierMin = null;
    }

    /**
     * Internal Getter for TierMax.
     * Maximum tier volume E.g., 1000
     * @return Returns the Internal Integer
     */
    @JsonGetter("TierMax")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTierMax() {
        return this.tierMax;
    }

    /**
     * Getter for TierMax.
     * Maximum tier volume E.g., 1000
     * @return Returns the Integer
     */
    public Integer getTierMax() {
        return OptionalNullable.getFrom(tierMax);
    }

    /**
     * Setter for TierMax.
     * Maximum tier volume E.g., 1000
     * @param tierMax Value for Integer
     */
    @JsonSetter("TierMax")
    public void setTierMax(Integer tierMax) {
        this.tierMax = OptionalNullable.of(tierMax);
    }

    /**
     * UnSetter for TierMax.
     * Maximum tier volume E.g., 1000
     */
    public void unsetTierMax() {
        tierMax = null;
    }

    /**
     * Internal Getter for TieredPricingGroupName.
     * Pricing group name of tier
     * @return Returns the Internal String
     */
    @JsonGetter("TieredPricingGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTieredPricingGroupName() {
        return this.tieredPricingGroupName;
    }

    /**
     * Getter for TieredPricingGroupName.
     * Pricing group name of tier
     * @return Returns the String
     */
    public String getTieredPricingGroupName() {
        return OptionalNullable.getFrom(tieredPricingGroupName);
    }

    /**
     * Setter for TieredPricingGroupName.
     * Pricing group name of tier
     * @param tieredPricingGroupName Value for String
     */
    @JsonSetter("TieredPricingGroupName")
    public void setTieredPricingGroupName(String tieredPricingGroupName) {
        this.tieredPricingGroupName = OptionalNullable.of(tieredPricingGroupName);
    }

    /**
     * UnSetter for TieredPricingGroupName.
     * Pricing group name of tier
     */
    public void unsetTieredPricingGroupName() {
        tieredPricingGroupName = null;
    }

    /**
     * Internal Getter for TieredPricingGroupPeriod.
     * Tiered pricing group period. Possible Values 1.	Monthly 2.	Quarterly 3.	Semi Annually
     * 4.	Annual
     * @return Returns the Internal String
     */
    @JsonGetter("TieredPricingGroupPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTieredPricingGroupPeriod() {
        return this.tieredPricingGroupPeriod;
    }

    /**
     * Getter for TieredPricingGroupPeriod.
     * Tiered pricing group period. Possible Values 1.	Monthly 2.	Quarterly 3.	Semi Annually
     * 4.	Annual
     * @return Returns the String
     */
    public String getTieredPricingGroupPeriod() {
        return OptionalNullable.getFrom(tieredPricingGroupPeriod);
    }

    /**
     * Setter for TieredPricingGroupPeriod.
     * Tiered pricing group period. Possible Values 1.	Monthly 2.	Quarterly 3.	Semi Annually
     * 4.	Annual
     * @param tieredPricingGroupPeriod Value for String
     */
    @JsonSetter("TieredPricingGroupPeriod")
    public void setTieredPricingGroupPeriod(String tieredPricingGroupPeriod) {
        this.tieredPricingGroupPeriod = OptionalNullable.of(tieredPricingGroupPeriod);
    }

    /**
     * UnSetter for TieredPricingGroupPeriod.
     * Tiered pricing group period. Possible Values 1.	Monthly 2.	Quarterly 3.	Semi Annually
     * 4.	Annual
     */
    public void unsetTieredPricingGroupPeriod() {
        tieredPricingGroupPeriod = null;
    }

    /**
     * Internal Getter for DiscountValue.
     * Discount value to be applied to the List price or pump price.
     * @return Returns the Internal Double
     */
    @JsonGetter("DiscountValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetDiscountValue() {
        return this.discountValue;
    }

    /**
     * Getter for DiscountValue.
     * Discount value to be applied to the List price or pump price.
     * @return Returns the Double
     */
    public Double getDiscountValue() {
        return OptionalNullable.getFrom(discountValue);
    }

    /**
     * Setter for DiscountValue.
     * Discount value to be applied to the List price or pump price.
     * @param discountValue Value for Double
     */
    @JsonSetter("DiscountValue")
    public void setDiscountValue(Double discountValue) {
        this.discountValue = OptionalNullable.of(discountValue);
    }

    /**
     * UnSetter for DiscountValue.
     * Discount value to be applied to the List price or pump price.
     */
    public void unsetDiscountValue() {
        discountValue = null;
    }

    /**
     * Internal Getter for PricePerUnit.
     * Price per unit after discount Note: This field will not contain any value for discounts on
     * retail prices.
     * @return Returns the Internal Double
     */
    @JsonGetter("PricePerUnit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetPricePerUnit() {
        return this.pricePerUnit;
    }

    /**
     * Getter for PricePerUnit.
     * Price per unit after discount Note: This field will not contain any value for discounts on
     * retail prices.
     * @return Returns the Double
     */
    public Double getPricePerUnit() {
        return OptionalNullable.getFrom(pricePerUnit);
    }

    /**
     * Setter for PricePerUnit.
     * Price per unit after discount Note: This field will not contain any value for discounts on
     * retail prices.
     * @param pricePerUnit Value for Double
     */
    @JsonSetter("PricePerUnit")
    public void setPricePerUnit(Double pricePerUnit) {
        this.pricePerUnit = OptionalNullable.of(pricePerUnit);
    }

    /**
     * UnSetter for PricePerUnit.
     * Price per unit after discount Note: This field will not contain any value for discounts on
     * retail prices.
     */
    public void unsetPricePerUnit() {
        pricePerUnit = null;
    }

    /**
     * Internal Getter for PricePerUnitAfterDiscount.
     * Price per unit (List Price) Note: This field will not contain any value for discounts on
     * retail prices.
     * @return Returns the Internal Double
     */
    @JsonGetter("PricePerUnitAfterDiscount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetPricePerUnitAfterDiscount() {
        return this.pricePerUnitAfterDiscount;
    }

    /**
     * Getter for PricePerUnitAfterDiscount.
     * Price per unit (List Price) Note: This field will not contain any value for discounts on
     * retail prices.
     * @return Returns the Double
     */
    public Double getPricePerUnitAfterDiscount() {
        return OptionalNullable.getFrom(pricePerUnitAfterDiscount);
    }

    /**
     * Setter for PricePerUnitAfterDiscount.
     * Price per unit (List Price) Note: This field will not contain any value for discounts on
     * retail prices.
     * @param pricePerUnitAfterDiscount Value for Double
     */
    @JsonSetter("PricePerUnitAfterDiscount")
    public void setPricePerUnitAfterDiscount(Double pricePerUnitAfterDiscount) {
        this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
    }

    /**
     * UnSetter for PricePerUnitAfterDiscount.
     * Price per unit (List Price) Note: This field will not contain any value for discounts on
     * retail prices.
     */
    public void unsetPricePerUnitAfterDiscount() {
        pricePerUnitAfterDiscount = null;
    }

    /**
     * Converts this Tier into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Tier [" + "tierPriceListId=" + tierPriceListId + ", priceListDescription="
                + priceListDescription + ", tierMin=" + tierMin + ", tierMax=" + tierMax
                + ", tieredPricingGroupName=" + tieredPricingGroupName
                + ", tieredPricingGroupPeriod=" + tieredPricingGroupPeriod + ", discountValue="
                + discountValue + ", pricePerUnit=" + pricePerUnit + ", pricePerUnitAfterDiscount="
                + pricePerUnitAfterDiscount + "]";
    }

    /**
     * Builds a new {@link Tier.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Tier.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.tierPriceListId = internalGetTierPriceListId();
        builder.priceListDescription = internalGetPriceListDescription();
        builder.tierMin = internalGetTierMin();
        builder.tierMax = internalGetTierMax();
        builder.tieredPricingGroupName = internalGetTieredPricingGroupName();
        builder.tieredPricingGroupPeriod = internalGetTieredPricingGroupPeriod();
        builder.discountValue = internalGetDiscountValue();
        builder.pricePerUnit = internalGetPricePerUnit();
        builder.pricePerUnitAfterDiscount = internalGetPricePerUnitAfterDiscount();
        return builder;
    }

    /**
     * Class to build instances of {@link Tier}.
     */
    public static class Builder {
        private OptionalNullable<Integer> tierPriceListId;
        private OptionalNullable<String> priceListDescription;
        private OptionalNullable<Integer> tierMin;
        private OptionalNullable<Integer> tierMax;
        private OptionalNullable<String> tieredPricingGroupName;
        private OptionalNullable<String> tieredPricingGroupPeriod;
        private OptionalNullable<Double> discountValue;
        private OptionalNullable<Double> pricePerUnit;
        private OptionalNullable<Double> pricePerUnitAfterDiscount;



        /**
         * Setter for tierPriceListId.
         * @param  tierPriceListId  Integer value for tierPriceListId.
         * @return Builder
         */
        public Builder tierPriceListId(Integer tierPriceListId) {
            this.tierPriceListId = OptionalNullable.of(tierPriceListId);
            return this;
        }

        /**
         * UnSetter for tierPriceListId.
         * @return Builder
         */
        public Builder unsetTierPriceListId() {
            tierPriceListId = null;
            return this;
        }

        /**
         * Setter for priceListDescription.
         * @param  priceListDescription  String value for priceListDescription.
         * @return Builder
         */
        public Builder priceListDescription(String priceListDescription) {
            this.priceListDescription = OptionalNullable.of(priceListDescription);
            return this;
        }

        /**
         * UnSetter for priceListDescription.
         * @return Builder
         */
        public Builder unsetPriceListDescription() {
            priceListDescription = null;
            return this;
        }

        /**
         * Setter for tierMin.
         * @param  tierMin  Integer value for tierMin.
         * @return Builder
         */
        public Builder tierMin(Integer tierMin) {
            this.tierMin = OptionalNullable.of(tierMin);
            return this;
        }

        /**
         * UnSetter for tierMin.
         * @return Builder
         */
        public Builder unsetTierMin() {
            tierMin = null;
            return this;
        }

        /**
         * Setter for tierMax.
         * @param  tierMax  Integer value for tierMax.
         * @return Builder
         */
        public Builder tierMax(Integer tierMax) {
            this.tierMax = OptionalNullable.of(tierMax);
            return this;
        }

        /**
         * UnSetter for tierMax.
         * @return Builder
         */
        public Builder unsetTierMax() {
            tierMax = null;
            return this;
        }

        /**
         * Setter for tieredPricingGroupName.
         * @param  tieredPricingGroupName  String value for tieredPricingGroupName.
         * @return Builder
         */
        public Builder tieredPricingGroupName(String tieredPricingGroupName) {
            this.tieredPricingGroupName = OptionalNullable.of(tieredPricingGroupName);
            return this;
        }

        /**
         * UnSetter for tieredPricingGroupName.
         * @return Builder
         */
        public Builder unsetTieredPricingGroupName() {
            tieredPricingGroupName = null;
            return this;
        }

        /**
         * Setter for tieredPricingGroupPeriod.
         * @param  tieredPricingGroupPeriod  String value for tieredPricingGroupPeriod.
         * @return Builder
         */
        public Builder tieredPricingGroupPeriod(String tieredPricingGroupPeriod) {
            this.tieredPricingGroupPeriod = OptionalNullable.of(tieredPricingGroupPeriod);
            return this;
        }

        /**
         * UnSetter for tieredPricingGroupPeriod.
         * @return Builder
         */
        public Builder unsetTieredPricingGroupPeriod() {
            tieredPricingGroupPeriod = null;
            return this;
        }

        /**
         * Setter for discountValue.
         * @param  discountValue  Double value for discountValue.
         * @return Builder
         */
        public Builder discountValue(Double discountValue) {
            this.discountValue = OptionalNullable.of(discountValue);
            return this;
        }

        /**
         * UnSetter for discountValue.
         * @return Builder
         */
        public Builder unsetDiscountValue() {
            discountValue = null;
            return this;
        }

        /**
         * Setter for pricePerUnit.
         * @param  pricePerUnit  Double value for pricePerUnit.
         * @return Builder
         */
        public Builder pricePerUnit(Double pricePerUnit) {
            this.pricePerUnit = OptionalNullable.of(pricePerUnit);
            return this;
        }

        /**
         * UnSetter for pricePerUnit.
         * @return Builder
         */
        public Builder unsetPricePerUnit() {
            pricePerUnit = null;
            return this;
        }

        /**
         * Setter for pricePerUnitAfterDiscount.
         * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
         * @return Builder
         */
        public Builder pricePerUnitAfterDiscount(Double pricePerUnitAfterDiscount) {
            this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
            return this;
        }

        /**
         * UnSetter for pricePerUnitAfterDiscount.
         * @return Builder
         */
        public Builder unsetPricePerUnitAfterDiscount() {
            pricePerUnitAfterDiscount = null;
            return this;
        }

        /**
         * Builds a new {@link Tier} object using the set fields.
         * @return {@link Tier}
         */
        public Tier build() {
            return new Tier(tierPriceListId, priceListDescription, tierMin, tierMax,
                    tieredPricingGroupName, tieredPricingGroupPeriod, discountValue, pricePerUnit,
                    pricePerUnitAfterDiscount);
        }
    }
}
