/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for PricingCurrentVolume type.
 */
public class PricingCurrentVolume {
    private OptionalNullable<Integer> feeRuleId;
    private OptionalNullable<String> feeRuleDescription;
    private OptionalNullable<Integer> priceRuleID;
    private OptionalNullable<String> priceRuleDescription;
    private OptionalNullable<Double> totalVolume;
    private OptionalNullable<String> nextFeeCreationDate;

    /**
     * Default constructor.
     */
    public PricingCurrentVolume() {
    }

    /**
     * Initialization constructor.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  priceRuleID  Integer value for priceRuleID.
     * @param  priceRuleDescription  String value for priceRuleDescription.
     * @param  totalVolume  Double value for totalVolume.
     * @param  nextFeeCreationDate  String value for nextFeeCreationDate.
     */
    public PricingCurrentVolume(
            Integer feeRuleId,
            String feeRuleDescription,
            Integer priceRuleID,
            String priceRuleDescription,
            Double totalVolume,
            String nextFeeCreationDate) {
        this.feeRuleId = OptionalNullable.of(feeRuleId);
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
        this.priceRuleID = OptionalNullable.of(priceRuleID);
        this.priceRuleDescription = OptionalNullable.of(priceRuleDescription);
        this.totalVolume = OptionalNullable.of(totalVolume);
        this.nextFeeCreationDate = OptionalNullable.of(nextFeeCreationDate);
    }

    /**
     * Initialization constructor.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  priceRuleID  Integer value for priceRuleID.
     * @param  priceRuleDescription  String value for priceRuleDescription.
     * @param  totalVolume  Double value for totalVolume.
     * @param  nextFeeCreationDate  String value for nextFeeCreationDate.
     */

    protected PricingCurrentVolume(OptionalNullable<Integer> feeRuleId,
            OptionalNullable<String> feeRuleDescription, OptionalNullable<Integer> priceRuleID,
            OptionalNullable<String> priceRuleDescription, OptionalNullable<Double> totalVolume,
            OptionalNullable<String> nextFeeCreationDate) {
        this.feeRuleId = feeRuleId;
        this.feeRuleDescription = feeRuleDescription;
        this.priceRuleID = priceRuleID;
        this.priceRuleDescription = priceRuleDescription;
        this.totalVolume = totalVolume;
        this.nextFeeCreationDate = nextFeeCreationDate;
    }

    /**
     * Internal Getter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer.
     * @return Returns the Internal Integer
     */
    @JsonGetter("FeeRuleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFeeRuleId() {
        return this.feeRuleId;
    }

    /**
     * Getter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer.
     * @return Returns the Integer
     */
    public Integer getFeeRuleId() {
        return OptionalNullable.getFrom(feeRuleId);
    }

    /**
     * Setter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer.
     * @param feeRuleId Value for Integer
     */
    @JsonSetter("FeeRuleId")
    public void setFeeRuleId(Integer feeRuleId) {
        this.feeRuleId = OptionalNullable.of(feeRuleId);
    }

    /**
     * UnSetter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer.
     */
    public void unsetFeeRuleId() {
        feeRuleId = null;
    }

    /**
     * Internal Getter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer
     * @return Returns the Internal String
     */
    @JsonGetter("FeeRuleDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeRuleDescription() {
        return this.feeRuleDescription;
    }

    /**
     * Getter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer
     * @return Returns the String
     */
    public String getFeeRuleDescription() {
        return OptionalNullable.getFrom(feeRuleDescription);
    }

    /**
     * Setter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer
     * @param feeRuleDescription Value for String
     */
    @JsonSetter("FeeRuleDescription")
    public void setFeeRuleDescription(String feeRuleDescription) {
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
    }

    /**
     * UnSetter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer
     */
    public void unsetFeeRuleDescription() {
        feeRuleDescription = null;
    }

    /**
     * Internal Getter for PriceRuleID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceRuleID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceRuleID() {
        return this.priceRuleID;
    }

    /**
     * Getter for PriceRuleID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     * @return Returns the Integer
     */
    public Integer getPriceRuleID() {
        return OptionalNullable.getFrom(priceRuleID);
    }

    /**
     * Setter for PriceRuleID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     * @param priceRuleID Value for Integer
     */
    @JsonSetter("PriceRuleID")
    public void setPriceRuleID(Integer priceRuleID) {
        this.priceRuleID = OptionalNullable.of(priceRuleID);
    }

    /**
     * UnSetter for PriceRuleID.
     * Pricing current period Pricing Price Rule ID that is associated to the payer.
     */
    public void unsetPriceRuleID() {
        priceRuleID = null;
    }

    /**
     * Internal Getter for PriceRuleDescription.
     * Pricing current period pricing rule description that is associated to the payer
     * @return Returns the Internal String
     */
    @JsonGetter("PriceRuleDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceRuleDescription() {
        return this.priceRuleDescription;
    }

    /**
     * Getter for PriceRuleDescription.
     * Pricing current period pricing rule description that is associated to the payer
     * @return Returns the String
     */
    public String getPriceRuleDescription() {
        return OptionalNullable.getFrom(priceRuleDescription);
    }

    /**
     * Setter for PriceRuleDescription.
     * Pricing current period pricing rule description that is associated to the payer
     * @param priceRuleDescription Value for String
     */
    @JsonSetter("PriceRuleDescription")
    public void setPriceRuleDescription(String priceRuleDescription) {
        this.priceRuleDescription = OptionalNullable.of(priceRuleDescription);
    }

    /**
     * UnSetter for PriceRuleDescription.
     * Pricing current period pricing rule description that is associated to the payer
     */
    public void unsetPriceRuleDescription() {
        priceRuleDescription = null;
    }

    /**
     * Internal Getter for TotalVolume.
     * Total volume consumption for the current period.
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalVolume")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalVolume() {
        return this.totalVolume;
    }

    /**
     * Getter for TotalVolume.
     * Total volume consumption for the current period.
     * @return Returns the Double
     */
    public Double getTotalVolume() {
        return OptionalNullable.getFrom(totalVolume);
    }

    /**
     * Setter for TotalVolume.
     * Total volume consumption for the current period.
     * @param totalVolume Value for Double
     */
    @JsonSetter("TotalVolume")
    public void setTotalVolume(Double totalVolume) {
        this.totalVolume = OptionalNullable.of(totalVolume);
    }

    /**
     * UnSetter for TotalVolume.
     * Total volume consumption for the current period.
     */
    public void unsetTotalVolume() {
        totalVolume = null;
    }

    /**
     * Internal Getter for NextFeeCreationDate.
     * Next Fee Rule Creation Date for that is associated to the payer. Format: YYYYMMDD
     * @return Returns the Internal String
     */
    @JsonGetter("NextFeeCreationDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNextFeeCreationDate() {
        return this.nextFeeCreationDate;
    }

    /**
     * Getter for NextFeeCreationDate.
     * Next Fee Rule Creation Date for that is associated to the payer. Format: YYYYMMDD
     * @return Returns the String
     */
    public String getNextFeeCreationDate() {
        return OptionalNullable.getFrom(nextFeeCreationDate);
    }

    /**
     * Setter for NextFeeCreationDate.
     * Next Fee Rule Creation Date for that is associated to the payer. Format: YYYYMMDD
     * @param nextFeeCreationDate Value for String
     */
    @JsonSetter("NextFeeCreationDate")
    public void setNextFeeCreationDate(String nextFeeCreationDate) {
        this.nextFeeCreationDate = OptionalNullable.of(nextFeeCreationDate);
    }

    /**
     * UnSetter for NextFeeCreationDate.
     * Next Fee Rule Creation Date for that is associated to the payer. Format: YYYYMMDD
     */
    public void unsetNextFeeCreationDate() {
        nextFeeCreationDate = null;
    }

    /**
     * Converts this PricingCurrentVolume into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PricingCurrentVolume [" + "feeRuleId=" + feeRuleId + ", feeRuleDescription="
                + feeRuleDescription + ", priceRuleID=" + priceRuleID + ", priceRuleDescription="
                + priceRuleDescription + ", totalVolume=" + totalVolume + ", nextFeeCreationDate="
                + nextFeeCreationDate + "]";
    }

    /**
     * Builds a new {@link PricingCurrentVolume.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PricingCurrentVolume.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.feeRuleId = internalGetFeeRuleId();
        builder.feeRuleDescription = internalGetFeeRuleDescription();
        builder.priceRuleID = internalGetPriceRuleID();
        builder.priceRuleDescription = internalGetPriceRuleDescription();
        builder.totalVolume = internalGetTotalVolume();
        builder.nextFeeCreationDate = internalGetNextFeeCreationDate();
        return builder;
    }

    /**
     * Class to build instances of {@link PricingCurrentVolume}.
     */
    public static class Builder {
        private OptionalNullable<Integer> feeRuleId;
        private OptionalNullable<String> feeRuleDescription;
        private OptionalNullable<Integer> priceRuleID;
        private OptionalNullable<String> priceRuleDescription;
        private OptionalNullable<Double> totalVolume;
        private OptionalNullable<String> nextFeeCreationDate;



        /**
         * Setter for feeRuleId.
         * @param  feeRuleId  Integer value for feeRuleId.
         * @return Builder
         */
        public Builder feeRuleId(Integer feeRuleId) {
            this.feeRuleId = OptionalNullable.of(feeRuleId);
            return this;
        }

        /**
         * UnSetter for feeRuleId.
         * @return Builder
         */
        public Builder unsetFeeRuleId() {
            feeRuleId = null;
            return this;
        }

        /**
         * Setter for feeRuleDescription.
         * @param  feeRuleDescription  String value for feeRuleDescription.
         * @return Builder
         */
        public Builder feeRuleDescription(String feeRuleDescription) {
            this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
            return this;
        }

        /**
         * UnSetter for feeRuleDescription.
         * @return Builder
         */
        public Builder unsetFeeRuleDescription() {
            feeRuleDescription = null;
            return this;
        }

        /**
         * Setter for priceRuleID.
         * @param  priceRuleID  Integer value for priceRuleID.
         * @return Builder
         */
        public Builder priceRuleID(Integer priceRuleID) {
            this.priceRuleID = OptionalNullable.of(priceRuleID);
            return this;
        }

        /**
         * UnSetter for priceRuleID.
         * @return Builder
         */
        public Builder unsetPriceRuleID() {
            priceRuleID = null;
            return this;
        }

        /**
         * Setter for priceRuleDescription.
         * @param  priceRuleDescription  String value for priceRuleDescription.
         * @return Builder
         */
        public Builder priceRuleDescription(String priceRuleDescription) {
            this.priceRuleDescription = OptionalNullable.of(priceRuleDescription);
            return this;
        }

        /**
         * UnSetter for priceRuleDescription.
         * @return Builder
         */
        public Builder unsetPriceRuleDescription() {
            priceRuleDescription = null;
            return this;
        }

        /**
         * Setter for totalVolume.
         * @param  totalVolume  Double value for totalVolume.
         * @return Builder
         */
        public Builder totalVolume(Double totalVolume) {
            this.totalVolume = OptionalNullable.of(totalVolume);
            return this;
        }

        /**
         * UnSetter for totalVolume.
         * @return Builder
         */
        public Builder unsetTotalVolume() {
            totalVolume = null;
            return this;
        }

        /**
         * Setter for nextFeeCreationDate.
         * @param  nextFeeCreationDate  String value for nextFeeCreationDate.
         * @return Builder
         */
        public Builder nextFeeCreationDate(String nextFeeCreationDate) {
            this.nextFeeCreationDate = OptionalNullable.of(nextFeeCreationDate);
            return this;
        }

        /**
         * UnSetter for nextFeeCreationDate.
         * @return Builder
         */
        public Builder unsetNextFeeCreationDate() {
            nextFeeCreationDate = null;
            return this;
        }

        /**
         * Builds a new {@link PricingCurrentVolume} object using the set fields.
         * @return {@link PricingCurrentVolume}
         */
        public PricingCurrentVolume build() {
            return new PricingCurrentVolume(feeRuleId, feeRuleDescription, priceRuleID,
                    priceRuleDescription, totalVolume, nextFeeCreationDate);
        }
    }
}
