/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for SearchDocumentsResponse type.
 */
public class SearchDocumentsResponse {
    private String requestId;
    private String status;
    private List<SearchDocumentsInvoice> data;
    private Integer totalRecords;
    private Integer totalRecordsOnPage;
    private Boolean isFirstPage;
    private Boolean isLastPage;

    /**
     * Default constructor.
     */
    public SearchDocumentsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  status  String value for status.
     * @param  data  List of SearchDocumentsInvoice value for data.
     * @param  totalRecords  Integer value for totalRecords.
     * @param  totalRecordsOnPage  Integer value for totalRecordsOnPage.
     * @param  isFirstPage  Boolean value for isFirstPage.
     * @param  isLastPage  Boolean value for isLastPage.
     */
    public SearchDocumentsResponse(
            String requestId,
            String status,
            List<SearchDocumentsInvoice> data,
            Integer totalRecords,
            Integer totalRecordsOnPage,
            Boolean isFirstPage,
            Boolean isLastPage) {
        this.requestId = requestId;
        this.status = status;
        this.data = data;
        this.totalRecords = totalRecords;
        this.totalRecordsOnPage = totalRecordsOnPage;
        this.isFirstPage = isFirstPage;
        this.isLastPage = isLastPage;
    }

    /**
     * Getter for RequestId.
     * UUID (according to RFC 4122 standards) for requests and responses. This will be played back
     * in the response from the request.
     * @return Returns the String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * UUID (according to RFC 4122 standards) for requests and responses. This will be played back
     * in the response from the request.
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Getter for Status.
     * Indicates overall status of the request. Allowed values: SUCCES, FAILED
     * @return Returns the String
     */
    @JsonGetter("Status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Indicates overall status of the request. Allowed values: SUCCES, FAILED
     * @param status Value for String
     */
    @JsonSetter("Status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Data.
     * @return Returns the List of SearchDocumentsInvoice
     */
    @JsonGetter("Data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SearchDocumentsInvoice> getData() {
        return data;
    }

    /**
     * Setter for Data.
     * @param data Value for List of SearchDocumentsInvoice
     */
    @JsonSetter("Data")
    public void setData(List<SearchDocumentsInvoice> data) {
        this.data = data;
    }

    /**
     * Getter for TotalRecords.
     * Total number of elements corresponding to the request
     * @return Returns the Integer
     */
    @JsonGetter("TotalRecords")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTotalRecords() {
        return totalRecords;
    }

    /**
     * Setter for TotalRecords.
     * Total number of elements corresponding to the request
     * @param totalRecords Value for Integer
     */
    @JsonSetter("TotalRecords")
    public void setTotalRecords(Integer totalRecords) {
        this.totalRecords = totalRecords;
    }

    /**
     * Getter for TotalRecordsOnPage.
     * Number of elements in the page content. Will be lesser or equal to the size param.
     * @return Returns the Integer
     */
    @JsonGetter("TotalRecordsOnPage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTotalRecordsOnPage() {
        return totalRecordsOnPage;
    }

    /**
     * Setter for TotalRecordsOnPage.
     * Number of elements in the page content. Will be lesser or equal to the size param.
     * @param totalRecordsOnPage Value for Integer
     */
    @JsonSetter("TotalRecordsOnPage")
    public void setTotalRecordsOnPage(Integer totalRecordsOnPage) {
        this.totalRecordsOnPage = totalRecordsOnPage;
    }

    /**
     * Getter for IsFirstPage.
     * True if it is the first page, false otherwise
     * @return Returns the Boolean
     */
    @JsonGetter("IsFirstPage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsFirstPage() {
        return isFirstPage;
    }

    /**
     * Setter for IsFirstPage.
     * True if it is the first page, false otherwise
     * @param isFirstPage Value for Boolean
     */
    @JsonSetter("IsFirstPage")
    public void setIsFirstPage(Boolean isFirstPage) {
        this.isFirstPage = isFirstPage;
    }

    /**
     * Getter for IsLastPage.
     * True if it is the last page, false, otherwise.
     * @return Returns the Boolean
     */
    @JsonGetter("IsLastPage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsLastPage() {
        return isLastPage;
    }

    /**
     * Setter for IsLastPage.
     * True if it is the last page, false, otherwise.
     * @param isLastPage Value for Boolean
     */
    @JsonSetter("IsLastPage")
    public void setIsLastPage(Boolean isLastPage) {
        this.isLastPage = isLastPage;
    }

    /**
     * Converts this SearchDocumentsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SearchDocumentsResponse [" + "requestId=" + requestId + ", status=" + status
                + ", data=" + data + ", totalRecords=" + totalRecords + ", totalRecordsOnPage="
                + totalRecordsOnPage + ", isFirstPage=" + isFirstPage + ", isLastPage=" + isLastPage
                + "]";
    }

    /**
     * Builds a new {@link SearchDocumentsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SearchDocumentsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .requestId(getRequestId())
                .status(getStatus())
                .data(getData())
                .totalRecords(getTotalRecords())
                .totalRecordsOnPage(getTotalRecordsOnPage())
                .isFirstPage(getIsFirstPage())
                .isLastPage(getIsLastPage());
        return builder;
    }

    /**
     * Class to build instances of {@link SearchDocumentsResponse}.
     */
    public static class Builder {
        private String requestId;
        private String status;
        private List<SearchDocumentsInvoice> data;
        private Integer totalRecords;
        private Integer totalRecordsOnPage;
        private Boolean isFirstPage;
        private Boolean isLastPage;



        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for data.
         * @param  data  List of SearchDocumentsInvoice value for data.
         * @return Builder
         */
        public Builder data(List<SearchDocumentsInvoice> data) {
            this.data = data;
            return this;
        }

        /**
         * Setter for totalRecords.
         * @param  totalRecords  Integer value for totalRecords.
         * @return Builder
         */
        public Builder totalRecords(Integer totalRecords) {
            this.totalRecords = totalRecords;
            return this;
        }

        /**
         * Setter for totalRecordsOnPage.
         * @param  totalRecordsOnPage  Integer value for totalRecordsOnPage.
         * @return Builder
         */
        public Builder totalRecordsOnPage(Integer totalRecordsOnPage) {
            this.totalRecordsOnPage = totalRecordsOnPage;
            return this;
        }

        /**
         * Setter for isFirstPage.
         * @param  isFirstPage  Boolean value for isFirstPage.
         * @return Builder
         */
        public Builder isFirstPage(Boolean isFirstPage) {
            this.isFirstPage = isFirstPage;
            return this;
        }

        /**
         * Setter for isLastPage.
         * @param  isLastPage  Boolean value for isLastPage.
         * @return Builder
         */
        public Builder isLastPage(Boolean isLastPage) {
            this.isLastPage = isLastPage;
            return this;
        }

        /**
         * Builds a new {@link SearchDocumentsResponse} object using the set fields.
         * @return {@link SearchDocumentsResponse}
         */
        public SearchDocumentsResponse build() {
            return new SearchDocumentsResponse(requestId, status, data, totalRecords,
                    totalRecordsOnPage, isFirstPage, isLastPage);
        }
    }
}
