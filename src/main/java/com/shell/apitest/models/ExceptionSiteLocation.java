/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ExceptionSiteLocation type.
 */
public class ExceptionSiteLocation {
    private OptionalNullable<String> lat;
    private OptionalNullable<String> lng;

    /**
     * Default constructor.
     */
    public ExceptionSiteLocation() {
    }

    /**
     * Initialization constructor.
     * @param  lat  String value for lat.
     * @param  lng  String value for lng.
     */
    public ExceptionSiteLocation(
            String lat,
            String lng) {
        this.lat = OptionalNullable.of(lat);
        this.lng = OptionalNullable.of(lng);
    }

    /**
     * Initialization constructor.
     * @param  lat  String value for lat.
     * @param  lng  String value for lng.
     */

    protected ExceptionSiteLocation(OptionalNullable<String> lat, OptionalNullable<String> lng) {
        this.lat = lat;
        this.lng = lng;
    }

    /**
     * Internal Getter for Lat.
     * Latitude for the Site Geographic Location
     * @return Returns the Internal String
     */
    @JsonGetter("Lat")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLat() {
        return this.lat;
    }

    /**
     * Getter for Lat.
     * Latitude for the Site Geographic Location
     * @return Returns the String
     */
    public String getLat() {
        return OptionalNullable.getFrom(lat);
    }

    /**
     * Setter for Lat.
     * Latitude for the Site Geographic Location
     * @param lat Value for String
     */
    @JsonSetter("Lat")
    public void setLat(String lat) {
        this.lat = OptionalNullable.of(lat);
    }

    /**
     * UnSetter for Lat.
     * Latitude for the Site Geographic Location
     */
    public void unsetLat() {
        lat = null;
    }

    /**
     * Internal Getter for Lng.
     * Longitude for the Site Geographic Location
     * @return Returns the Internal String
     */
    @JsonGetter("Lng")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLng() {
        return this.lng;
    }

    /**
     * Getter for Lng.
     * Longitude for the Site Geographic Location
     * @return Returns the String
     */
    public String getLng() {
        return OptionalNullable.getFrom(lng);
    }

    /**
     * Setter for Lng.
     * Longitude for the Site Geographic Location
     * @param lng Value for String
     */
    @JsonSetter("Lng")
    public void setLng(String lng) {
        this.lng = OptionalNullable.of(lng);
    }

    /**
     * UnSetter for Lng.
     * Longitude for the Site Geographic Location
     */
    public void unsetLng() {
        lng = null;
    }

    /**
     * Converts this ExceptionSiteLocation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ExceptionSiteLocation [" + "lat=" + lat + ", lng=" + lng + "]";
    }

    /**
     * Builds a new {@link ExceptionSiteLocation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ExceptionSiteLocation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.lat = internalGetLat();
        builder.lng = internalGetLng();
        return builder;
    }

    /**
     * Class to build instances of {@link ExceptionSiteLocation}.
     */
    public static class Builder {
        private OptionalNullable<String> lat;
        private OptionalNullable<String> lng;



        /**
         * Setter for lat.
         * @param  lat  String value for lat.
         * @return Builder
         */
        public Builder lat(String lat) {
            this.lat = OptionalNullable.of(lat);
            return this;
        }

        /**
         * UnSetter for lat.
         * @return Builder
         */
        public Builder unsetLat() {
            lat = null;
            return this;
        }

        /**
         * Setter for lng.
         * @param  lng  String value for lng.
         * @return Builder
         */
        public Builder lng(String lng) {
            this.lng = OptionalNullable.of(lng);
            return this;
        }

        /**
         * UnSetter for lng.
         * @return Builder
         */
        public Builder unsetLng() {
            lng = null;
            return this;
        }

        /**
         * Builds a new {@link ExceptionSiteLocation} object using the set fields.
         * @return {@link ExceptionSiteLocation}
         */
        public ExceptionSiteLocation build() {
            return new ExceptionSiteLocation(lat, lng);
        }
    }
}
