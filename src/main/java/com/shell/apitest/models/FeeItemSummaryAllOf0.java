/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for FeeItemSummaryAllOf0 type.
 */
public class FeeItemSummaryAllOf0 {
    private OptionalNullable<String> feeTypeGroup;
    private OptionalNullable<String> feeTypeId;
    private OptionalNullable<Integer> productId;
    private OptionalNullable<String> productCode;
    private OptionalNullable<String> productName;
    private OptionalNullable<Integer> productGroupId;
    private OptionalNullable<String> productGroupName;
    private OptionalNullable<Double> totalQuantity;
    private OptionalNullable<Double> totalInvoiceNetAmount;
    private OptionalNullable<Double> totalInvoiceGrossAmount;
    private OptionalNullable<Double> totalInvoiceVATAmount;
    private OptionalNullable<String> invoiceCurrencyCode;
    private OptionalNullable<String> invoiceCurrencySymbol;

    /**
     * Default constructor.
     */
    public FeeItemSummaryAllOf0() {
    }

    /**
     * Initialization constructor.
     * @param  feeTypeGroup  String value for feeTypeGroup.
     * @param  feeTypeId  String value for feeTypeId.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  totalQuantity  Double value for totalQuantity.
     * @param  totalInvoiceNetAmount  Double value for totalInvoiceNetAmount.
     * @param  totalInvoiceGrossAmount  Double value for totalInvoiceGrossAmount.
     * @param  totalInvoiceVATAmount  Double value for totalInvoiceVATAmount.
     * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
     * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
     */
    public FeeItemSummaryAllOf0(
            String feeTypeGroup,
            String feeTypeId,
            Integer productId,
            String productCode,
            String productName,
            Integer productGroupId,
            String productGroupName,
            Double totalQuantity,
            Double totalInvoiceNetAmount,
            Double totalInvoiceGrossAmount,
            Double totalInvoiceVATAmount,
            String invoiceCurrencyCode,
            String invoiceCurrencySymbol) {
        this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
        this.feeTypeId = OptionalNullable.of(feeTypeId);
        this.productId = OptionalNullable.of(productId);
        this.productCode = OptionalNullable.of(productCode);
        this.productName = OptionalNullable.of(productName);
        this.productGroupId = OptionalNullable.of(productGroupId);
        this.productGroupName = OptionalNullable.of(productGroupName);
        this.totalQuantity = OptionalNullable.of(totalQuantity);
        this.totalInvoiceNetAmount = OptionalNullable.of(totalInvoiceNetAmount);
        this.totalInvoiceGrossAmount = OptionalNullable.of(totalInvoiceGrossAmount);
        this.totalInvoiceVATAmount = OptionalNullable.of(totalInvoiceVATAmount);
        this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
        this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
    }

    /**
     * Initialization constructor.
     * @param  feeTypeGroup  String value for feeTypeGroup.
     * @param  feeTypeId  String value for feeTypeId.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  totalQuantity  Double value for totalQuantity.
     * @param  totalInvoiceNetAmount  Double value for totalInvoiceNetAmount.
     * @param  totalInvoiceGrossAmount  Double value for totalInvoiceGrossAmount.
     * @param  totalInvoiceVATAmount  Double value for totalInvoiceVATAmount.
     * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
     * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
     */

    protected FeeItemSummaryAllOf0(OptionalNullable<String> feeTypeGroup,
            OptionalNullable<String> feeTypeId, OptionalNullable<Integer> productId,
            OptionalNullable<String> productCode, OptionalNullable<String> productName,
            OptionalNullable<Integer> productGroupId, OptionalNullable<String> productGroupName,
            OptionalNullable<Double> totalQuantity, OptionalNullable<Double> totalInvoiceNetAmount,
            OptionalNullable<Double> totalInvoiceGrossAmount,
            OptionalNullable<Double> totalInvoiceVATAmount,
            OptionalNullable<String> invoiceCurrencyCode,
            OptionalNullable<String> invoiceCurrencySymbol) {
        this.feeTypeGroup = feeTypeGroup;
        this.feeTypeId = feeTypeId;
        this.productId = productId;
        this.productCode = productCode;
        this.productName = productName;
        this.productGroupId = productGroupId;
        this.productGroupName = productGroupName;
        this.totalQuantity = totalQuantity;
        this.totalInvoiceNetAmount = totalInvoiceNetAmount;
        this.totalInvoiceGrossAmount = totalInvoiceGrossAmount;
        this.totalInvoiceVATAmount = totalInvoiceVATAmount;
        this.invoiceCurrencyCode = invoiceCurrencyCode;
        this.invoiceCurrencySymbol = invoiceCurrencySymbol;
    }

    /**
     * Internal Getter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated.
     * @return Returns the Internal String
     */
    @JsonGetter("FeeTypeGroup")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeTypeGroup() {
        return this.feeTypeGroup;
    }

    /**
     * Getter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated.
     * @return Returns the String
     */
    public String getFeeTypeGroup() {
        return OptionalNullable.getFrom(feeTypeGroup);
    }

    /**
     * Setter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated.
     * @param feeTypeGroup Value for String
     */
    @JsonSetter("FeeTypeGroup")
    public void setFeeTypeGroup(String feeTypeGroup) {
        this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
    }

    /**
     * UnSetter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated.
     */
    public void unsetFeeTypeGroup() {
        feeTypeGroup = null;
    }

    /**
     * Internal Getter for FeeTypeId.
     * Fee Type Id ID Description
     * @return Returns the Internal String
     */
    @JsonGetter("FeeTypeId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeTypeId() {
        return this.feeTypeId;
    }

    /**
     * Getter for FeeTypeId.
     * Fee Type Id ID Description
     * @return Returns the String
     */
    public String getFeeTypeId() {
        return OptionalNullable.getFrom(feeTypeId);
    }

    /**
     * Setter for FeeTypeId.
     * Fee Type Id ID Description
     * @param feeTypeId Value for String
     */
    @JsonSetter("FeeTypeId")
    public void setFeeTypeId(String feeTypeId) {
        this.feeTypeId = OptionalNullable.of(feeTypeId);
    }

    /**
     * UnSetter for FeeTypeId.
     * Fee Type Id ID Description
     */
    public void unsetFeeTypeId() {
        feeTypeId = null;
    }

    /**
     * Internal Getter for ProductId.
     * Product Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductId() {
        return this.productId;
    }

    /**
     * Getter for ProductId.
     * Product Id
     * @return Returns the Integer
     */
    public Integer getProductId() {
        return OptionalNullable.getFrom(productId);
    }

    /**
     * Setter for ProductId.
     * Product Id
     * @param productId Value for Integer
     */
    @JsonSetter("ProductId")
    public void setProductId(Integer productId) {
        this.productId = OptionalNullable.of(productId);
    }

    /**
     * UnSetter for ProductId.
     * Product Id
     */
    public void unsetProductId() {
        productId = null;
    }

    /**
     * Internal Getter for ProductCode.
     * Product Code
     * @return Returns the Internal String
     */
    @JsonGetter("ProductCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductCode() {
        return this.productCode;
    }

    /**
     * Getter for ProductCode.
     * Product Code
     * @return Returns the String
     */
    public String getProductCode() {
        return OptionalNullable.getFrom(productCode);
    }

    /**
     * Setter for ProductCode.
     * Product Code
     * @param productCode Value for String
     */
    @JsonSetter("ProductCode")
    public void setProductCode(String productCode) {
        this.productCode = OptionalNullable.of(productCode);
    }

    /**
     * UnSetter for ProductCode.
     * Product Code
     */
    public void unsetProductCode() {
        productCode = null;
    }

    /**
     * Internal Getter for ProductName.
     * Product Name
     * @return Returns the Internal String
     */
    @JsonGetter("ProductName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductName() {
        return this.productName;
    }

    /**
     * Getter for ProductName.
     * Product Name
     * @return Returns the String
     */
    public String getProductName() {
        return OptionalNullable.getFrom(productName);
    }

    /**
     * Setter for ProductName.
     * Product Name
     * @param productName Value for String
     */
    @JsonSetter("ProductName")
    public void setProductName(String productName) {
        this.productName = OptionalNullable.of(productName);
    }

    /**
     * UnSetter for ProductName.
     * Product Name
     */
    public void unsetProductName() {
        productName = null;
    }

    /**
     * Internal Getter for ProductGroupId.
     * Product Group Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductGroupId() {
        return this.productGroupId;
    }

    /**
     * Getter for ProductGroupId.
     * Product Group Id
     * @return Returns the Integer
     */
    public Integer getProductGroupId() {
        return OptionalNullable.getFrom(productGroupId);
    }

    /**
     * Setter for ProductGroupId.
     * Product Group Id
     * @param productGroupId Value for Integer
     */
    @JsonSetter("ProductGroupId")
    public void setProductGroupId(Integer productGroupId) {
        this.productGroupId = OptionalNullable.of(productGroupId);
    }

    /**
     * UnSetter for ProductGroupId.
     * Product Group Id
     */
    public void unsetProductGroupId() {
        productGroupId = null;
    }

    /**
     * Internal Getter for ProductGroupName.
     * Product Group Name
     * @return Returns the Internal String
     */
    @JsonGetter("ProductGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductGroupName() {
        return this.productGroupName;
    }

    /**
     * Getter for ProductGroupName.
     * Product Group Name
     * @return Returns the String
     */
    public String getProductGroupName() {
        return OptionalNullable.getFrom(productGroupName);
    }

    /**
     * Setter for ProductGroupName.
     * Product Group Name
     * @param productGroupName Value for String
     */
    @JsonSetter("ProductGroupName")
    public void setProductGroupName(String productGroupName) {
        this.productGroupName = OptionalNullable.of(productGroupName);
    }

    /**
     * UnSetter for ProductGroupName.
     * Product Group Name
     */
    public void unsetProductGroupName() {
        productGroupName = null;
    }

    /**
     * Internal Getter for TotalQuantity.
     * Total Quantity
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalQuantity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalQuantity() {
        return this.totalQuantity;
    }

    /**
     * Getter for TotalQuantity.
     * Total Quantity
     * @return Returns the Double
     */
    public Double getTotalQuantity() {
        return OptionalNullable.getFrom(totalQuantity);
    }

    /**
     * Setter for TotalQuantity.
     * Total Quantity
     * @param totalQuantity Value for Double
     */
    @JsonSetter("TotalQuantity")
    public void setTotalQuantity(Double totalQuantity) {
        this.totalQuantity = OptionalNullable.of(totalQuantity);
    }

    /**
     * UnSetter for TotalQuantity.
     * Total Quantity
     */
    public void unsetTotalQuantity() {
        totalQuantity = null;
    }

    /**
     * Internal Getter for TotalInvoiceNetAmount.
     * Total Net amount in invoice currency
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalInvoiceNetAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalInvoiceNetAmount() {
        return this.totalInvoiceNetAmount;
    }

    /**
     * Getter for TotalInvoiceNetAmount.
     * Total Net amount in invoice currency
     * @return Returns the Double
     */
    public Double getTotalInvoiceNetAmount() {
        return OptionalNullable.getFrom(totalInvoiceNetAmount);
    }

    /**
     * Setter for TotalInvoiceNetAmount.
     * Total Net amount in invoice currency
     * @param totalInvoiceNetAmount Value for Double
     */
    @JsonSetter("TotalInvoiceNetAmount")
    public void setTotalInvoiceNetAmount(Double totalInvoiceNetAmount) {
        this.totalInvoiceNetAmount = OptionalNullable.of(totalInvoiceNetAmount);
    }

    /**
     * UnSetter for TotalInvoiceNetAmount.
     * Total Net amount in invoice currency
     */
    public void unsetTotalInvoiceNetAmount() {
        totalInvoiceNetAmount = null;
    }

    /**
     * Internal Getter for TotalInvoiceGrossAmount.
     * Total Gross amount in invoice currency
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalInvoiceGrossAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalInvoiceGrossAmount() {
        return this.totalInvoiceGrossAmount;
    }

    /**
     * Getter for TotalInvoiceGrossAmount.
     * Total Gross amount in invoice currency
     * @return Returns the Double
     */
    public Double getTotalInvoiceGrossAmount() {
        return OptionalNullable.getFrom(totalInvoiceGrossAmount);
    }

    /**
     * Setter for TotalInvoiceGrossAmount.
     * Total Gross amount in invoice currency
     * @param totalInvoiceGrossAmount Value for Double
     */
    @JsonSetter("TotalInvoiceGrossAmount")
    public void setTotalInvoiceGrossAmount(Double totalInvoiceGrossAmount) {
        this.totalInvoiceGrossAmount = OptionalNullable.of(totalInvoiceGrossAmount);
    }

    /**
     * UnSetter for TotalInvoiceGrossAmount.
     * Total Gross amount in invoice currency
     */
    public void unsetTotalInvoiceGrossAmount() {
        totalInvoiceGrossAmount = null;
    }

    /**
     * Internal Getter for TotalInvoiceVATAmount.
     * Total VAT amount in invoice currency
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalInvoiceVATAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalInvoiceVATAmount() {
        return this.totalInvoiceVATAmount;
    }

    /**
     * Getter for TotalInvoiceVATAmount.
     * Total VAT amount in invoice currency
     * @return Returns the Double
     */
    public Double getTotalInvoiceVATAmount() {
        return OptionalNullable.getFrom(totalInvoiceVATAmount);
    }

    /**
     * Setter for TotalInvoiceVATAmount.
     * Total VAT amount in invoice currency
     * @param totalInvoiceVATAmount Value for Double
     */
    @JsonSetter("TotalInvoiceVATAmount")
    public void setTotalInvoiceVATAmount(Double totalInvoiceVATAmount) {
        this.totalInvoiceVATAmount = OptionalNullable.of(totalInvoiceVATAmount);
    }

    /**
     * UnSetter for TotalInvoiceVATAmount.
     * Total VAT amount in invoice currency
     */
    public void unsetTotalInvoiceVATAmount() {
        totalInvoiceVATAmount = null;
    }

    /**
     * Internal Getter for InvoiceCurrencyCode.
     * ISO 4217 currency code of the country
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceCurrencyCode() {
        return this.invoiceCurrencyCode;
    }

    /**
     * Getter for InvoiceCurrencyCode.
     * ISO 4217 currency code of the country
     * @return Returns the String
     */
    public String getInvoiceCurrencyCode() {
        return OptionalNullable.getFrom(invoiceCurrencyCode);
    }

    /**
     * Setter for InvoiceCurrencyCode.
     * ISO 4217 currency code of the country
     * @param invoiceCurrencyCode Value for String
     */
    @JsonSetter("InvoiceCurrencyCode")
    public void setInvoiceCurrencyCode(String invoiceCurrencyCode) {
        this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
    }

    /**
     * UnSetter for InvoiceCurrencyCode.
     * ISO 4217 currency code of the country
     */
    public void unsetInvoiceCurrencyCode() {
        invoiceCurrencyCode = null;
    }

    /**
     * Internal Getter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceCurrencySymbol() {
        return this.invoiceCurrencySymbol;
    }

    /**
     * Getter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code
     * @return Returns the String
     */
    public String getInvoiceCurrencySymbol() {
        return OptionalNullable.getFrom(invoiceCurrencySymbol);
    }

    /**
     * Setter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code
     * @param invoiceCurrencySymbol Value for String
     */
    @JsonSetter("InvoiceCurrencySymbol")
    public void setInvoiceCurrencySymbol(String invoiceCurrencySymbol) {
        this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
    }

    /**
     * UnSetter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code
     */
    public void unsetInvoiceCurrencySymbol() {
        invoiceCurrencySymbol = null;
    }

    /**
     * Converts this FeeItemSummaryAllOf0 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FeeItemSummaryAllOf0 [" + "feeTypeGroup=" + feeTypeGroup + ", feeTypeId="
                + feeTypeId + ", productId=" + productId + ", productCode=" + productCode
                + ", productName=" + productName + ", productGroupId=" + productGroupId
                + ", productGroupName=" + productGroupName + ", totalQuantity=" + totalQuantity
                + ", totalInvoiceNetAmount=" + totalInvoiceNetAmount + ", totalInvoiceGrossAmount="
                + totalInvoiceGrossAmount + ", totalInvoiceVATAmount=" + totalInvoiceVATAmount
                + ", invoiceCurrencyCode=" + invoiceCurrencyCode + ", invoiceCurrencySymbol="
                + invoiceCurrencySymbol + "]";
    }

    /**
     * Builds a new {@link FeeItemSummaryAllOf0.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FeeItemSummaryAllOf0.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.feeTypeGroup = internalGetFeeTypeGroup();
        builder.feeTypeId = internalGetFeeTypeId();
        builder.productId = internalGetProductId();
        builder.productCode = internalGetProductCode();
        builder.productName = internalGetProductName();
        builder.productGroupId = internalGetProductGroupId();
        builder.productGroupName = internalGetProductGroupName();
        builder.totalQuantity = internalGetTotalQuantity();
        builder.totalInvoiceNetAmount = internalGetTotalInvoiceNetAmount();
        builder.totalInvoiceGrossAmount = internalGetTotalInvoiceGrossAmount();
        builder.totalInvoiceVATAmount = internalGetTotalInvoiceVATAmount();
        builder.invoiceCurrencyCode = internalGetInvoiceCurrencyCode();
        builder.invoiceCurrencySymbol = internalGetInvoiceCurrencySymbol();
        return builder;
    }

    /**
     * Class to build instances of {@link FeeItemSummaryAllOf0}.
     */
    public static class Builder {
        private OptionalNullable<String> feeTypeGroup;
        private OptionalNullable<String> feeTypeId;
        private OptionalNullable<Integer> productId;
        private OptionalNullable<String> productCode;
        private OptionalNullable<String> productName;
        private OptionalNullable<Integer> productGroupId;
        private OptionalNullable<String> productGroupName;
        private OptionalNullable<Double> totalQuantity;
        private OptionalNullable<Double> totalInvoiceNetAmount;
        private OptionalNullable<Double> totalInvoiceGrossAmount;
        private OptionalNullable<Double> totalInvoiceVATAmount;
        private OptionalNullable<String> invoiceCurrencyCode;
        private OptionalNullable<String> invoiceCurrencySymbol;



        /**
         * Setter for feeTypeGroup.
         * @param  feeTypeGroup  String value for feeTypeGroup.
         * @return Builder
         */
        public Builder feeTypeGroup(String feeTypeGroup) {
            this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
            return this;
        }

        /**
         * UnSetter for feeTypeGroup.
         * @return Builder
         */
        public Builder unsetFeeTypeGroup() {
            feeTypeGroup = null;
            return this;
        }

        /**
         * Setter for feeTypeId.
         * @param  feeTypeId  String value for feeTypeId.
         * @return Builder
         */
        public Builder feeTypeId(String feeTypeId) {
            this.feeTypeId = OptionalNullable.of(feeTypeId);
            return this;
        }

        /**
         * UnSetter for feeTypeId.
         * @return Builder
         */
        public Builder unsetFeeTypeId() {
            feeTypeId = null;
            return this;
        }

        /**
         * Setter for productId.
         * @param  productId  Integer value for productId.
         * @return Builder
         */
        public Builder productId(Integer productId) {
            this.productId = OptionalNullable.of(productId);
            return this;
        }

        /**
         * UnSetter for productId.
         * @return Builder
         */
        public Builder unsetProductId() {
            productId = null;
            return this;
        }

        /**
         * Setter for productCode.
         * @param  productCode  String value for productCode.
         * @return Builder
         */
        public Builder productCode(String productCode) {
            this.productCode = OptionalNullable.of(productCode);
            return this;
        }

        /**
         * UnSetter for productCode.
         * @return Builder
         */
        public Builder unsetProductCode() {
            productCode = null;
            return this;
        }

        /**
         * Setter for productName.
         * @param  productName  String value for productName.
         * @return Builder
         */
        public Builder productName(String productName) {
            this.productName = OptionalNullable.of(productName);
            return this;
        }

        /**
         * UnSetter for productName.
         * @return Builder
         */
        public Builder unsetProductName() {
            productName = null;
            return this;
        }

        /**
         * Setter for productGroupId.
         * @param  productGroupId  Integer value for productGroupId.
         * @return Builder
         */
        public Builder productGroupId(Integer productGroupId) {
            this.productGroupId = OptionalNullable.of(productGroupId);
            return this;
        }

        /**
         * UnSetter for productGroupId.
         * @return Builder
         */
        public Builder unsetProductGroupId() {
            productGroupId = null;
            return this;
        }

        /**
         * Setter for productGroupName.
         * @param  productGroupName  String value for productGroupName.
         * @return Builder
         */
        public Builder productGroupName(String productGroupName) {
            this.productGroupName = OptionalNullable.of(productGroupName);
            return this;
        }

        /**
         * UnSetter for productGroupName.
         * @return Builder
         */
        public Builder unsetProductGroupName() {
            productGroupName = null;
            return this;
        }

        /**
         * Setter for totalQuantity.
         * @param  totalQuantity  Double value for totalQuantity.
         * @return Builder
         */
        public Builder totalQuantity(Double totalQuantity) {
            this.totalQuantity = OptionalNullable.of(totalQuantity);
            return this;
        }

        /**
         * UnSetter for totalQuantity.
         * @return Builder
         */
        public Builder unsetTotalQuantity() {
            totalQuantity = null;
            return this;
        }

        /**
         * Setter for totalInvoiceNetAmount.
         * @param  totalInvoiceNetAmount  Double value for totalInvoiceNetAmount.
         * @return Builder
         */
        public Builder totalInvoiceNetAmount(Double totalInvoiceNetAmount) {
            this.totalInvoiceNetAmount = OptionalNullable.of(totalInvoiceNetAmount);
            return this;
        }

        /**
         * UnSetter for totalInvoiceNetAmount.
         * @return Builder
         */
        public Builder unsetTotalInvoiceNetAmount() {
            totalInvoiceNetAmount = null;
            return this;
        }

        /**
         * Setter for totalInvoiceGrossAmount.
         * @param  totalInvoiceGrossAmount  Double value for totalInvoiceGrossAmount.
         * @return Builder
         */
        public Builder totalInvoiceGrossAmount(Double totalInvoiceGrossAmount) {
            this.totalInvoiceGrossAmount = OptionalNullable.of(totalInvoiceGrossAmount);
            return this;
        }

        /**
         * UnSetter for totalInvoiceGrossAmount.
         * @return Builder
         */
        public Builder unsetTotalInvoiceGrossAmount() {
            totalInvoiceGrossAmount = null;
            return this;
        }

        /**
         * Setter for totalInvoiceVATAmount.
         * @param  totalInvoiceVATAmount  Double value for totalInvoiceVATAmount.
         * @return Builder
         */
        public Builder totalInvoiceVATAmount(Double totalInvoiceVATAmount) {
            this.totalInvoiceVATAmount = OptionalNullable.of(totalInvoiceVATAmount);
            return this;
        }

        /**
         * UnSetter for totalInvoiceVATAmount.
         * @return Builder
         */
        public Builder unsetTotalInvoiceVATAmount() {
            totalInvoiceVATAmount = null;
            return this;
        }

        /**
         * Setter for invoiceCurrencyCode.
         * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
         * @return Builder
         */
        public Builder invoiceCurrencyCode(String invoiceCurrencyCode) {
            this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
            return this;
        }

        /**
         * UnSetter for invoiceCurrencyCode.
         * @return Builder
         */
        public Builder unsetInvoiceCurrencyCode() {
            invoiceCurrencyCode = null;
            return this;
        }

        /**
         * Setter for invoiceCurrencySymbol.
         * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
         * @return Builder
         */
        public Builder invoiceCurrencySymbol(String invoiceCurrencySymbol) {
            this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
            return this;
        }

        /**
         * UnSetter for invoiceCurrencySymbol.
         * @return Builder
         */
        public Builder unsetInvoiceCurrencySymbol() {
            invoiceCurrencySymbol = null;
            return this;
        }

        /**
         * Builds a new {@link FeeItemSummaryAllOf0} object using the set fields.
         * @return {@link FeeItemSummaryAllOf0}
         */
        public FeeItemSummaryAllOf0 build() {
            return new FeeItemSummaryAllOf0(feeTypeGroup, feeTypeId, productId, productCode,
                    productName, productGroupId, productGroupName, totalQuantity,
                    totalInvoiceNetAmount, totalInvoiceGrossAmount, totalInvoiceVATAmount,
                    invoiceCurrencyCode, invoiceCurrencySymbol);
        }
    }
}
