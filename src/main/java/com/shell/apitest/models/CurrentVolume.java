/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CurrentVolume type.
 */
public class CurrentVolume {
    private OptionalNullable<Integer> feeRuleId;
    private OptionalNullable<String> feeRuleDescription;
    private OptionalNullable<Integer> month;
    private OptionalNullable<String> year;
    private OptionalNullable<Double> totalVolume;

    /**
     * Default constructor.
     */
    public CurrentVolume() {
    }

    /**
     * Initialization constructor.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  month  Integer value for month.
     * @param  year  String value for year.
     * @param  totalVolume  Double value for totalVolume.
     */
    public CurrentVolume(
            Integer feeRuleId,
            String feeRuleDescription,
            Integer month,
            String year,
            Double totalVolume) {
        this.feeRuleId = OptionalNullable.of(feeRuleId);
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
        this.month = OptionalNullable.of(month);
        this.year = OptionalNullable.of(year);
        this.totalVolume = OptionalNullable.of(totalVolume);
    }

    /**
     * Initialization constructor.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  month  Integer value for month.
     * @param  year  String value for year.
     * @param  totalVolume  Double value for totalVolume.
     */

    protected CurrentVolume(OptionalNullable<Integer> feeRuleId,
            OptionalNullable<String> feeRuleDescription, OptionalNullable<Integer> month,
            OptionalNullable<String> year, OptionalNullable<Double> totalVolume) {
        this.feeRuleId = feeRuleId;
        this.feeRuleDescription = feeRuleDescription;
        this.month = month;
        this.year = year;
        this.totalVolume = totalVolume;
    }

    /**
     * Internal Getter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer
     * @return Returns the Internal Integer
     */
    @JsonGetter("FeeRuleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFeeRuleId() {
        return this.feeRuleId;
    }

    /**
     * Getter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer
     * @return Returns the Integer
     */
    public Integer getFeeRuleId() {
        return OptionalNullable.getFrom(feeRuleId);
    }

    /**
     * Setter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer
     * @param feeRuleId Value for Integer
     */
    @JsonSetter("FeeRuleId")
    public void setFeeRuleId(Integer feeRuleId) {
        this.feeRuleId = OptionalNullable.of(feeRuleId);
    }

    /**
     * UnSetter for FeeRuleId.
     * Bonus or association bonus configuration identifier that is associated to the payer
     */
    public void unsetFeeRuleId() {
        feeRuleId = null;
    }

    /**
     * Internal Getter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer.
     * @return Returns the Internal String
     */
    @JsonGetter("FeeRuleDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeRuleDescription() {
        return this.feeRuleDescription;
    }

    /**
     * Getter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer.
     * @return Returns the String
     */
    public String getFeeRuleDescription() {
        return OptionalNullable.getFrom(feeRuleDescription);
    }

    /**
     * Setter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer.
     * @param feeRuleDescription Value for String
     */
    @JsonSetter("FeeRuleDescription")
    public void setFeeRuleDescription(String feeRuleDescription) {
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
    }

    /**
     * UnSetter for FeeRuleDescription.
     * Bonus or association bonus configuration description that is associated to the payer.
     */
    public void unsetFeeRuleDescription() {
        feeRuleDescription = null;
    }

    /**
     * Internal Getter for Month.
     * Consumption(Volume) of the month.
     * @return Returns the Internal Integer
     */
    @JsonGetter("Month")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetMonth() {
        return this.month;
    }

    /**
     * Getter for Month.
     * Consumption(Volume) of the month.
     * @return Returns the Integer
     */
    public Integer getMonth() {
        return OptionalNullable.getFrom(month);
    }

    /**
     * Setter for Month.
     * Consumption(Volume) of the month.
     * @param month Value for Integer
     */
    @JsonSetter("Month")
    public void setMonth(Integer month) {
        this.month = OptionalNullable.of(month);
    }

    /**
     * UnSetter for Month.
     * Consumption(Volume) of the month.
     */
    public void unsetMonth() {
        month = null;
    }

    /**
     * Internal Getter for Year.
     * Consumption (Volume) of the year.
     * @return Returns the Internal String
     */
    @JsonGetter("Year")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetYear() {
        return this.year;
    }

    /**
     * Getter for Year.
     * Consumption (Volume) of the year.
     * @return Returns the String
     */
    public String getYear() {
        return OptionalNullable.getFrom(year);
    }

    /**
     * Setter for Year.
     * Consumption (Volume) of the year.
     * @param year Value for String
     */
    @JsonSetter("Year")
    public void setYear(String year) {
        this.year = OptionalNullable.of(year);
    }

    /**
     * UnSetter for Year.
     * Consumption (Volume) of the year.
     */
    public void unsetYear() {
        year = null;
    }

    /**
     * Internal Getter for TotalVolume.
     * Total volume consumption for the month/year above.
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalVolume")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalVolume() {
        return this.totalVolume;
    }

    /**
     * Getter for TotalVolume.
     * Total volume consumption for the month/year above.
     * @return Returns the Double
     */
    public Double getTotalVolume() {
        return OptionalNullable.getFrom(totalVolume);
    }

    /**
     * Setter for TotalVolume.
     * Total volume consumption for the month/year above.
     * @param totalVolume Value for Double
     */
    @JsonSetter("TotalVolume")
    public void setTotalVolume(Double totalVolume) {
        this.totalVolume = OptionalNullable.of(totalVolume);
    }

    /**
     * UnSetter for TotalVolume.
     * Total volume consumption for the month/year above.
     */
    public void unsetTotalVolume() {
        totalVolume = null;
    }

    /**
     * Converts this CurrentVolume into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CurrentVolume [" + "feeRuleId=" + feeRuleId + ", feeRuleDescription="
                + feeRuleDescription + ", month=" + month + ", year=" + year + ", totalVolume="
                + totalVolume + "]";
    }

    /**
     * Builds a new {@link CurrentVolume.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CurrentVolume.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.feeRuleId = internalGetFeeRuleId();
        builder.feeRuleDescription = internalGetFeeRuleDescription();
        builder.month = internalGetMonth();
        builder.year = internalGetYear();
        builder.totalVolume = internalGetTotalVolume();
        return builder;
    }

    /**
     * Class to build instances of {@link CurrentVolume}.
     */
    public static class Builder {
        private OptionalNullable<Integer> feeRuleId;
        private OptionalNullable<String> feeRuleDescription;
        private OptionalNullable<Integer> month;
        private OptionalNullable<String> year;
        private OptionalNullable<Double> totalVolume;



        /**
         * Setter for feeRuleId.
         * @param  feeRuleId  Integer value for feeRuleId.
         * @return Builder
         */
        public Builder feeRuleId(Integer feeRuleId) {
            this.feeRuleId = OptionalNullable.of(feeRuleId);
            return this;
        }

        /**
         * UnSetter for feeRuleId.
         * @return Builder
         */
        public Builder unsetFeeRuleId() {
            feeRuleId = null;
            return this;
        }

        /**
         * Setter for feeRuleDescription.
         * @param  feeRuleDescription  String value for feeRuleDescription.
         * @return Builder
         */
        public Builder feeRuleDescription(String feeRuleDescription) {
            this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
            return this;
        }

        /**
         * UnSetter for feeRuleDescription.
         * @return Builder
         */
        public Builder unsetFeeRuleDescription() {
            feeRuleDescription = null;
            return this;
        }

        /**
         * Setter for month.
         * @param  month  Integer value for month.
         * @return Builder
         */
        public Builder month(Integer month) {
            this.month = OptionalNullable.of(month);
            return this;
        }

        /**
         * UnSetter for month.
         * @return Builder
         */
        public Builder unsetMonth() {
            month = null;
            return this;
        }

        /**
         * Setter for year.
         * @param  year  String value for year.
         * @return Builder
         */
        public Builder year(String year) {
            this.year = OptionalNullable.of(year);
            return this;
        }

        /**
         * UnSetter for year.
         * @return Builder
         */
        public Builder unsetYear() {
            year = null;
            return this;
        }

        /**
         * Setter for totalVolume.
         * @param  totalVolume  Double value for totalVolume.
         * @return Builder
         */
        public Builder totalVolume(Double totalVolume) {
            this.totalVolume = OptionalNullable.of(totalVolume);
            return this;
        }

        /**
         * UnSetter for totalVolume.
         * @return Builder
         */
        public Builder unsetTotalVolume() {
            totalVolume = null;
            return this;
        }

        /**
         * Builds a new {@link CurrentVolume} object using the set fields.
         * @return {@link CurrentVolume}
         */
        public CurrentVolume build() {
            return new CurrentVolume(feeRuleId, feeRuleDescription, month, year, totalVolume);
        }
    }
}
