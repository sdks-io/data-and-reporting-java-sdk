/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for PricedTransSummaryResponseTransactionsSummaryItems type.
 */
public class PricedTransSummaryResponseTransactionsSummaryItems {
    private OptionalNullable<Integer> productId;
    private OptionalNullable<String> productCode;
    private OptionalNullable<String> productName;
    private OptionalNullable<Integer> productGroupId;
    private OptionalNullable<String> productGroupName;
    private OptionalNullable<Integer> siteGroupId;
    private OptionalNullable<String> siteGroupName;
    private OptionalNullable<Integer> totalFuelQuantity;
    private OptionalNullable<Integer> totalNetAmount;
    private OptionalNullable<Integer> totalGrossAmount;
    private OptionalNullable<String> invoiceCurrencyCode;
    private OptionalNullable<String> invoiceCurrencySymbol;
    private OptionalNullable<Double> customerRetailValueTotalNet;
    private OptionalNullable<Double> customerRetailValueTotalGross;

    /**
     * Default constructor.
     */
    public PricedTransSummaryResponseTransactionsSummaryItems() {
    }

    /**
     * Initialization constructor.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  totalFuelQuantity  Integer value for totalFuelQuantity.
     * @param  totalNetAmount  Integer value for totalNetAmount.
     * @param  totalGrossAmount  Integer value for totalGrossAmount.
     * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
     * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
     * @param  customerRetailValueTotalNet  Double value for customerRetailValueTotalNet.
     * @param  customerRetailValueTotalGross  Double value for customerRetailValueTotalGross.
     */
    public PricedTransSummaryResponseTransactionsSummaryItems(
            Integer productId,
            String productCode,
            String productName,
            Integer productGroupId,
            String productGroupName,
            Integer siteGroupId,
            String siteGroupName,
            Integer totalFuelQuantity,
            Integer totalNetAmount,
            Integer totalGrossAmount,
            String invoiceCurrencyCode,
            String invoiceCurrencySymbol,
            Double customerRetailValueTotalNet,
            Double customerRetailValueTotalGross) {
        this.productId = OptionalNullable.of(productId);
        this.productCode = OptionalNullable.of(productCode);
        this.productName = OptionalNullable.of(productName);
        this.productGroupId = OptionalNullable.of(productGroupId);
        this.productGroupName = OptionalNullable.of(productGroupName);
        this.siteGroupId = OptionalNullable.of(siteGroupId);
        this.siteGroupName = OptionalNullable.of(siteGroupName);
        this.totalFuelQuantity = OptionalNullable.of(totalFuelQuantity);
        this.totalNetAmount = OptionalNullable.of(totalNetAmount);
        this.totalGrossAmount = OptionalNullable.of(totalGrossAmount);
        this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
        this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
        this.customerRetailValueTotalNet = OptionalNullable.of(customerRetailValueTotalNet);
        this.customerRetailValueTotalGross = OptionalNullable.of(customerRetailValueTotalGross);
    }

    /**
     * Initialization constructor.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  totalFuelQuantity  Integer value for totalFuelQuantity.
     * @param  totalNetAmount  Integer value for totalNetAmount.
     * @param  totalGrossAmount  Integer value for totalGrossAmount.
     * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
     * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
     * @param  customerRetailValueTotalNet  Double value for customerRetailValueTotalNet.
     * @param  customerRetailValueTotalGross  Double value for customerRetailValueTotalGross.
     */

    protected PricedTransSummaryResponseTransactionsSummaryItems(
            OptionalNullable<Integer> productId, OptionalNullable<String> productCode,
            OptionalNullable<String> productName, OptionalNullable<Integer> productGroupId,
            OptionalNullable<String> productGroupName, OptionalNullable<Integer> siteGroupId,
            OptionalNullable<String> siteGroupName, OptionalNullable<Integer> totalFuelQuantity,
            OptionalNullable<Integer> totalNetAmount, OptionalNullable<Integer> totalGrossAmount,
            OptionalNullable<String> invoiceCurrencyCode,
            OptionalNullable<String> invoiceCurrencySymbol,
            OptionalNullable<Double> customerRetailValueTotalNet,
            OptionalNullable<Double> customerRetailValueTotalGross) {
        this.productId = productId;
        this.productCode = productCode;
        this.productName = productName;
        this.productGroupId = productGroupId;
        this.productGroupName = productGroupName;
        this.siteGroupId = siteGroupId;
        this.siteGroupName = siteGroupName;
        this.totalFuelQuantity = totalFuelQuantity;
        this.totalNetAmount = totalNetAmount;
        this.totalGrossAmount = totalGrossAmount;
        this.invoiceCurrencyCode = invoiceCurrencyCode;
        this.invoiceCurrencySymbol = invoiceCurrencySymbol;
        this.customerRetailValueTotalNet = customerRetailValueTotalNet;
        this.customerRetailValueTotalGross = customerRetailValueTotalGross;
    }

    /**
     * Internal Getter for ProductId.
     * Product Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductId() {
        return this.productId;
    }

    /**
     * Getter for ProductId.
     * Product Id
     * @return Returns the Integer
     */
    public Integer getProductId() {
        return OptionalNullable.getFrom(productId);
    }

    /**
     * Setter for ProductId.
     * Product Id
     * @param productId Value for Integer
     */
    @JsonSetter("ProductId")
    public void setProductId(Integer productId) {
        this.productId = OptionalNullable.of(productId);
    }

    /**
     * UnSetter for ProductId.
     * Product Id
     */
    public void unsetProductId() {
        productId = null;
    }

    /**
     * Internal Getter for ProductCode.
     * Product Code Examples: 10 TMF Charges 11 Tunnel/Bridges 12 Motorway toll 13 Ferries
     * @return Returns the Internal String
     */
    @JsonGetter("ProductCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductCode() {
        return this.productCode;
    }

    /**
     * Getter for ProductCode.
     * Product Code Examples: 10 TMF Charges 11 Tunnel/Bridges 12 Motorway toll 13 Ferries
     * @return Returns the String
     */
    public String getProductCode() {
        return OptionalNullable.getFrom(productCode);
    }

    /**
     * Setter for ProductCode.
     * Product Code Examples: 10 TMF Charges 11 Tunnel/Bridges 12 Motorway toll 13 Ferries
     * @param productCode Value for String
     */
    @JsonSetter("ProductCode")
    public void setProductCode(String productCode) {
        this.productCode = OptionalNullable.of(productCode);
    }

    /**
     * UnSetter for ProductCode.
     * Product Code Examples: 10 TMF Charges 11 Tunnel/Bridges 12 Motorway toll 13 Ferries
     */
    public void unsetProductCode() {
        productCode = null;
    }

    /**
     * Internal Getter for ProductName.
     * Product Name Examples: Unleaded - High octane Unleaded - Medium octane Unleaded - Low octane
     * Unleaded Environmental
     * @return Returns the Internal String
     */
    @JsonGetter("ProductName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductName() {
        return this.productName;
    }

    /**
     * Getter for ProductName.
     * Product Name Examples: Unleaded - High octane Unleaded - Medium octane Unleaded - Low octane
     * Unleaded Environmental
     * @return Returns the String
     */
    public String getProductName() {
        return OptionalNullable.getFrom(productName);
    }

    /**
     * Setter for ProductName.
     * Product Name Examples: Unleaded - High octane Unleaded - Medium octane Unleaded - Low octane
     * Unleaded Environmental
     * @param productName Value for String
     */
    @JsonSetter("ProductName")
    public void setProductName(String productName) {
        this.productName = OptionalNullable.of(productName);
    }

    /**
     * UnSetter for ProductName.
     * Product Name Examples: Unleaded - High octane Unleaded - Medium octane Unleaded - Low octane
     * Unleaded Environmental
     */
    public void unsetProductName() {
        productName = null;
    }

    /**
     * Internal Getter for ProductGroupId.
     * Product Group Id Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductGroupId() {
        return this.productGroupId;
    }

    /**
     * Getter for ProductGroupId.
     * Product Group Id Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG
     * @return Returns the Integer
     */
    public Integer getProductGroupId() {
        return OptionalNullable.getFrom(productGroupId);
    }

    /**
     * Setter for ProductGroupId.
     * Product Group Id Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG
     * @param productGroupId Value for Integer
     */
    @JsonSetter("ProductGroupId")
    public void setProductGroupId(Integer productGroupId) {
        this.productGroupId = OptionalNullable.of(productGroupId);
    }

    /**
     * UnSetter for ProductGroupId.
     * Product Group Id Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG
     */
    public void unsetProductGroupId() {
        productGroupId = null;
    }

    /**
     * Internal Getter for ProductGroupName.
     * Product Group Name Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG 7 Automotive Gas Oil
     * @return Returns the Internal String
     */
    @JsonGetter("ProductGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductGroupName() {
        return this.productGroupName;
    }

    /**
     * Getter for ProductGroupName.
     * Product Group Name Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG 7 Automotive Gas Oil
     * @return Returns the String
     */
    public String getProductGroupName() {
        return OptionalNullable.getFrom(productGroupName);
    }

    /**
     * Setter for ProductGroupName.
     * Product Group Name Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG 7 Automotive Gas Oil
     * @param productGroupName Value for String
     */
    @JsonSetter("ProductGroupName")
    public void setProductGroupName(String productGroupName) {
        this.productGroupName = OptionalNullable.of(productGroupName);
    }

    /**
     * UnSetter for ProductGroupName.
     * Product Group Name Example: 1 Parent Product Group 2 All Fuels 3 Motor gasoline 4 2 stroke 5
     * Autogas 6 CNG 7 Automotive Gas Oil
     */
    public void unsetProductGroupName() {
        productGroupName = null;
    }

    /**
     * Internal Getter for SiteGroupId.
     * Site Group Id Example: 202
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteGroupId() {
        return this.siteGroupId;
    }

    /**
     * Getter for SiteGroupId.
     * Site Group Id Example: 202
     * @return Returns the Integer
     */
    public Integer getSiteGroupId() {
        return OptionalNullable.getFrom(siteGroupId);
    }

    /**
     * Setter for SiteGroupId.
     * Site Group Id Example: 202
     * @param siteGroupId Value for Integer
     */
    @JsonSetter("SiteGroupId")
    public void setSiteGroupId(Integer siteGroupId) {
        this.siteGroupId = OptionalNullable.of(siteGroupId);
    }

    /**
     * UnSetter for SiteGroupId.
     * Site Group Id Example: 202
     */
    public void unsetSiteGroupId() {
        siteGroupId = null;
    }

    /**
     * Internal Getter for SiteGroupName.
     * Site Group Name Example: CZ 9100 ECONOMY NETWORK
     * @return Returns the Internal String
     */
    @JsonGetter("SiteGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteGroupName() {
        return this.siteGroupName;
    }

    /**
     * Getter for SiteGroupName.
     * Site Group Name Example: CZ 9100 ECONOMY NETWORK
     * @return Returns the String
     */
    public String getSiteGroupName() {
        return OptionalNullable.getFrom(siteGroupName);
    }

    /**
     * Setter for SiteGroupName.
     * Site Group Name Example: CZ 9100 ECONOMY NETWORK
     * @param siteGroupName Value for String
     */
    @JsonSetter("SiteGroupName")
    public void setSiteGroupName(String siteGroupName) {
        this.siteGroupName = OptionalNullable.of(siteGroupName);
    }

    /**
     * UnSetter for SiteGroupName.
     * Site Group Name Example: CZ 9100 ECONOMY NETWORK
     */
    public void unsetSiteGroupName() {
        siteGroupName = null;
    }

    /**
     * Internal Getter for TotalFuelQuantity.
     * Total Fuel Quantity
     * @return Returns the Internal Integer
     */
    @JsonGetter("TotalFuelQuantity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTotalFuelQuantity() {
        return this.totalFuelQuantity;
    }

    /**
     * Getter for TotalFuelQuantity.
     * Total Fuel Quantity
     * @return Returns the Integer
     */
    public Integer getTotalFuelQuantity() {
        return OptionalNullable.getFrom(totalFuelQuantity);
    }

    /**
     * Setter for TotalFuelQuantity.
     * Total Fuel Quantity
     * @param totalFuelQuantity Value for Integer
     */
    @JsonSetter("TotalFuelQuantity")
    public void setTotalFuelQuantity(Integer totalFuelQuantity) {
        this.totalFuelQuantity = OptionalNullable.of(totalFuelQuantity);
    }

    /**
     * UnSetter for TotalFuelQuantity.
     * Total Fuel Quantity
     */
    public void unsetTotalFuelQuantity() {
        totalFuelQuantity = null;
    }

    /**
     * Internal Getter for TotalNetAmount.
     * Total Net amount in invoice currency
     * @return Returns the Internal Integer
     */
    @JsonGetter("TotalNetAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTotalNetAmount() {
        return this.totalNetAmount;
    }

    /**
     * Getter for TotalNetAmount.
     * Total Net amount in invoice currency
     * @return Returns the Integer
     */
    public Integer getTotalNetAmount() {
        return OptionalNullable.getFrom(totalNetAmount);
    }

    /**
     * Setter for TotalNetAmount.
     * Total Net amount in invoice currency
     * @param totalNetAmount Value for Integer
     */
    @JsonSetter("TotalNetAmount")
    public void setTotalNetAmount(Integer totalNetAmount) {
        this.totalNetAmount = OptionalNullable.of(totalNetAmount);
    }

    /**
     * UnSetter for TotalNetAmount.
     * Total Net amount in invoice currency
     */
    public void unsetTotalNetAmount() {
        totalNetAmount = null;
    }

    /**
     * Internal Getter for TotalGrossAmount.
     * Total Gross amount in invoice currency
     * @return Returns the Internal Integer
     */
    @JsonGetter("TotalGrossAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTotalGrossAmount() {
        return this.totalGrossAmount;
    }

    /**
     * Getter for TotalGrossAmount.
     * Total Gross amount in invoice currency
     * @return Returns the Integer
     */
    public Integer getTotalGrossAmount() {
        return OptionalNullable.getFrom(totalGrossAmount);
    }

    /**
     * Setter for TotalGrossAmount.
     * Total Gross amount in invoice currency
     * @param totalGrossAmount Value for Integer
     */
    @JsonSetter("TotalGrossAmount")
    public void setTotalGrossAmount(Integer totalGrossAmount) {
        this.totalGrossAmount = OptionalNullable.of(totalGrossAmount);
    }

    /**
     * UnSetter for TotalGrossAmount.
     * Total Gross amount in invoice currency
     */
    public void unsetTotalGrossAmount() {
        totalGrossAmount = null;
    }

    /**
     * Internal Getter for InvoiceCurrencyCode.
     * ISO currency code Example: GBP
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceCurrencyCode() {
        return this.invoiceCurrencyCode;
    }

    /**
     * Getter for InvoiceCurrencyCode.
     * ISO currency code Example: GBP
     * @return Returns the String
     */
    public String getInvoiceCurrencyCode() {
        return OptionalNullable.getFrom(invoiceCurrencyCode);
    }

    /**
     * Setter for InvoiceCurrencyCode.
     * ISO currency code Example: GBP
     * @param invoiceCurrencyCode Value for String
     */
    @JsonSetter("InvoiceCurrencyCode")
    public void setInvoiceCurrencyCode(String invoiceCurrencyCode) {
        this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
    }

    /**
     * UnSetter for InvoiceCurrencyCode.
     * ISO currency code Example: GBP
     */
    public void unsetInvoiceCurrencyCode() {
        invoiceCurrencyCode = null;
    }

    /**
     * Internal Getter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code Example: £, $
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceCurrencySymbol() {
        return this.invoiceCurrencySymbol;
    }

    /**
     * Getter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code Example: £, $
     * @return Returns the String
     */
    public String getInvoiceCurrencySymbol() {
        return OptionalNullable.getFrom(invoiceCurrencySymbol);
    }

    /**
     * Setter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code Example: £, $
     * @param invoiceCurrencySymbol Value for String
     */
    @JsonSetter("InvoiceCurrencySymbol")
    public void setInvoiceCurrencySymbol(String invoiceCurrencySymbol) {
        this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
    }

    /**
     * UnSetter for InvoiceCurrencySymbol.
     * Currency symbol of the Invoice Currency Code Example: £, $
     */
    public void unsetInvoiceCurrencySymbol() {
        invoiceCurrencySymbol = null;
    }

    /**
     * Internal Getter for CustomerRetailValueTotalNet.
     * Sum of the retail net price
     * @return Returns the Internal Double
     */
    @JsonGetter("CustomerRetailValueTotalNet")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetCustomerRetailValueTotalNet() {
        return this.customerRetailValueTotalNet;
    }

    /**
     * Getter for CustomerRetailValueTotalNet.
     * Sum of the retail net price
     * @return Returns the Double
     */
    public Double getCustomerRetailValueTotalNet() {
        return OptionalNullable.getFrom(customerRetailValueTotalNet);
    }

    /**
     * Setter for CustomerRetailValueTotalNet.
     * Sum of the retail net price
     * @param customerRetailValueTotalNet Value for Double
     */
    @JsonSetter("CustomerRetailValueTotalNet")
    public void setCustomerRetailValueTotalNet(Double customerRetailValueTotalNet) {
        this.customerRetailValueTotalNet = OptionalNullable.of(customerRetailValueTotalNet);
    }

    /**
     * UnSetter for CustomerRetailValueTotalNet.
     * Sum of the retail net price
     */
    public void unsetCustomerRetailValueTotalNet() {
        customerRetailValueTotalNet = null;
    }

    /**
     * Internal Getter for CustomerRetailValueTotalGross.
     * Sum of the retail gross price
     * @return Returns the Internal Double
     */
    @JsonGetter("CustomerRetailValueTotalGross")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetCustomerRetailValueTotalGross() {
        return this.customerRetailValueTotalGross;
    }

    /**
     * Getter for CustomerRetailValueTotalGross.
     * Sum of the retail gross price
     * @return Returns the Double
     */
    public Double getCustomerRetailValueTotalGross() {
        return OptionalNullable.getFrom(customerRetailValueTotalGross);
    }

    /**
     * Setter for CustomerRetailValueTotalGross.
     * Sum of the retail gross price
     * @param customerRetailValueTotalGross Value for Double
     */
    @JsonSetter("CustomerRetailValueTotalGross")
    public void setCustomerRetailValueTotalGross(Double customerRetailValueTotalGross) {
        this.customerRetailValueTotalGross = OptionalNullable.of(customerRetailValueTotalGross);
    }

    /**
     * UnSetter for CustomerRetailValueTotalGross.
     * Sum of the retail gross price
     */
    public void unsetCustomerRetailValueTotalGross() {
        customerRetailValueTotalGross = null;
    }

    /**
     * Converts this PricedTransSummaryResponseTransactionsSummaryItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PricedTransSummaryResponseTransactionsSummaryItems [" + "productId=" + productId
                + ", productCode=" + productCode + ", productName=" + productName
                + ", productGroupId=" + productGroupId + ", productGroupName=" + productGroupName
                + ", siteGroupId=" + siteGroupId + ", siteGroupName=" + siteGroupName
                + ", totalFuelQuantity=" + totalFuelQuantity + ", totalNetAmount=" + totalNetAmount
                + ", totalGrossAmount=" + totalGrossAmount + ", invoiceCurrencyCode="
                + invoiceCurrencyCode + ", invoiceCurrencySymbol=" + invoiceCurrencySymbol
                + ", customerRetailValueTotalNet=" + customerRetailValueTotalNet
                + ", customerRetailValueTotalGross=" + customerRetailValueTotalGross + "]";
    }

    /**
     * Builds a new {@link PricedTransSummaryResponseTransactionsSummaryItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PricedTransSummaryResponseTransactionsSummaryItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.productId = internalGetProductId();
        builder.productCode = internalGetProductCode();
        builder.productName = internalGetProductName();
        builder.productGroupId = internalGetProductGroupId();
        builder.productGroupName = internalGetProductGroupName();
        builder.siteGroupId = internalGetSiteGroupId();
        builder.siteGroupName = internalGetSiteGroupName();
        builder.totalFuelQuantity = internalGetTotalFuelQuantity();
        builder.totalNetAmount = internalGetTotalNetAmount();
        builder.totalGrossAmount = internalGetTotalGrossAmount();
        builder.invoiceCurrencyCode = internalGetInvoiceCurrencyCode();
        builder.invoiceCurrencySymbol = internalGetInvoiceCurrencySymbol();
        builder.customerRetailValueTotalNet = internalGetCustomerRetailValueTotalNet();
        builder.customerRetailValueTotalGross = internalGetCustomerRetailValueTotalGross();
        return builder;
    }

    /**
     * Class to build instances of {@link PricedTransSummaryResponseTransactionsSummaryItems}.
     */
    public static class Builder {
        private OptionalNullable<Integer> productId;
        private OptionalNullable<String> productCode;
        private OptionalNullable<String> productName;
        private OptionalNullable<Integer> productGroupId;
        private OptionalNullable<String> productGroupName;
        private OptionalNullable<Integer> siteGroupId;
        private OptionalNullable<String> siteGroupName;
        private OptionalNullable<Integer> totalFuelQuantity;
        private OptionalNullable<Integer> totalNetAmount;
        private OptionalNullable<Integer> totalGrossAmount;
        private OptionalNullable<String> invoiceCurrencyCode;
        private OptionalNullable<String> invoiceCurrencySymbol;
        private OptionalNullable<Double> customerRetailValueTotalNet;
        private OptionalNullable<Double> customerRetailValueTotalGross;



        /**
         * Setter for productId.
         * @param  productId  Integer value for productId.
         * @return Builder
         */
        public Builder productId(Integer productId) {
            this.productId = OptionalNullable.of(productId);
            return this;
        }

        /**
         * UnSetter for productId.
         * @return Builder
         */
        public Builder unsetProductId() {
            productId = null;
            return this;
        }

        /**
         * Setter for productCode.
         * @param  productCode  String value for productCode.
         * @return Builder
         */
        public Builder productCode(String productCode) {
            this.productCode = OptionalNullable.of(productCode);
            return this;
        }

        /**
         * UnSetter for productCode.
         * @return Builder
         */
        public Builder unsetProductCode() {
            productCode = null;
            return this;
        }

        /**
         * Setter for productName.
         * @param  productName  String value for productName.
         * @return Builder
         */
        public Builder productName(String productName) {
            this.productName = OptionalNullable.of(productName);
            return this;
        }

        /**
         * UnSetter for productName.
         * @return Builder
         */
        public Builder unsetProductName() {
            productName = null;
            return this;
        }

        /**
         * Setter for productGroupId.
         * @param  productGroupId  Integer value for productGroupId.
         * @return Builder
         */
        public Builder productGroupId(Integer productGroupId) {
            this.productGroupId = OptionalNullable.of(productGroupId);
            return this;
        }

        /**
         * UnSetter for productGroupId.
         * @return Builder
         */
        public Builder unsetProductGroupId() {
            productGroupId = null;
            return this;
        }

        /**
         * Setter for productGroupName.
         * @param  productGroupName  String value for productGroupName.
         * @return Builder
         */
        public Builder productGroupName(String productGroupName) {
            this.productGroupName = OptionalNullable.of(productGroupName);
            return this;
        }

        /**
         * UnSetter for productGroupName.
         * @return Builder
         */
        public Builder unsetProductGroupName() {
            productGroupName = null;
            return this;
        }

        /**
         * Setter for siteGroupId.
         * @param  siteGroupId  Integer value for siteGroupId.
         * @return Builder
         */
        public Builder siteGroupId(Integer siteGroupId) {
            this.siteGroupId = OptionalNullable.of(siteGroupId);
            return this;
        }

        /**
         * UnSetter for siteGroupId.
         * @return Builder
         */
        public Builder unsetSiteGroupId() {
            siteGroupId = null;
            return this;
        }

        /**
         * Setter for siteGroupName.
         * @param  siteGroupName  String value for siteGroupName.
         * @return Builder
         */
        public Builder siteGroupName(String siteGroupName) {
            this.siteGroupName = OptionalNullable.of(siteGroupName);
            return this;
        }

        /**
         * UnSetter for siteGroupName.
         * @return Builder
         */
        public Builder unsetSiteGroupName() {
            siteGroupName = null;
            return this;
        }

        /**
         * Setter for totalFuelQuantity.
         * @param  totalFuelQuantity  Integer value for totalFuelQuantity.
         * @return Builder
         */
        public Builder totalFuelQuantity(Integer totalFuelQuantity) {
            this.totalFuelQuantity = OptionalNullable.of(totalFuelQuantity);
            return this;
        }

        /**
         * UnSetter for totalFuelQuantity.
         * @return Builder
         */
        public Builder unsetTotalFuelQuantity() {
            totalFuelQuantity = null;
            return this;
        }

        /**
         * Setter for totalNetAmount.
         * @param  totalNetAmount  Integer value for totalNetAmount.
         * @return Builder
         */
        public Builder totalNetAmount(Integer totalNetAmount) {
            this.totalNetAmount = OptionalNullable.of(totalNetAmount);
            return this;
        }

        /**
         * UnSetter for totalNetAmount.
         * @return Builder
         */
        public Builder unsetTotalNetAmount() {
            totalNetAmount = null;
            return this;
        }

        /**
         * Setter for totalGrossAmount.
         * @param  totalGrossAmount  Integer value for totalGrossAmount.
         * @return Builder
         */
        public Builder totalGrossAmount(Integer totalGrossAmount) {
            this.totalGrossAmount = OptionalNullable.of(totalGrossAmount);
            return this;
        }

        /**
         * UnSetter for totalGrossAmount.
         * @return Builder
         */
        public Builder unsetTotalGrossAmount() {
            totalGrossAmount = null;
            return this;
        }

        /**
         * Setter for invoiceCurrencyCode.
         * @param  invoiceCurrencyCode  String value for invoiceCurrencyCode.
         * @return Builder
         */
        public Builder invoiceCurrencyCode(String invoiceCurrencyCode) {
            this.invoiceCurrencyCode = OptionalNullable.of(invoiceCurrencyCode);
            return this;
        }

        /**
         * UnSetter for invoiceCurrencyCode.
         * @return Builder
         */
        public Builder unsetInvoiceCurrencyCode() {
            invoiceCurrencyCode = null;
            return this;
        }

        /**
         * Setter for invoiceCurrencySymbol.
         * @param  invoiceCurrencySymbol  String value for invoiceCurrencySymbol.
         * @return Builder
         */
        public Builder invoiceCurrencySymbol(String invoiceCurrencySymbol) {
            this.invoiceCurrencySymbol = OptionalNullable.of(invoiceCurrencySymbol);
            return this;
        }

        /**
         * UnSetter for invoiceCurrencySymbol.
         * @return Builder
         */
        public Builder unsetInvoiceCurrencySymbol() {
            invoiceCurrencySymbol = null;
            return this;
        }

        /**
         * Setter for customerRetailValueTotalNet.
         * @param  customerRetailValueTotalNet  Double value for customerRetailValueTotalNet.
         * @return Builder
         */
        public Builder customerRetailValueTotalNet(Double customerRetailValueTotalNet) {
            this.customerRetailValueTotalNet = OptionalNullable.of(customerRetailValueTotalNet);
            return this;
        }

        /**
         * UnSetter for customerRetailValueTotalNet.
         * @return Builder
         */
        public Builder unsetCustomerRetailValueTotalNet() {
            customerRetailValueTotalNet = null;
            return this;
        }

        /**
         * Setter for customerRetailValueTotalGross.
         * @param  customerRetailValueTotalGross  Double value for customerRetailValueTotalGross.
         * @return Builder
         */
        public Builder customerRetailValueTotalGross(Double customerRetailValueTotalGross) {
            this.customerRetailValueTotalGross = OptionalNullable.of(customerRetailValueTotalGross);
            return this;
        }

        /**
         * UnSetter for customerRetailValueTotalGross.
         * @return Builder
         */
        public Builder unsetCustomerRetailValueTotalGross() {
            customerRetailValueTotalGross = null;
            return this;
        }

        /**
         * Builds a new {@link PricedTransSummaryResponseTransactionsSummaryItems} object using the
         * set fields.
         * @return {@link PricedTransSummaryResponseTransactionsSummaryItems}
         */
        public PricedTransSummaryResponseTransactionsSummaryItems build() {
            return new PricedTransSummaryResponseTransactionsSummaryItems(productId, productCode,
                    productName, productGroupId, productGroupName, siteGroupId, siteGroupName,
                    totalFuelQuantity, totalNetAmount, totalGrossAmount, invoiceCurrencyCode,
                    invoiceCurrencySymbol, customerRetailValueTotalNet,
                    customerRetailValueTotalGross);
        }
    }
}
