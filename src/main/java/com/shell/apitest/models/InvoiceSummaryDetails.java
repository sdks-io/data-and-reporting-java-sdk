/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for InvoiceSummaryDetails type.
 */
public class InvoiceSummaryDetails {
    private OptionalNullable<Integer> totalInvoices;
    private OptionalNullable<Double> totalGrossAmountCustomerCurrency;
    private OptionalNullable<Double> totalNetAmountCustomerCurrency;
    private OptionalNullable<Double> totalVATAmountCustomerCurrency;
    private OptionalNullable<String> customerCurrencyCode;
    private OptionalNullable<String> customerCurrencySymbol;

    /**
     * Default constructor.
     */
    public InvoiceSummaryDetails() {
    }

    /**
     * Initialization constructor.
     * @param  totalInvoices  Integer value for totalInvoices.
     * @param  totalGrossAmountCustomerCurrency  Double value for totalGrossAmountCustomerCurrency.
     * @param  totalNetAmountCustomerCurrency  Double value for totalNetAmountCustomerCurrency.
     * @param  totalVATAmountCustomerCurrency  Double value for totalVATAmountCustomerCurrency.
     * @param  customerCurrencyCode  String value for customerCurrencyCode.
     * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
     */
    public InvoiceSummaryDetails(
            Integer totalInvoices,
            Double totalGrossAmountCustomerCurrency,
            Double totalNetAmountCustomerCurrency,
            Double totalVATAmountCustomerCurrency,
            String customerCurrencyCode,
            String customerCurrencySymbol) {
        this.totalInvoices = OptionalNullable.of(totalInvoices);
        this.totalGrossAmountCustomerCurrency =
                OptionalNullable.of(totalGrossAmountCustomerCurrency);
        this.totalNetAmountCustomerCurrency = OptionalNullable.of(totalNetAmountCustomerCurrency);
        this.totalVATAmountCustomerCurrency = OptionalNullable.of(totalVATAmountCustomerCurrency);
        this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
        this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
    }

    /**
     * Initialization constructor.
     * @param  totalInvoices  Integer value for totalInvoices.
     * @param  totalGrossAmountCustomerCurrency  Double value for totalGrossAmountCustomerCurrency.
     * @param  totalNetAmountCustomerCurrency  Double value for totalNetAmountCustomerCurrency.
     * @param  totalVATAmountCustomerCurrency  Double value for totalVATAmountCustomerCurrency.
     * @param  customerCurrencyCode  String value for customerCurrencyCode.
     * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
     */

    protected InvoiceSummaryDetails(OptionalNullable<Integer> totalInvoices,
            OptionalNullable<Double> totalGrossAmountCustomerCurrency,
            OptionalNullable<Double> totalNetAmountCustomerCurrency,
            OptionalNullable<Double> totalVATAmountCustomerCurrency,
            OptionalNullable<String> customerCurrencyCode,
            OptionalNullable<String> customerCurrencySymbol) {
        this.totalInvoices = totalInvoices;
        this.totalGrossAmountCustomerCurrency = totalGrossAmountCustomerCurrency;
        this.totalNetAmountCustomerCurrency = totalNetAmountCustomerCurrency;
        this.totalVATAmountCustomerCurrency = totalVATAmountCustomerCurrency;
        this.customerCurrencyCode = customerCurrencyCode;
        this.customerCurrencySymbol = customerCurrencySymbol;
    }

    /**
     * Internal Getter for TotalInvoices.
     * Total number of invoices matching with the given search criteria.
     * @return Returns the Internal Integer
     */
    @JsonGetter("TotalInvoices")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetTotalInvoices() {
        return this.totalInvoices;
    }

    /**
     * Getter for TotalInvoices.
     * Total number of invoices matching with the given search criteria.
     * @return Returns the Integer
     */
    public Integer getTotalInvoices() {
        return OptionalNullable.getFrom(totalInvoices);
    }

    /**
     * Setter for TotalInvoices.
     * Total number of invoices matching with the given search criteria.
     * @param totalInvoices Value for Integer
     */
    @JsonSetter("TotalInvoices")
    public void setTotalInvoices(Integer totalInvoices) {
        this.totalInvoices = OptionalNullable.of(totalInvoices);
    }

    /**
     * UnSetter for TotalInvoices.
     * Total number of invoices matching with the given search criteria.
     */
    public void unsetTotalInvoices() {
        totalInvoices = null;
    }

    /**
     * Internal Getter for TotalGrossAmountCustomerCurrency.
     * Total gross amount in customer currency combined from all the invoices matching with the
     * given search criteria.
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalGrossAmountCustomerCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalGrossAmountCustomerCurrency() {
        return this.totalGrossAmountCustomerCurrency;
    }

    /**
     * Getter for TotalGrossAmountCustomerCurrency.
     * Total gross amount in customer currency combined from all the invoices matching with the
     * given search criteria.
     * @return Returns the Double
     */
    public Double getTotalGrossAmountCustomerCurrency() {
        return OptionalNullable.getFrom(totalGrossAmountCustomerCurrency);
    }

    /**
     * Setter for TotalGrossAmountCustomerCurrency.
     * Total gross amount in customer currency combined from all the invoices matching with the
     * given search criteria.
     * @param totalGrossAmountCustomerCurrency Value for Double
     */
    @JsonSetter("TotalGrossAmountCustomerCurrency")
    public void setTotalGrossAmountCustomerCurrency(Double totalGrossAmountCustomerCurrency) {
        this.totalGrossAmountCustomerCurrency = OptionalNullable.of(totalGrossAmountCustomerCurrency);
    }

    /**
     * UnSetter for TotalGrossAmountCustomerCurrency.
     * Total gross amount in customer currency combined from all the invoices matching with the
     * given search criteria.
     */
    public void unsetTotalGrossAmountCustomerCurrency() {
        totalGrossAmountCustomerCurrency = null;
    }

    /**
     * Internal Getter for TotalNetAmountCustomerCurrency.
     * Total net amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalNetAmountCustomerCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalNetAmountCustomerCurrency() {
        return this.totalNetAmountCustomerCurrency;
    }

    /**
     * Getter for TotalNetAmountCustomerCurrency.
     * Total net amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @return Returns the Double
     */
    public Double getTotalNetAmountCustomerCurrency() {
        return OptionalNullable.getFrom(totalNetAmountCustomerCurrency);
    }

    /**
     * Setter for TotalNetAmountCustomerCurrency.
     * Total net amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @param totalNetAmountCustomerCurrency Value for Double
     */
    @JsonSetter("TotalNetAmountCustomerCurrency")
    public void setTotalNetAmountCustomerCurrency(Double totalNetAmountCustomerCurrency) {
        this.totalNetAmountCustomerCurrency = OptionalNullable.of(totalNetAmountCustomerCurrency);
    }

    /**
     * UnSetter for TotalNetAmountCustomerCurrency.
     * Total net amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     */
    public void unsetTotalNetAmountCustomerCurrency() {
        totalNetAmountCustomerCurrency = null;
    }

    /**
     * Internal Getter for TotalVATAmountCustomerCurrency.
     * Total VAT amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @return Returns the Internal Double
     */
    @JsonGetter("TotalVATAmountCustomerCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetTotalVATAmountCustomerCurrency() {
        return this.totalVATAmountCustomerCurrency;
    }

    /**
     * Getter for TotalVATAmountCustomerCurrency.
     * Total VAT amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @return Returns the Double
     */
    public Double getTotalVATAmountCustomerCurrency() {
        return OptionalNullable.getFrom(totalVATAmountCustomerCurrency);
    }

    /**
     * Setter for TotalVATAmountCustomerCurrency.
     * Total VAT amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     * @param totalVATAmountCustomerCurrency Value for Double
     */
    @JsonSetter("TotalVATAmountCustomerCurrency")
    public void setTotalVATAmountCustomerCurrency(Double totalVATAmountCustomerCurrency) {
        this.totalVATAmountCustomerCurrency = OptionalNullable.of(totalVATAmountCustomerCurrency);
    }

    /**
     * UnSetter for TotalVATAmountCustomerCurrency.
     * Total VAT amount in customer currency combined from all the invoices matching with the given
     * search criteria.
     */
    public void unsetTotalVATAmountCustomerCurrency() {
        totalVATAmountCustomerCurrency = null;
    }

    /**
     * Internal Getter for CustomerCurrencyCode.
     * Customer currency ISO code. Example: EUR
     * @return Returns the Internal String
     */
    @JsonGetter("CustomerCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCustomerCurrencyCode() {
        return this.customerCurrencyCode;
    }

    /**
     * Getter for CustomerCurrencyCode.
     * Customer currency ISO code. Example: EUR
     * @return Returns the String
     */
    public String getCustomerCurrencyCode() {
        return OptionalNullable.getFrom(customerCurrencyCode);
    }

    /**
     * Setter for CustomerCurrencyCode.
     * Customer currency ISO code. Example: EUR
     * @param customerCurrencyCode Value for String
     */
    @JsonSetter("CustomerCurrencyCode")
    public void setCustomerCurrencyCode(String customerCurrencyCode) {
        this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
    }

    /**
     * UnSetter for CustomerCurrencyCode.
     * Customer currency ISO code. Example: EUR
     */
    public void unsetCustomerCurrencyCode() {
        customerCurrencyCode = null;
    }

    /**
     * Internal Getter for CustomerCurrencySymbol.
     * Customer currency code. Example: €
     * @return Returns the Internal String
     */
    @JsonGetter("CustomerCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCustomerCurrencySymbol() {
        return this.customerCurrencySymbol;
    }

    /**
     * Getter for CustomerCurrencySymbol.
     * Customer currency code. Example: €
     * @return Returns the String
     */
    public String getCustomerCurrencySymbol() {
        return OptionalNullable.getFrom(customerCurrencySymbol);
    }

    /**
     * Setter for CustomerCurrencySymbol.
     * Customer currency code. Example: €
     * @param customerCurrencySymbol Value for String
     */
    @JsonSetter("CustomerCurrencySymbol")
    public void setCustomerCurrencySymbol(String customerCurrencySymbol) {
        this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
    }

    /**
     * UnSetter for CustomerCurrencySymbol.
     * Customer currency code. Example: €
     */
    public void unsetCustomerCurrencySymbol() {
        customerCurrencySymbol = null;
    }

    /**
     * Converts this InvoiceSummaryDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InvoiceSummaryDetails [" + "totalInvoices=" + totalInvoices
                + ", totalGrossAmountCustomerCurrency=" + totalGrossAmountCustomerCurrency
                + ", totalNetAmountCustomerCurrency=" + totalNetAmountCustomerCurrency
                + ", totalVATAmountCustomerCurrency=" + totalVATAmountCustomerCurrency
                + ", customerCurrencyCode=" + customerCurrencyCode + ", customerCurrencySymbol="
                + customerCurrencySymbol + "]";
    }

    /**
     * Builds a new {@link InvoiceSummaryDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InvoiceSummaryDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.totalInvoices = internalGetTotalInvoices();
        builder.totalGrossAmountCustomerCurrency = internalGetTotalGrossAmountCustomerCurrency();
        builder.totalNetAmountCustomerCurrency = internalGetTotalNetAmountCustomerCurrency();
        builder.totalVATAmountCustomerCurrency = internalGetTotalVATAmountCustomerCurrency();
        builder.customerCurrencyCode = internalGetCustomerCurrencyCode();
        builder.customerCurrencySymbol = internalGetCustomerCurrencySymbol();
        return builder;
    }

    /**
     * Class to build instances of {@link InvoiceSummaryDetails}.
     */
    public static class Builder {
        private OptionalNullable<Integer> totalInvoices;
        private OptionalNullable<Double> totalGrossAmountCustomerCurrency;
        private OptionalNullable<Double> totalNetAmountCustomerCurrency;
        private OptionalNullable<Double> totalVATAmountCustomerCurrency;
        private OptionalNullable<String> customerCurrencyCode;
        private OptionalNullable<String> customerCurrencySymbol;



        /**
         * Setter for totalInvoices.
         * @param  totalInvoices  Integer value for totalInvoices.
         * @return Builder
         */
        public Builder totalInvoices(Integer totalInvoices) {
            this.totalInvoices = OptionalNullable.of(totalInvoices);
            return this;
        }

        /**
         * UnSetter for totalInvoices.
         * @return Builder
         */
        public Builder unsetTotalInvoices() {
            totalInvoices = null;
            return this;
        }

        /**
         * Setter for totalGrossAmountCustomerCurrency.
         * @param  totalGrossAmountCustomerCurrency  Double value for
         *         totalGrossAmountCustomerCurrency.
         * @return Builder
         */
        public Builder totalGrossAmountCustomerCurrency(Double totalGrossAmountCustomerCurrency) {
            this.totalGrossAmountCustomerCurrency =
                    OptionalNullable.of(totalGrossAmountCustomerCurrency);
            return this;
        }

        /**
         * UnSetter for totalGrossAmountCustomerCurrency.
         * @return Builder
         */
        public Builder unsetTotalGrossAmountCustomerCurrency() {
            totalGrossAmountCustomerCurrency = null;
            return this;
        }

        /**
         * Setter for totalNetAmountCustomerCurrency.
         * @param  totalNetAmountCustomerCurrency  Double value for totalNetAmountCustomerCurrency.
         * @return Builder
         */
        public Builder totalNetAmountCustomerCurrency(Double totalNetAmountCustomerCurrency) {
            this.totalNetAmountCustomerCurrency =
                    OptionalNullable.of(totalNetAmountCustomerCurrency);
            return this;
        }

        /**
         * UnSetter for totalNetAmountCustomerCurrency.
         * @return Builder
         */
        public Builder unsetTotalNetAmountCustomerCurrency() {
            totalNetAmountCustomerCurrency = null;
            return this;
        }

        /**
         * Setter for totalVATAmountCustomerCurrency.
         * @param  totalVATAmountCustomerCurrency  Double value for totalVATAmountCustomerCurrency.
         * @return Builder
         */
        public Builder totalVATAmountCustomerCurrency(Double totalVATAmountCustomerCurrency) {
            this.totalVATAmountCustomerCurrency =
                    OptionalNullable.of(totalVATAmountCustomerCurrency);
            return this;
        }

        /**
         * UnSetter for totalVATAmountCustomerCurrency.
         * @return Builder
         */
        public Builder unsetTotalVATAmountCustomerCurrency() {
            totalVATAmountCustomerCurrency = null;
            return this;
        }

        /**
         * Setter for customerCurrencyCode.
         * @param  customerCurrencyCode  String value for customerCurrencyCode.
         * @return Builder
         */
        public Builder customerCurrencyCode(String customerCurrencyCode) {
            this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
            return this;
        }

        /**
         * UnSetter for customerCurrencyCode.
         * @return Builder
         */
        public Builder unsetCustomerCurrencyCode() {
            customerCurrencyCode = null;
            return this;
        }

        /**
         * Setter for customerCurrencySymbol.
         * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
         * @return Builder
         */
        public Builder customerCurrencySymbol(String customerCurrencySymbol) {
            this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
            return this;
        }

        /**
         * UnSetter for customerCurrencySymbol.
         * @return Builder
         */
        public Builder unsetCustomerCurrencySymbol() {
            customerCurrencySymbol = null;
            return this;
        }

        /**
         * Builds a new {@link InvoiceSummaryDetails} object using the set fields.
         * @return {@link InvoiceSummaryDetails}
         */
        public InvoiceSummaryDetails build() {
            return new InvoiceSummaryDetails(totalInvoices, totalGrossAmountCustomerCurrency,
                    totalNetAmountCustomerCurrency, totalVATAmountCustomerCurrency,
                    customerCurrencyCode, customerCurrencySymbol);
        }
    }
}
