/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for AuditResponseAuditsItems type.
 */
public class AuditResponseAuditsItems {
    private OptionalNullable<Integer> accountId;
    private OptionalNullable<String> accountNumber;
    private OptionalNullable<String> additionalInformation1;
    private OptionalNullable<String> additionalInformation2;
    private OptionalNullable<String> additionalInformation3;
    private OptionalNullable<String> additionalInformation4;
    private OptionalNullable<String> additionalInformation5;
    private OptionalNullable<String> additionalInformation6;
    private OptionalNullable<String> additionalInformation7;
    private OptionalNullable<String> additionalInformation8;
    private OptionalNullable<String> additionalInformation9;
    private OptionalNullable<Integer> cardGroupId;
    private OptionalNullable<String> cardGroupName;
    private OptionalNullable<Integer> cardId;
    private OptionalNullable<Integer> colCoCode;
    private OptionalNullable<Integer> colCoId;
    private String errorCode;
    private OptionalNullable<String> errorString;
    private OptionalNullable<String> globalRequestID;
    private OptionalNullable<String> pAN;
    private OptionalNullable<Integer> payerId;
    private OptionalNullable<String> payerNumber;
    private OptionalNullable<String> processedOn;
    private OptionalNullable<String> requestedBy;
    private OptionalNullable<String> requestedOperation;
    private OptionalNullable<Integer> requestReference;
    private OptionalNullable<String> requestType;
    private OptionalNullable<String> status;
    private OptionalNullable<String> submittedOn;
    private OptionalNullable<Integer> subRequestReference;
    private OptionalNullable<String> userDisplayName;

    /**
     * Default constructor.
     */
    public AuditResponseAuditsItems() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  additionalInformation1  String value for additionalInformation1.
     * @param  additionalInformation2  String value for additionalInformation2.
     * @param  additionalInformation3  String value for additionalInformation3.
     * @param  additionalInformation4  String value for additionalInformation4.
     * @param  additionalInformation5  String value for additionalInformation5.
     * @param  additionalInformation6  String value for additionalInformation6.
     * @param  additionalInformation7  String value for additionalInformation7.
     * @param  additionalInformation8  String value for additionalInformation8.
     * @param  additionalInformation9  String value for additionalInformation9.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  cardId  Integer value for cardId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  errorCode  String value for errorCode.
     * @param  errorString  String value for errorString.
     * @param  globalRequestID  String value for globalRequestID.
     * @param  pAN  String value for pAN.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  processedOn  String value for processedOn.
     * @param  requestedBy  String value for requestedBy.
     * @param  requestedOperation  String value for requestedOperation.
     * @param  requestReference  Integer value for requestReference.
     * @param  requestType  String value for requestType.
     * @param  status  String value for status.
     * @param  submittedOn  String value for submittedOn.
     * @param  subRequestReference  Integer value for subRequestReference.
     * @param  userDisplayName  String value for userDisplayName.
     */
    public AuditResponseAuditsItems(
            Integer accountId,
            String accountNumber,
            String additionalInformation1,
            String additionalInformation2,
            String additionalInformation3,
            String additionalInformation4,
            String additionalInformation5,
            String additionalInformation6,
            String additionalInformation7,
            String additionalInformation8,
            String additionalInformation9,
            Integer cardGroupId,
            String cardGroupName,
            Integer cardId,
            Integer colCoCode,
            Integer colCoId,
            String errorCode,
            String errorString,
            String globalRequestID,
            String pAN,
            Integer payerId,
            String payerNumber,
            String processedOn,
            String requestedBy,
            String requestedOperation,
            Integer requestReference,
            String requestType,
            String status,
            String submittedOn,
            Integer subRequestReference,
            String userDisplayName) {
        this.accountId = OptionalNullable.of(accountId);
        this.accountNumber = OptionalNullable.of(accountNumber);
        this.additionalInformation1 = OptionalNullable.of(additionalInformation1);
        this.additionalInformation2 = OptionalNullable.of(additionalInformation2);
        this.additionalInformation3 = OptionalNullable.of(additionalInformation3);
        this.additionalInformation4 = OptionalNullable.of(additionalInformation4);
        this.additionalInformation5 = OptionalNullable.of(additionalInformation5);
        this.additionalInformation6 = OptionalNullable.of(additionalInformation6);
        this.additionalInformation7 = OptionalNullable.of(additionalInformation7);
        this.additionalInformation8 = OptionalNullable.of(additionalInformation8);
        this.additionalInformation9 = OptionalNullable.of(additionalInformation9);
        this.cardGroupId = OptionalNullable.of(cardGroupId);
        this.cardGroupName = OptionalNullable.of(cardGroupName);
        this.cardId = OptionalNullable.of(cardId);
        this.colCoCode = OptionalNullable.of(colCoCode);
        this.colCoId = OptionalNullable.of(colCoId);
        this.errorCode = errorCode;
        this.errorString = OptionalNullable.of(errorString);
        this.globalRequestID = OptionalNullable.of(globalRequestID);
        this.pAN = OptionalNullable.of(pAN);
        this.payerId = OptionalNullable.of(payerId);
        this.payerNumber = OptionalNullable.of(payerNumber);
        this.processedOn = OptionalNullable.of(processedOn);
        this.requestedBy = OptionalNullable.of(requestedBy);
        this.requestedOperation = OptionalNullable.of(requestedOperation);
        this.requestReference = OptionalNullable.of(requestReference);
        this.requestType = OptionalNullable.of(requestType);
        this.status = OptionalNullable.of(status);
        this.submittedOn = OptionalNullable.of(submittedOn);
        this.subRequestReference = OptionalNullable.of(subRequestReference);
        this.userDisplayName = OptionalNullable.of(userDisplayName);
    }

    /**
     * Initialization constructor.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  additionalInformation1  String value for additionalInformation1.
     * @param  additionalInformation2  String value for additionalInformation2.
     * @param  additionalInformation3  String value for additionalInformation3.
     * @param  additionalInformation4  String value for additionalInformation4.
     * @param  additionalInformation5  String value for additionalInformation5.
     * @param  additionalInformation6  String value for additionalInformation6.
     * @param  additionalInformation7  String value for additionalInformation7.
     * @param  additionalInformation8  String value for additionalInformation8.
     * @param  additionalInformation9  String value for additionalInformation9.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  cardId  Integer value for cardId.
     * @param  colCoCode  Integer value for colCoCode.
     * @param  colCoId  Integer value for colCoId.
     * @param  errorCode  String value for errorCode.
     * @param  errorString  String value for errorString.
     * @param  globalRequestID  String value for globalRequestID.
     * @param  pAN  String value for pAN.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  processedOn  String value for processedOn.
     * @param  requestedBy  String value for requestedBy.
     * @param  requestedOperation  String value for requestedOperation.
     * @param  requestReference  Integer value for requestReference.
     * @param  requestType  String value for requestType.
     * @param  status  String value for status.
     * @param  submittedOn  String value for submittedOn.
     * @param  subRequestReference  Integer value for subRequestReference.
     * @param  userDisplayName  String value for userDisplayName.
     */

    protected AuditResponseAuditsItems(OptionalNullable<Integer> accountId,
            OptionalNullable<String> accountNumber, OptionalNullable<String> additionalInformation1,
            OptionalNullable<String> additionalInformation2,
            OptionalNullable<String> additionalInformation3,
            OptionalNullable<String> additionalInformation4,
            OptionalNullable<String> additionalInformation5,
            OptionalNullable<String> additionalInformation6,
            OptionalNullable<String> additionalInformation7,
            OptionalNullable<String> additionalInformation8,
            OptionalNullable<String> additionalInformation9, OptionalNullable<Integer> cardGroupId,
            OptionalNullable<String> cardGroupName, OptionalNullable<Integer> cardId,
            OptionalNullable<Integer> colCoCode, OptionalNullable<Integer> colCoId,
            String errorCode, OptionalNullable<String> errorString,
            OptionalNullable<String> globalRequestID, OptionalNullable<String> pAN,
            OptionalNullable<Integer> payerId, OptionalNullable<String> payerNumber,
            OptionalNullable<String> processedOn, OptionalNullable<String> requestedBy,
            OptionalNullable<String> requestedOperation, OptionalNullable<Integer> requestReference,
            OptionalNullable<String> requestType, OptionalNullable<String> status,
            OptionalNullable<String> submittedOn, OptionalNullable<Integer> subRequestReference,
            OptionalNullable<String> userDisplayName) {
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.additionalInformation1 = additionalInformation1;
        this.additionalInformation2 = additionalInformation2;
        this.additionalInformation3 = additionalInformation3;
        this.additionalInformation4 = additionalInformation4;
        this.additionalInformation5 = additionalInformation5;
        this.additionalInformation6 = additionalInformation6;
        this.additionalInformation7 = additionalInformation7;
        this.additionalInformation8 = additionalInformation8;
        this.additionalInformation9 = additionalInformation9;
        this.cardGroupId = cardGroupId;
        this.cardGroupName = cardGroupName;
        this.cardId = cardId;
        this.colCoCode = colCoCode;
        this.colCoId = colCoId;
        this.errorCode = errorCode;
        this.errorString = errorString;
        this.globalRequestID = globalRequestID;
        this.pAN = pAN;
        this.payerId = payerId;
        this.payerNumber = payerNumber;
        this.processedOn = processedOn;
        this.requestedBy = requestedBy;
        this.requestedOperation = requestedOperation;
        this.requestReference = requestReference;
        this.requestType = requestType;
        this.status = status;
        this.submittedOn = submittedOn;
        this.subRequestReference = subRequestReference;
        this.userDisplayName = userDisplayName;
    }

    /**
     * Internal Getter for AccountId.
     * Account id of the customer. It will be the source account id in case of “Fund Transfer
     * @return Returns the Internal Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAccountId() {
        return this.accountId;
    }

    /**
     * Getter for AccountId.
     * Account id of the customer. It will be the source account id in case of “Fund Transfer
     * @return Returns the Integer
     */
    public Integer getAccountId() {
        return OptionalNullable.getFrom(accountId);
    }

    /**
     * Setter for AccountId.
     * Account id of the customer. It will be the source account id in case of “Fund Transfer
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = OptionalNullable.of(accountId);
    }

    /**
     * UnSetter for AccountId.
     * Account id of the customer. It will be the source account id in case of “Fund Transfer
     */
    public void unsetAccountId() {
        accountId = null;
    }

    /**
     * Internal Getter for AccountNumber.
     * Account number of the customer. It will be the source account number in case of “Fund
     * Transfer”
     * @return Returns the Internal String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountNumber() {
        return this.accountNumber;
    }

    /**
     * Getter for AccountNumber.
     * Account number of the customer. It will be the source account number in case of “Fund
     * Transfer”
     * @return Returns the String
     */
    public String getAccountNumber() {
        return OptionalNullable.getFrom(accountNumber);
    }

    /**
     * Setter for AccountNumber.
     * Account number of the customer. It will be the source account number in case of “Fund
     * Transfer”
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = OptionalNullable.of(accountNumber);
    }

    /**
     * UnSetter for AccountNumber.
     * Account number of the customer. It will be the source account number in case of “Fund
     * Transfer”
     */
    public void unsetAccountNumber() {
        accountNumber = null;
    }

    /**
     * Internal Getter for AdditionalInformation1.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation1() {
        return this.additionalInformation1;
    }

    /**
     * Getter for AdditionalInformation1.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation1() {
        return OptionalNullable.getFrom(additionalInformation1);
    }

    /**
     * Setter for AdditionalInformation1.
     * Additional information in the request.
     * @param additionalInformation1 Value for String
     */
    @JsonSetter("AdditionalInformation1")
    public void setAdditionalInformation1(String additionalInformation1) {
        this.additionalInformation1 = OptionalNullable.of(additionalInformation1);
    }

    /**
     * UnSetter for AdditionalInformation1.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation1() {
        additionalInformation1 = null;
    }

    /**
     * Internal Getter for AdditionalInformation2.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation2() {
        return this.additionalInformation2;
    }

    /**
     * Getter for AdditionalInformation2.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation2() {
        return OptionalNullable.getFrom(additionalInformation2);
    }

    /**
     * Setter for AdditionalInformation2.
     * Additional information in the request.
     * @param additionalInformation2 Value for String
     */
    @JsonSetter("AdditionalInformation2")
    public void setAdditionalInformation2(String additionalInformation2) {
        this.additionalInformation2 = OptionalNullable.of(additionalInformation2);
    }

    /**
     * UnSetter for AdditionalInformation2.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation2() {
        additionalInformation2 = null;
    }

    /**
     * Internal Getter for AdditionalInformation3.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation3() {
        return this.additionalInformation3;
    }

    /**
     * Getter for AdditionalInformation3.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation3() {
        return OptionalNullable.getFrom(additionalInformation3);
    }

    /**
     * Setter for AdditionalInformation3.
     * Additional information in the request.
     * @param additionalInformation3 Value for String
     */
    @JsonSetter("AdditionalInformation3")
    public void setAdditionalInformation3(String additionalInformation3) {
        this.additionalInformation3 = OptionalNullable.of(additionalInformation3);
    }

    /**
     * UnSetter for AdditionalInformation3.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation3() {
        additionalInformation3 = null;
    }

    /**
     * Internal Getter for AdditionalInformation4.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation4")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation4() {
        return this.additionalInformation4;
    }

    /**
     * Getter for AdditionalInformation4.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation4() {
        return OptionalNullable.getFrom(additionalInformation4);
    }

    /**
     * Setter for AdditionalInformation4.
     * Additional information in the request.
     * @param additionalInformation4 Value for String
     */
    @JsonSetter("AdditionalInformation4")
    public void setAdditionalInformation4(String additionalInformation4) {
        this.additionalInformation4 = OptionalNullable.of(additionalInformation4);
    }

    /**
     * UnSetter for AdditionalInformation4.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation4() {
        additionalInformation4 = null;
    }

    /**
     * Internal Getter for AdditionalInformation5.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation5")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation5() {
        return this.additionalInformation5;
    }

    /**
     * Getter for AdditionalInformation5.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation5() {
        return OptionalNullable.getFrom(additionalInformation5);
    }

    /**
     * Setter for AdditionalInformation5.
     * Additional information in the request.
     * @param additionalInformation5 Value for String
     */
    @JsonSetter("AdditionalInformation5")
    public void setAdditionalInformation5(String additionalInformation5) {
        this.additionalInformation5 = OptionalNullable.of(additionalInformation5);
    }

    /**
     * UnSetter for AdditionalInformation5.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation5() {
        additionalInformation5 = null;
    }

    /**
     * Internal Getter for AdditionalInformation6.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation6")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation6() {
        return this.additionalInformation6;
    }

    /**
     * Getter for AdditionalInformation6.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation6() {
        return OptionalNullable.getFrom(additionalInformation6);
    }

    /**
     * Setter for AdditionalInformation6.
     * Additional information in the request.
     * @param additionalInformation6 Value for String
     */
    @JsonSetter("AdditionalInformation6")
    public void setAdditionalInformation6(String additionalInformation6) {
        this.additionalInformation6 = OptionalNullable.of(additionalInformation6);
    }

    /**
     * UnSetter for AdditionalInformation6.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation6() {
        additionalInformation6 = null;
    }

    /**
     * Internal Getter for AdditionalInformation7.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation7")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation7() {
        return this.additionalInformation7;
    }

    /**
     * Getter for AdditionalInformation7.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation7() {
        return OptionalNullable.getFrom(additionalInformation7);
    }

    /**
     * Setter for AdditionalInformation7.
     * Additional information in the request.
     * @param additionalInformation7 Value for String
     */
    @JsonSetter("AdditionalInformation7")
    public void setAdditionalInformation7(String additionalInformation7) {
        this.additionalInformation7 = OptionalNullable.of(additionalInformation7);
    }

    /**
     * UnSetter for AdditionalInformation7.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation7() {
        additionalInformation7 = null;
    }

    /**
     * Internal Getter for AdditionalInformation8.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation8")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation8() {
        return this.additionalInformation8;
    }

    /**
     * Getter for AdditionalInformation8.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation8() {
        return OptionalNullable.getFrom(additionalInformation8);
    }

    /**
     * Setter for AdditionalInformation8.
     * Additional information in the request.
     * @param additionalInformation8 Value for String
     */
    @JsonSetter("AdditionalInformation8")
    public void setAdditionalInformation8(String additionalInformation8) {
        this.additionalInformation8 = OptionalNullable.of(additionalInformation8);
    }

    /**
     * UnSetter for AdditionalInformation8.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation8() {
        additionalInformation8 = null;
    }

    /**
     * Internal Getter for AdditionalInformation9.
     * Additional information in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("AdditionalInformation9")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAdditionalInformation9() {
        return this.additionalInformation9;
    }

    /**
     * Getter for AdditionalInformation9.
     * Additional information in the request.
     * @return Returns the String
     */
    public String getAdditionalInformation9() {
        return OptionalNullable.getFrom(additionalInformation9);
    }

    /**
     * Setter for AdditionalInformation9.
     * Additional information in the request.
     * @param additionalInformation9 Value for String
     */
    @JsonSetter("AdditionalInformation9")
    public void setAdditionalInformation9(String additionalInformation9) {
        this.additionalInformation9 = OptionalNullable.of(additionalInformation9);
    }

    /**
     * UnSetter for AdditionalInformation9.
     * Additional information in the request.
     */
    public void unsetAdditionalInformation9() {
        additionalInformation9 = null;
    }

    /**
     * Internal Getter for CardGroupId.
     * Additional information in the request.
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardGroupId() {
        return this.cardGroupId;
    }

    /**
     * Getter for CardGroupId.
     * Additional information in the request.
     * @return Returns the Integer
     */
    public Integer getCardGroupId() {
        return OptionalNullable.getFrom(cardGroupId);
    }

    /**
     * Setter for CardGroupId.
     * Additional information in the request.
     * @param cardGroupId Value for Integer
     */
    @JsonSetter("CardGroupId")
    public void setCardGroupId(Integer cardGroupId) {
        this.cardGroupId = OptionalNullable.of(cardGroupId);
    }

    /**
     * UnSetter for CardGroupId.
     * Additional information in the request.
     */
    public void unsetCardGroupId() {
        cardGroupId = null;
    }

    /**
     * Internal Getter for CardGroupName.
     * Card group name in the request.
     * @return Returns the Internal String
     */
    @JsonGetter("CardGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCardGroupName() {
        return this.cardGroupName;
    }

    /**
     * Getter for CardGroupName.
     * Card group name in the request.
     * @return Returns the String
     */
    public String getCardGroupName() {
        return OptionalNullable.getFrom(cardGroupName);
    }

    /**
     * Setter for CardGroupName.
     * Card group name in the request.
     * @param cardGroupName Value for String
     */
    @JsonSetter("CardGroupName")
    public void setCardGroupName(String cardGroupName) {
        this.cardGroupName = OptionalNullable.of(cardGroupName);
    }

    /**
     * UnSetter for CardGroupName.
     * Card group name in the request.
     */
    public void unsetCardGroupName() {
        cardGroupName = null;
    }

    /**
     * Internal Getter for CardId.
     * Card Id in the request
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardId() {
        return this.cardId;
    }

    /**
     * Getter for CardId.
     * Card Id in the request
     * @return Returns the Integer
     */
    public Integer getCardId() {
        return OptionalNullable.getFrom(cardId);
    }

    /**
     * Setter for CardId.
     * Card Id in the request
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = OptionalNullable.of(cardId);
    }

    /**
     * UnSetter for CardId.
     * Card Id in the request
     */
    public void unsetCardId() {
        cardId = null;
    }

    /**
     * Internal Getter for ColCoCode.
     * Collecting company code of the customer
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoCode() {
        return this.colCoCode;
    }

    /**
     * Getter for ColCoCode.
     * Collecting company code of the customer
     * @return Returns the Integer
     */
    public Integer getColCoCode() {
        return OptionalNullable.getFrom(colCoCode);
    }

    /**
     * Setter for ColCoCode.
     * Collecting company code of the customer
     * @param colCoCode Value for Integer
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(Integer colCoCode) {
        this.colCoCode = OptionalNullable.of(colCoCode);
    }

    /**
     * UnSetter for ColCoCode.
     * Collecting company code of the customer
     */
    public void unsetColCoCode() {
        colCoCode = null;
    }

    /**
     * Internal Getter for ColCoId.
     * Collecting company id of the customer.
     * @return Returns the Internal Integer
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetColCoId() {
        return this.colCoId;
    }

    /**
     * Getter for ColCoId.
     * Collecting company id of the customer.
     * @return Returns the Integer
     */
    public Integer getColCoId() {
        return OptionalNullable.getFrom(colCoId);
    }

    /**
     * Setter for ColCoId.
     * Collecting company id of the customer.
     * @param colCoId Value for Integer
     */
    @JsonSetter("ColCoId")
    public void setColCoId(Integer colCoId) {
        this.colCoId = OptionalNullable.of(colCoId);
    }

    /**
     * UnSetter for ColCoId.
     * Collecting company id of the customer.
     */
    public void unsetColCoId() {
        colCoId = null;
    }

    /**
     * Getter for ErrorCode.
     * Error code of the request
     * @return Returns the String
     */
    @JsonGetter("ErrorCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrorCode() {
        return errorCode;
    }

    /**
     * Setter for ErrorCode.
     * Error code of the request
     * @param errorCode Value for String
     */
    @JsonSetter("ErrorCode")
    public void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * Internal Getter for ErrorString.
     * Error description of the request
     * @return Returns the Internal String
     */
    @JsonGetter("ErrorString")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetErrorString() {
        return this.errorString;
    }

    /**
     * Getter for ErrorString.
     * Error description of the request
     * @return Returns the String
     */
    public String getErrorString() {
        return OptionalNullable.getFrom(errorString);
    }

    /**
     * Setter for ErrorString.
     * Error description of the request
     * @param errorString Value for String
     */
    @JsonSetter("ErrorString")
    public void setErrorString(String errorString) {
        this.errorString = OptionalNullable.of(errorString);
    }

    /**
     * UnSetter for ErrorString.
     * Error description of the request
     */
    public void unsetErrorString() {
        errorString = null;
    }

    /**
     * Internal Getter for GlobalRequestID.
     * Global unique request reference provided by client application.
     * @return Returns the Internal String
     */
    @JsonGetter("GlobalRequestID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetGlobalRequestID() {
        return this.globalRequestID;
    }

    /**
     * Getter for GlobalRequestID.
     * Global unique request reference provided by client application.
     * @return Returns the String
     */
    public String getGlobalRequestID() {
        return OptionalNullable.getFrom(globalRequestID);
    }

    /**
     * Setter for GlobalRequestID.
     * Global unique request reference provided by client application.
     * @param globalRequestID Value for String
     */
    @JsonSetter("GlobalRequestID")
    public void setGlobalRequestID(String globalRequestID) {
        this.globalRequestID = OptionalNullable.of(globalRequestID);
    }

    /**
     * UnSetter for GlobalRequestID.
     * Global unique request reference provided by client application.
     */
    public void unsetGlobalRequestID() {
        globalRequestID = null;
    }

    /**
     * Internal Getter for PAN.
     * PAN in the request. If Mask PAN is enabled at Microservices configuration then all digits of
     * the PAN, except the last 6 digits, will be masked.
     * @return Returns the Internal String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPAN() {
        return this.pAN;
    }

    /**
     * Getter for PAN.
     * PAN in the request. If Mask PAN is enabled at Microservices configuration then all digits of
     * the PAN, except the last 6 digits, will be masked.
     * @return Returns the String
     */
    public String getPAN() {
        return OptionalNullable.getFrom(pAN);
    }

    /**
     * Setter for PAN.
     * PAN in the request. If Mask PAN is enabled at Microservices configuration then all digits of
     * the PAN, except the last 6 digits, will be masked.
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = OptionalNullable.of(pAN);
    }

    /**
     * UnSetter for PAN.
     * PAN in the request. If Mask PAN is enabled at Microservices configuration then all digits of
     * the PAN, except the last 6 digits, will be masked.
     */
    public void unsetPAN() {
        pAN = null;
    }

    /**
     * Internal Getter for PayerId.
     * Payer id of the customer.
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * Payer id of the customer.
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * Payer id of the customer.
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     * Payer id of the customer.
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Internal Getter for PayerNumber.
     * Payer number of the customer.
     * @return Returns the Internal String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerNumber() {
        return this.payerNumber;
    }

    /**
     * Getter for PayerNumber.
     * Payer number of the customer.
     * @return Returns the String
     */
    public String getPayerNumber() {
        return OptionalNullable.getFrom(payerNumber);
    }

    /**
     * Setter for PayerNumber.
     * Payer number of the customer.
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = OptionalNullable.of(payerNumber);
    }

    /**
     * UnSetter for PayerNumber.
     * Payer number of the customer.
     */
    public void unsetPayerNumber() {
        payerNumber = null;
    }

    /**
     * Internal Getter for ProcessedOn.
     * Request processed date. Format: yyyyMMdd HH:mm: ss
     * @return Returns the Internal String
     */
    @JsonGetter("ProcessedOn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProcessedOn() {
        return this.processedOn;
    }

    /**
     * Getter for ProcessedOn.
     * Request processed date. Format: yyyyMMdd HH:mm: ss
     * @return Returns the String
     */
    public String getProcessedOn() {
        return OptionalNullable.getFrom(processedOn);
    }

    /**
     * Setter for ProcessedOn.
     * Request processed date. Format: yyyyMMdd HH:mm: ss
     * @param processedOn Value for String
     */
    @JsonSetter("ProcessedOn")
    public void setProcessedOn(String processedOn) {
        this.processedOn = OptionalNullable.of(processedOn);
    }

    /**
     * UnSetter for ProcessedOn.
     * Request processed date. Format: yyyyMMdd HH:mm: ss
     */
    public void unsetProcessedOn() {
        processedOn = null;
    }

    /**
     * Internal Getter for RequestedBy.
     * vUUID of the user who submitted this request. It will be the UUID of the Driver in the case
     * of “MobilePaymentRegistration”
     * @return Returns the Internal String
     */
    @JsonGetter("RequestedBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRequestedBy() {
        return this.requestedBy;
    }

    /**
     * Getter for RequestedBy.
     * vUUID of the user who submitted this request. It will be the UUID of the Driver in the case
     * of “MobilePaymentRegistration”
     * @return Returns the String
     */
    public String getRequestedBy() {
        return OptionalNullable.getFrom(requestedBy);
    }

    /**
     * Setter for RequestedBy.
     * vUUID of the user who submitted this request. It will be the UUID of the Driver in the case
     * of “MobilePaymentRegistration”
     * @param requestedBy Value for String
     */
    @JsonSetter("RequestedBy")
    public void setRequestedBy(String requestedBy) {
        this.requestedBy = OptionalNullable.of(requestedBy);
    }

    /**
     * UnSetter for RequestedBy.
     * vUUID of the user who submitted this request. It will be the UUID of the Driver in the case
     * of “MobilePaymentRegistration”
     */
    public void unsetRequestedBy() {
        requestedBy = null;
    }

    /**
     * Internal Getter for RequestedOperation.
     * User requested operation. Possible values: •	OrderCard •	CreateCardGroup •	PINReminder
     * •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew •	BulkCardOrder •	BulkCardBlock
     * •	BulkCardOrderMultiAccount •	MobilePaymentRegistration •	UpdateCompanyInfo •	BCOSummary
     * •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer •	DeliveryAddressUpdate
     * @return Returns the Internal String
     */
    @JsonGetter("RequestedOperation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRequestedOperation() {
        return this.requestedOperation;
    }

    /**
     * Getter for RequestedOperation.
     * User requested operation. Possible values: •	OrderCard •	CreateCardGroup •	PINReminder
     * •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew •	BulkCardOrder •	BulkCardBlock
     * •	BulkCardOrderMultiAccount •	MobilePaymentRegistration •	UpdateCompanyInfo •	BCOSummary
     * •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer •	DeliveryAddressUpdate
     * @return Returns the String
     */
    public String getRequestedOperation() {
        return OptionalNullable.getFrom(requestedOperation);
    }

    /**
     * Setter for RequestedOperation.
     * User requested operation. Possible values: •	OrderCard •	CreateCardGroup •	PINReminder
     * •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew •	BulkCardOrder •	BulkCardBlock
     * •	BulkCardOrderMultiAccount •	MobilePaymentRegistration •	UpdateCompanyInfo •	BCOSummary
     * •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer •	DeliveryAddressUpdate
     * @param requestedOperation Value for String
     */
    @JsonSetter("RequestedOperation")
    public void setRequestedOperation(String requestedOperation) {
        this.requestedOperation = OptionalNullable.of(requestedOperation);
    }

    /**
     * UnSetter for RequestedOperation.
     * User requested operation. Possible values: •	OrderCard •	CreateCardGroup •	PINReminder
     * •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew •	BulkCardOrder •	BulkCardBlock
     * •	BulkCardOrderMultiAccount •	MobilePaymentRegistration •	UpdateCompanyInfo •	BCOSummary
     * •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer •	DeliveryAddressUpdate
     */
    public void unsetRequestedOperation() {
        requestedOperation = null;
    }

    /**
     * Internal Getter for RequestReference.
     * Reference number for the requested operation.
     * @return Returns the Internal Integer
     */
    @JsonGetter("RequestReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetRequestReference() {
        return this.requestReference;
    }

    /**
     * Getter for RequestReference.
     * Reference number for the requested operation.
     * @return Returns the Integer
     */
    public Integer getRequestReference() {
        return OptionalNullable.getFrom(requestReference);
    }

    /**
     * Setter for RequestReference.
     * Reference number for the requested operation.
     * @param requestReference Value for Integer
     */
    @JsonSetter("RequestReference")
    public void setRequestReference(Integer requestReference) {
        this.requestReference = OptionalNullable.of(requestReference);
    }

    /**
     * UnSetter for RequestReference.
     * Reference number for the requested operation.
     */
    public void unsetRequestReference() {
        requestReference = null;
    }

    /**
     * Internal Getter for RequestType.
     * Request type initiated under the requested operation. Possible values: •	OrderCard
     * •	CreateCardGroup •	PINReminder •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew
     * •	BulkCardOrder •	BulkCardBlock •	BulkCardOrderMultiAccount •	MobilePaymentRegistration
     * •	UpdateCompanyInfo •	BCOSummary •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer
     * •	DeliveryAddressUpdate
     * @return Returns the Internal String
     */
    @JsonGetter("RequestType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRequestType() {
        return this.requestType;
    }

    /**
     * Getter for RequestType.
     * Request type initiated under the requested operation. Possible values: •	OrderCard
     * •	CreateCardGroup •	PINReminder •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew
     * •	BulkCardOrder •	BulkCardBlock •	BulkCardOrderMultiAccount •	MobilePaymentRegistration
     * •	UpdateCompanyInfo •	BCOSummary •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer
     * •	DeliveryAddressUpdate
     * @return Returns the String
     */
    public String getRequestType() {
        return OptionalNullable.getFrom(requestType);
    }

    /**
     * Setter for RequestType.
     * Request type initiated under the requested operation. Possible values: •	OrderCard
     * •	CreateCardGroup •	PINReminder •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew
     * •	BulkCardOrder •	BulkCardBlock •	BulkCardOrderMultiAccount •	MobilePaymentRegistration
     * •	UpdateCompanyInfo •	BCOSummary •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer
     * •	DeliveryAddressUpdate
     * @param requestType Value for String
     */
    @JsonSetter("RequestType")
    public void setRequestType(String requestType) {
        this.requestType = OptionalNullable.of(requestType);
    }

    /**
     * UnSetter for RequestType.
     * Request type initiated under the requested operation. Possible values: •	OrderCard
     * •	CreateCardGroup •	PINReminder •	MoveCard •	UpdateCardStatus •	UpdateCardGroup •	AutoRenew
     * •	BulkCardOrder •	BulkCardBlock •	BulkCardOrderMultiAccount •	MobilePaymentRegistration
     * •	UpdateCompanyInfo •	BCOSummary •	BCOMultiAccountSummary •	BCBSummary •	FundTransfer
     * •	DeliveryAddressUpdate
     */
    public void unsetRequestType() {
        requestType = null;
    }

    /**
     * Internal Getter for Status.
     * Status of the request. Possible values: •	Success •	Failed •	InProgress •	Submitted
     * •	Rejected •	PendingApproval •	MailedToCSC
     * @return Returns the Internal String
     */
    @JsonGetter("Status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * Status of the request. Possible values: •	Success •	Failed •	InProgress •	Submitted
     * •	Rejected •	PendingApproval •	MailedToCSC
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * Status of the request. Possible values: •	Success •	Failed •	InProgress •	Submitted
     * •	Rejected •	PendingApproval •	MailedToCSC
     * @param status Value for String
     */
    @JsonSetter("Status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     * Status of the request. Possible values: •	Success •	Failed •	InProgress •	Submitted
     * •	Rejected •	PendingApproval •	MailedToCSC
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for SubmittedOn.
     * Request submitted date. Format: yyyyMMdd HH:mm: ss
     * @return Returns the Internal String
     */
    @JsonGetter("SubmittedOn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSubmittedOn() {
        return this.submittedOn;
    }

    /**
     * Getter for SubmittedOn.
     * Request submitted date. Format: yyyyMMdd HH:mm: ss
     * @return Returns the String
     */
    public String getSubmittedOn() {
        return OptionalNullable.getFrom(submittedOn);
    }

    /**
     * Setter for SubmittedOn.
     * Request submitted date. Format: yyyyMMdd HH:mm: ss
     * @param submittedOn Value for String
     */
    @JsonSetter("SubmittedOn")
    public void setSubmittedOn(String submittedOn) {
        this.submittedOn = OptionalNullable.of(submittedOn);
    }

    /**
     * UnSetter for SubmittedOn.
     * Request submitted date. Format: yyyyMMdd HH:mm: ss
     */
    public void unsetSubmittedOn() {
        submittedOn = null;
    }

    /**
     * Internal Getter for SubRequestReference.
     * Reference number for the individual request type.
     * @return Returns the Internal Integer
     */
    @JsonGetter("SubRequestReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSubRequestReference() {
        return this.subRequestReference;
    }

    /**
     * Getter for SubRequestReference.
     * Reference number for the individual request type.
     * @return Returns the Integer
     */
    public Integer getSubRequestReference() {
        return OptionalNullable.getFrom(subRequestReference);
    }

    /**
     * Setter for SubRequestReference.
     * Reference number for the individual request type.
     * @param subRequestReference Value for Integer
     */
    @JsonSetter("SubRequestReference")
    public void setSubRequestReference(Integer subRequestReference) {
        this.subRequestReference = OptionalNullable.of(subRequestReference);
    }

    /**
     * UnSetter for SubRequestReference.
     * Reference number for the individual request type.
     */
    public void unsetSubRequestReference() {
        subRequestReference = null;
    }

    /**
     * Internal Getter for UserDisplayName.
     * Display name of the user who submitted this request. It will be the Display Name of the
     * Driver in the case of “MobilePaymentRegistration” in the below format:
     * @return Returns the Internal String
     */
    @JsonGetter("UserDisplayName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetUserDisplayName() {
        return this.userDisplayName;
    }

    /**
     * Getter for UserDisplayName.
     * Display name of the user who submitted this request. It will be the Display Name of the
     * Driver in the case of “MobilePaymentRegistration” in the below format:
     * @return Returns the String
     */
    public String getUserDisplayName() {
        return OptionalNullable.getFrom(userDisplayName);
    }

    /**
     * Setter for UserDisplayName.
     * Display name of the user who submitted this request. It will be the Display Name of the
     * Driver in the case of “MobilePaymentRegistration” in the below format:
     * @param userDisplayName Value for String
     */
    @JsonSetter("UserDisplayName")
    public void setUserDisplayName(String userDisplayName) {
        this.userDisplayName = OptionalNullable.of(userDisplayName);
    }

    /**
     * UnSetter for UserDisplayName.
     * Display name of the user who submitted this request. It will be the Display Name of the
     * Driver in the case of “MobilePaymentRegistration” in the below format:
     */
    public void unsetUserDisplayName() {
        userDisplayName = null;
    }

    /**
     * Converts this AuditResponseAuditsItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AuditResponseAuditsItems [" + "accountId=" + accountId + ", accountNumber="
                + accountNumber + ", additionalInformation1=" + additionalInformation1
                + ", additionalInformation2=" + additionalInformation2 + ", additionalInformation3="
                + additionalInformation3 + ", additionalInformation4=" + additionalInformation4
                + ", additionalInformation5=" + additionalInformation5 + ", additionalInformation6="
                + additionalInformation6 + ", additionalInformation7=" + additionalInformation7
                + ", additionalInformation8=" + additionalInformation8 + ", additionalInformation9="
                + additionalInformation9 + ", cardGroupId=" + cardGroupId + ", cardGroupName="
                + cardGroupName + ", cardId=" + cardId + ", colCoCode=" + colCoCode + ", colCoId="
                + colCoId + ", errorCode=" + errorCode + ", errorString=" + errorString
                + ", globalRequestID=" + globalRequestID + ", pAN=" + pAN + ", payerId=" + payerId
                + ", payerNumber=" + payerNumber + ", processedOn=" + processedOn + ", requestedBy="
                + requestedBy + ", requestedOperation=" + requestedOperation + ", requestReference="
                + requestReference + ", requestType=" + requestType + ", status=" + status
                + ", submittedOn=" + submittedOn + ", subRequestReference=" + subRequestReference
                + ", userDisplayName=" + userDisplayName + "]";
    }

    /**
     * Builds a new {@link AuditResponseAuditsItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AuditResponseAuditsItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .errorCode(getErrorCode());
        builder.accountId = internalGetAccountId();
        builder.accountNumber = internalGetAccountNumber();
        builder.additionalInformation1 = internalGetAdditionalInformation1();
        builder.additionalInformation2 = internalGetAdditionalInformation2();
        builder.additionalInformation3 = internalGetAdditionalInformation3();
        builder.additionalInformation4 = internalGetAdditionalInformation4();
        builder.additionalInformation5 = internalGetAdditionalInformation5();
        builder.additionalInformation6 = internalGetAdditionalInformation6();
        builder.additionalInformation7 = internalGetAdditionalInformation7();
        builder.additionalInformation8 = internalGetAdditionalInformation8();
        builder.additionalInformation9 = internalGetAdditionalInformation9();
        builder.cardGroupId = internalGetCardGroupId();
        builder.cardGroupName = internalGetCardGroupName();
        builder.cardId = internalGetCardId();
        builder.colCoCode = internalGetColCoCode();
        builder.colCoId = internalGetColCoId();
        builder.errorString = internalGetErrorString();
        builder.globalRequestID = internalGetGlobalRequestID();
        builder.pAN = internalGetPAN();
        builder.payerId = internalGetPayerId();
        builder.payerNumber = internalGetPayerNumber();
        builder.processedOn = internalGetProcessedOn();
        builder.requestedBy = internalGetRequestedBy();
        builder.requestedOperation = internalGetRequestedOperation();
        builder.requestReference = internalGetRequestReference();
        builder.requestType = internalGetRequestType();
        builder.status = internalGetStatus();
        builder.submittedOn = internalGetSubmittedOn();
        builder.subRequestReference = internalGetSubRequestReference();
        builder.userDisplayName = internalGetUserDisplayName();
        return builder;
    }

    /**
     * Class to build instances of {@link AuditResponseAuditsItems}.
     */
    public static class Builder {
        private OptionalNullable<Integer> accountId;
        private OptionalNullable<String> accountNumber;
        private OptionalNullable<String> additionalInformation1;
        private OptionalNullable<String> additionalInformation2;
        private OptionalNullable<String> additionalInformation3;
        private OptionalNullable<String> additionalInformation4;
        private OptionalNullable<String> additionalInformation5;
        private OptionalNullable<String> additionalInformation6;
        private OptionalNullable<String> additionalInformation7;
        private OptionalNullable<String> additionalInformation8;
        private OptionalNullable<String> additionalInformation9;
        private OptionalNullable<Integer> cardGroupId;
        private OptionalNullable<String> cardGroupName;
        private OptionalNullable<Integer> cardId;
        private OptionalNullable<Integer> colCoCode;
        private OptionalNullable<Integer> colCoId;
        private String errorCode;
        private OptionalNullable<String> errorString;
        private OptionalNullable<String> globalRequestID;
        private OptionalNullable<String> pAN;
        private OptionalNullable<Integer> payerId;
        private OptionalNullable<String> payerNumber;
        private OptionalNullable<String> processedOn;
        private OptionalNullable<String> requestedBy;
        private OptionalNullable<String> requestedOperation;
        private OptionalNullable<Integer> requestReference;
        private OptionalNullable<String> requestType;
        private OptionalNullable<String> status;
        private OptionalNullable<String> submittedOn;
        private OptionalNullable<Integer> subRequestReference;
        private OptionalNullable<String> userDisplayName;



        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = OptionalNullable.of(accountId);
            return this;
        }

        /**
         * UnSetter for accountId.
         * @return Builder
         */
        public Builder unsetAccountId() {
            accountId = null;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = OptionalNullable.of(accountNumber);
            return this;
        }

        /**
         * UnSetter for accountNumber.
         * @return Builder
         */
        public Builder unsetAccountNumber() {
            accountNumber = null;
            return this;
        }

        /**
         * Setter for additionalInformation1.
         * @param  additionalInformation1  String value for additionalInformation1.
         * @return Builder
         */
        public Builder additionalInformation1(String additionalInformation1) {
            this.additionalInformation1 = OptionalNullable.of(additionalInformation1);
            return this;
        }

        /**
         * UnSetter for additionalInformation1.
         * @return Builder
         */
        public Builder unsetAdditionalInformation1() {
            additionalInformation1 = null;
            return this;
        }

        /**
         * Setter for additionalInformation2.
         * @param  additionalInformation2  String value for additionalInformation2.
         * @return Builder
         */
        public Builder additionalInformation2(String additionalInformation2) {
            this.additionalInformation2 = OptionalNullable.of(additionalInformation2);
            return this;
        }

        /**
         * UnSetter for additionalInformation2.
         * @return Builder
         */
        public Builder unsetAdditionalInformation2() {
            additionalInformation2 = null;
            return this;
        }

        /**
         * Setter for additionalInformation3.
         * @param  additionalInformation3  String value for additionalInformation3.
         * @return Builder
         */
        public Builder additionalInformation3(String additionalInformation3) {
            this.additionalInformation3 = OptionalNullable.of(additionalInformation3);
            return this;
        }

        /**
         * UnSetter for additionalInformation3.
         * @return Builder
         */
        public Builder unsetAdditionalInformation3() {
            additionalInformation3 = null;
            return this;
        }

        /**
         * Setter for additionalInformation4.
         * @param  additionalInformation4  String value for additionalInformation4.
         * @return Builder
         */
        public Builder additionalInformation4(String additionalInformation4) {
            this.additionalInformation4 = OptionalNullable.of(additionalInformation4);
            return this;
        }

        /**
         * UnSetter for additionalInformation4.
         * @return Builder
         */
        public Builder unsetAdditionalInformation4() {
            additionalInformation4 = null;
            return this;
        }

        /**
         * Setter for additionalInformation5.
         * @param  additionalInformation5  String value for additionalInformation5.
         * @return Builder
         */
        public Builder additionalInformation5(String additionalInformation5) {
            this.additionalInformation5 = OptionalNullable.of(additionalInformation5);
            return this;
        }

        /**
         * UnSetter for additionalInformation5.
         * @return Builder
         */
        public Builder unsetAdditionalInformation5() {
            additionalInformation5 = null;
            return this;
        }

        /**
         * Setter for additionalInformation6.
         * @param  additionalInformation6  String value for additionalInformation6.
         * @return Builder
         */
        public Builder additionalInformation6(String additionalInformation6) {
            this.additionalInformation6 = OptionalNullable.of(additionalInformation6);
            return this;
        }

        /**
         * UnSetter for additionalInformation6.
         * @return Builder
         */
        public Builder unsetAdditionalInformation6() {
            additionalInformation6 = null;
            return this;
        }

        /**
         * Setter for additionalInformation7.
         * @param  additionalInformation7  String value for additionalInformation7.
         * @return Builder
         */
        public Builder additionalInformation7(String additionalInformation7) {
            this.additionalInformation7 = OptionalNullable.of(additionalInformation7);
            return this;
        }

        /**
         * UnSetter for additionalInformation7.
         * @return Builder
         */
        public Builder unsetAdditionalInformation7() {
            additionalInformation7 = null;
            return this;
        }

        /**
         * Setter for additionalInformation8.
         * @param  additionalInformation8  String value for additionalInformation8.
         * @return Builder
         */
        public Builder additionalInformation8(String additionalInformation8) {
            this.additionalInformation8 = OptionalNullable.of(additionalInformation8);
            return this;
        }

        /**
         * UnSetter for additionalInformation8.
         * @return Builder
         */
        public Builder unsetAdditionalInformation8() {
            additionalInformation8 = null;
            return this;
        }

        /**
         * Setter for additionalInformation9.
         * @param  additionalInformation9  String value for additionalInformation9.
         * @return Builder
         */
        public Builder additionalInformation9(String additionalInformation9) {
            this.additionalInformation9 = OptionalNullable.of(additionalInformation9);
            return this;
        }

        /**
         * UnSetter for additionalInformation9.
         * @return Builder
         */
        public Builder unsetAdditionalInformation9() {
            additionalInformation9 = null;
            return this;
        }

        /**
         * Setter for cardGroupId.
         * @param  cardGroupId  Integer value for cardGroupId.
         * @return Builder
         */
        public Builder cardGroupId(Integer cardGroupId) {
            this.cardGroupId = OptionalNullable.of(cardGroupId);
            return this;
        }

        /**
         * UnSetter for cardGroupId.
         * @return Builder
         */
        public Builder unsetCardGroupId() {
            cardGroupId = null;
            return this;
        }

        /**
         * Setter for cardGroupName.
         * @param  cardGroupName  String value for cardGroupName.
         * @return Builder
         */
        public Builder cardGroupName(String cardGroupName) {
            this.cardGroupName = OptionalNullable.of(cardGroupName);
            return this;
        }

        /**
         * UnSetter for cardGroupName.
         * @return Builder
         */
        public Builder unsetCardGroupName() {
            cardGroupName = null;
            return this;
        }

        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = OptionalNullable.of(cardId);
            return this;
        }

        /**
         * UnSetter for cardId.
         * @return Builder
         */
        public Builder unsetCardId() {
            cardId = null;
            return this;
        }

        /**
         * Setter for colCoCode.
         * @param  colCoCode  Integer value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(Integer colCoCode) {
            this.colCoCode = OptionalNullable.of(colCoCode);
            return this;
        }

        /**
         * UnSetter for colCoCode.
         * @return Builder
         */
        public Builder unsetColCoCode() {
            colCoCode = null;
            return this;
        }

        /**
         * Setter for colCoId.
         * @param  colCoId  Integer value for colCoId.
         * @return Builder
         */
        public Builder colCoId(Integer colCoId) {
            this.colCoId = OptionalNullable.of(colCoId);
            return this;
        }

        /**
         * UnSetter for colCoId.
         * @return Builder
         */
        public Builder unsetColCoId() {
            colCoId = null;
            return this;
        }

        /**
         * Setter for errorCode.
         * @param  errorCode  String value for errorCode.
         * @return Builder
         */
        public Builder errorCode(String errorCode) {
            this.errorCode = errorCode;
            return this;
        }

        /**
         * Setter for errorString.
         * @param  errorString  String value for errorString.
         * @return Builder
         */
        public Builder errorString(String errorString) {
            this.errorString = OptionalNullable.of(errorString);
            return this;
        }

        /**
         * UnSetter for errorString.
         * @return Builder
         */
        public Builder unsetErrorString() {
            errorString = null;
            return this;
        }

        /**
         * Setter for globalRequestID.
         * @param  globalRequestID  String value for globalRequestID.
         * @return Builder
         */
        public Builder globalRequestID(String globalRequestID) {
            this.globalRequestID = OptionalNullable.of(globalRequestID);
            return this;
        }

        /**
         * UnSetter for globalRequestID.
         * @return Builder
         */
        public Builder unsetGlobalRequestID() {
            globalRequestID = null;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = OptionalNullable.of(pAN);
            return this;
        }

        /**
         * UnSetter for pAN.
         * @return Builder
         */
        public Builder unsetPAN() {
            pAN = null;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = OptionalNullable.of(payerNumber);
            return this;
        }

        /**
         * UnSetter for payerNumber.
         * @return Builder
         */
        public Builder unsetPayerNumber() {
            payerNumber = null;
            return this;
        }

        /**
         * Setter for processedOn.
         * @param  processedOn  String value for processedOn.
         * @return Builder
         */
        public Builder processedOn(String processedOn) {
            this.processedOn = OptionalNullable.of(processedOn);
            return this;
        }

        /**
         * UnSetter for processedOn.
         * @return Builder
         */
        public Builder unsetProcessedOn() {
            processedOn = null;
            return this;
        }

        /**
         * Setter for requestedBy.
         * @param  requestedBy  String value for requestedBy.
         * @return Builder
         */
        public Builder requestedBy(String requestedBy) {
            this.requestedBy = OptionalNullable.of(requestedBy);
            return this;
        }

        /**
         * UnSetter for requestedBy.
         * @return Builder
         */
        public Builder unsetRequestedBy() {
            requestedBy = null;
            return this;
        }

        /**
         * Setter for requestedOperation.
         * @param  requestedOperation  String value for requestedOperation.
         * @return Builder
         */
        public Builder requestedOperation(String requestedOperation) {
            this.requestedOperation = OptionalNullable.of(requestedOperation);
            return this;
        }

        /**
         * UnSetter for requestedOperation.
         * @return Builder
         */
        public Builder unsetRequestedOperation() {
            requestedOperation = null;
            return this;
        }

        /**
         * Setter for requestReference.
         * @param  requestReference  Integer value for requestReference.
         * @return Builder
         */
        public Builder requestReference(Integer requestReference) {
            this.requestReference = OptionalNullable.of(requestReference);
            return this;
        }

        /**
         * UnSetter for requestReference.
         * @return Builder
         */
        public Builder unsetRequestReference() {
            requestReference = null;
            return this;
        }

        /**
         * Setter for requestType.
         * @param  requestType  String value for requestType.
         * @return Builder
         */
        public Builder requestType(String requestType) {
            this.requestType = OptionalNullable.of(requestType);
            return this;
        }

        /**
         * UnSetter for requestType.
         * @return Builder
         */
        public Builder unsetRequestType() {
            requestType = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for submittedOn.
         * @param  submittedOn  String value for submittedOn.
         * @return Builder
         */
        public Builder submittedOn(String submittedOn) {
            this.submittedOn = OptionalNullable.of(submittedOn);
            return this;
        }

        /**
         * UnSetter for submittedOn.
         * @return Builder
         */
        public Builder unsetSubmittedOn() {
            submittedOn = null;
            return this;
        }

        /**
         * Setter for subRequestReference.
         * @param  subRequestReference  Integer value for subRequestReference.
         * @return Builder
         */
        public Builder subRequestReference(Integer subRequestReference) {
            this.subRequestReference = OptionalNullable.of(subRequestReference);
            return this;
        }

        /**
         * UnSetter for subRequestReference.
         * @return Builder
         */
        public Builder unsetSubRequestReference() {
            subRequestReference = null;
            return this;
        }

        /**
         * Setter for userDisplayName.
         * @param  userDisplayName  String value for userDisplayName.
         * @return Builder
         */
        public Builder userDisplayName(String userDisplayName) {
            this.userDisplayName = OptionalNullable.of(userDisplayName);
            return this;
        }

        /**
         * UnSetter for userDisplayName.
         * @return Builder
         */
        public Builder unsetUserDisplayName() {
            userDisplayName = null;
            return this;
        }

        /**
         * Builds a new {@link AuditResponseAuditsItems} object using the set fields.
         * @return {@link AuditResponseAuditsItems}
         */
        public AuditResponseAuditsItems build() {
            return new AuditResponseAuditsItems(accountId, accountNumber, additionalInformation1,
                    additionalInformation2, additionalInformation3, additionalInformation4,
                    additionalInformation5, additionalInformation6, additionalInformation7,
                    additionalInformation8, additionalInformation9, cardGroupId, cardGroupName,
                    cardId, colCoCode, colCoId, errorCode, errorString, globalRequestID, pAN,
                    payerId, payerNumber, processedOn, requestedBy, requestedOperation,
                    requestReference, requestType, status, submittedOn, subRequestReference,
                    userDisplayName);
        }
    }
}
