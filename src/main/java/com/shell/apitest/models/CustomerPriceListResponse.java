/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for CustomerPriceListResponse type.
 */
public class CustomerPriceListResponse {
    private String requestId;
    private List<PriceList> priceList;
    private ErrorStatus error;

    /**
     * Default constructor.
     */
    public CustomerPriceListResponse() {
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  priceList  List of PriceList value for priceList.
     * @param  error  ErrorStatus value for error.
     */
    public CustomerPriceListResponse(
            String requestId,
            List<PriceList> priceList,
            ErrorStatus error) {
        this.requestId = requestId;
        this.priceList = priceList;
        this.error = error;
    }

    /**
     * Getter for RequestId.
     * UUID (according to RFC 4122 standards) for requests and responses. This will be played back
     * in the response from the request.
     * @return Returns the String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * UUID (according to RFC 4122 standards) for requests and responses. This will be played back
     * in the response from the request.
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Getter for PriceList.
     * @return Returns the List of PriceList
     */
    @JsonGetter("PriceList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PriceList> getPriceList() {
        return priceList;
    }

    /**
     * Setter for PriceList.
     * @param priceList Value for List of PriceList
     */
    @JsonSetter("PriceList")
    public void setPriceList(List<PriceList> priceList) {
        this.priceList = priceList;
    }

    /**
     * Getter for Error.
     * @return Returns the ErrorStatus
     */
    @JsonGetter("Error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ErrorStatus getError() {
        return error;
    }

    /**
     * Setter for Error.
     * @param error Value for ErrorStatus
     */
    @JsonSetter("Error")
    public void setError(ErrorStatus error) {
        this.error = error;
    }

    /**
     * Converts this CustomerPriceListResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CustomerPriceListResponse [" + "requestId=" + requestId + ", priceList=" + priceList
                + ", error=" + error + "]";
    }

    /**
     * Builds a new {@link CustomerPriceListResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CustomerPriceListResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .requestId(getRequestId())
                .priceList(getPriceList())
                .error(getError());
        return builder;
    }

    /**
     * Class to build instances of {@link CustomerPriceListResponse}.
     */
    public static class Builder {
        private String requestId;
        private List<PriceList> priceList;
        private ErrorStatus error;



        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Setter for priceList.
         * @param  priceList  List of PriceList value for priceList.
         * @return Builder
         */
        public Builder priceList(List<PriceList> priceList) {
            this.priceList = priceList;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  ErrorStatus value for error.
         * @return Builder
         */
        public Builder error(ErrorStatus error) {
            this.error = error;
            return this;
        }

        /**
         * Builds a new {@link CustomerPriceListResponse} object using the set fields.
         * @return {@link CustomerPriceListResponse}
         */
        public CustomerPriceListResponse build() {
            return new CustomerPriceListResponse(requestId, priceList, error);
        }
    }
}
