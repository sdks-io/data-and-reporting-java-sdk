/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PurchaseCategories type.
 */
public class PurchaseCategories {
    private Integer id;
    private String code;
    private String name;
    private Boolean isVisible;
    private String productGroups;

    /**
     * Default constructor.
     */
    public PurchaseCategories() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  code  String value for code.
     * @param  name  String value for name.
     * @param  isVisible  Boolean value for isVisible.
     * @param  productGroups  String value for productGroups.
     */
    public PurchaseCategories(
            Integer id,
            String code,
            String name,
            Boolean isVisible,
            String productGroups) {
        this.id = id;
        this.code = code;
        this.name = name;
        this.isVisible = isVisible;
        this.productGroups = productGroups;
    }

    /**
     * Getter for Id.
     * Purchase category Id
     * @return Returns the Integer
     */
    @JsonGetter("Id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Purchase category Id
     * @param id Value for Integer
     */
    @JsonSetter("Id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for Code.
     * Purchase category code Example: 0,1, 2 etc. Full list below: 0 - All Fuels (without VP) and
     * Lubricants 1 - Fuel Save only 2 - Fuel Save and Lubricants 3 - No Restrictions 4 - VP and
     * Fuel Save 5 - Diesel ONLY 6 - Diesel and Lubricants 7 - VP and Lubricants 8 - VP and Fuel
     * Save and Lubricants
     * @return Returns the String
     */
    @JsonGetter("Code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Purchase category code Example: 0,1, 2 etc. Full list below: 0 - All Fuels (without VP) and
     * Lubricants 1 - Fuel Save only 2 - Fuel Save and Lubricants 3 - No Restrictions 4 - VP and
     * Fuel Save 5 - Diesel ONLY 6 - Diesel and Lubricants 7 - VP and Lubricants 8 - VP and Fuel
     * Save and Lubricants
     * @param code Value for String
     */
    @JsonSetter("Code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Name.
     * Purchase category name Example: Fuel Save Only Full list below: 0 - All Fuels (without VP)
     * and Lubricants 1 - Fuel Save only 2 - Fuel Save and Lubricants 3 - No Restrictions 4 - VP and
     * Fuel Save 5 - Diesel ONLY 6 - Diesel and Lubricants 7 - VP and Lubricants 8 - VP and Fuel
     * Save and Lubricants
     * @return Returns the String
     */
    @JsonGetter("Name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Purchase category name Example: Fuel Save Only Full list below: 0 - All Fuels (without VP)
     * and Lubricants 1 - Fuel Save only 2 - Fuel Save and Lubricants 3 - No Restrictions 4 - VP and
     * Fuel Save 5 - Diesel ONLY 6 - Diesel and Lubricants 7 - VP and Lubricants 8 - VP and Fuel
     * Save and Lubricants
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for IsVisible.
     * If True then PurchaseCategory can be used while submitting new order cards requests. If false
     * this PurchaseCategory will not be used for Ordering Cards.
     * @return Returns the Boolean
     */
    @JsonGetter("IsVisible")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsVisible() {
        return isVisible;
    }

    /**
     * Setter for IsVisible.
     * If True then PurchaseCategory can be used while submitting new order cards requests. If false
     * this PurchaseCategory will not be used for Ordering Cards.
     * @param isVisible Value for Boolean
     */
    @JsonSetter("IsVisible")
    public void setIsVisible(Boolean isVisible) {
        this.isVisible = isVisible;
    }

    /**
     * Getter for ProductGroups.
     * List of Default product groups
     * @return Returns the String
     */
    @JsonGetter("ProductGroups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProductGroups() {
        return productGroups;
    }

    /**
     * Setter for ProductGroups.
     * List of Default product groups
     * @param productGroups Value for String
     */
    @JsonSetter("ProductGroups")
    public void setProductGroups(String productGroups) {
        this.productGroups = productGroups;
    }

    /**
     * Converts this PurchaseCategories into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PurchaseCategories [" + "id=" + id + ", code=" + code + ", name=" + name
                + ", isVisible=" + isVisible + ", productGroups=" + productGroups + "]";
    }

    /**
     * Builds a new {@link PurchaseCategories.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PurchaseCategories.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .code(getCode())
                .name(getName())
                .isVisible(getIsVisible())
                .productGroups(getProductGroups());
        return builder;
    }

    /**
     * Class to build instances of {@link PurchaseCategories}.
     */
    public static class Builder {
        private Integer id;
        private String code;
        private String name;
        private Boolean isVisible;
        private String productGroups;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for isVisible.
         * @param  isVisible  Boolean value for isVisible.
         * @return Builder
         */
        public Builder isVisible(Boolean isVisible) {
            this.isVisible = isVisible;
            return this;
        }

        /**
         * Setter for productGroups.
         * @param  productGroups  String value for productGroups.
         * @return Builder
         */
        public Builder productGroups(String productGroups) {
            this.productGroups = productGroups;
            return this;
        }

        /**
         * Builds a new {@link PurchaseCategories} object using the set fields.
         * @return {@link PurchaseCategories}
         */
        public PurchaseCategories build() {
            return new PurchaseCategories(id, code, name, isVisible, productGroups);
        }
    }
}
