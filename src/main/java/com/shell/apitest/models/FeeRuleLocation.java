/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for FeeRuleLocation type.
 */
public class FeeRuleLocation {
    private OptionalNullable<String> delcoId;
    private OptionalNullable<String> country;
    private OptionalNullable<String> countryCode;
    private OptionalNullable<Integer> fuelNetworkId;
    private OptionalNullable<String> networkName;
    private OptionalNullable<Integer> siteGroupId;
    private OptionalNullable<String> siteGroupName;
    private OptionalNullable<Integer> siteCode;
    private OptionalNullable<Integer> siteId;
    private OptionalNullable<String> siteName;

    /**
     * Default constructor.
     */
    public FeeRuleLocation() {
    }

    /**
     * Initialization constructor.
     * @param  delcoId  String value for delcoId.
     * @param  country  String value for country.
     * @param  countryCode  String value for countryCode.
     * @param  fuelNetworkId  Integer value for fuelNetworkId.
     * @param  networkName  String value for networkName.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  siteCode  Integer value for siteCode.
     * @param  siteId  Integer value for siteId.
     * @param  siteName  String value for siteName.
     */
    public FeeRuleLocation(
            String delcoId,
            String country,
            String countryCode,
            Integer fuelNetworkId,
            String networkName,
            Integer siteGroupId,
            String siteGroupName,
            Integer siteCode,
            Integer siteId,
            String siteName) {
        this.delcoId = OptionalNullable.of(delcoId);
        this.country = OptionalNullable.of(country);
        this.countryCode = OptionalNullable.of(countryCode);
        this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
        this.networkName = OptionalNullable.of(networkName);
        this.siteGroupId = OptionalNullable.of(siteGroupId);
        this.siteGroupName = OptionalNullable.of(siteGroupName);
        this.siteCode = OptionalNullable.of(siteCode);
        this.siteId = OptionalNullable.of(siteId);
        this.siteName = OptionalNullable.of(siteName);
    }

    /**
     * Initialization constructor.
     * @param  delcoId  String value for delcoId.
     * @param  country  String value for country.
     * @param  countryCode  String value for countryCode.
     * @param  fuelNetworkId  Integer value for fuelNetworkId.
     * @param  networkName  String value for networkName.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  siteCode  Integer value for siteCode.
     * @param  siteId  Integer value for siteId.
     * @param  siteName  String value for siteName.
     */

    protected FeeRuleLocation(OptionalNullable<String> delcoId, OptionalNullable<String> country,
            OptionalNullable<String> countryCode, OptionalNullable<Integer> fuelNetworkId,
            OptionalNullable<String> networkName, OptionalNullable<Integer> siteGroupId,
            OptionalNullable<String> siteGroupName, OptionalNullable<Integer> siteCode,
            OptionalNullable<Integer> siteId, OptionalNullable<String> siteName) {
        this.delcoId = delcoId;
        this.country = country;
        this.countryCode = countryCode;
        this.fuelNetworkId = fuelNetworkId;
        this.networkName = networkName;
        this.siteGroupId = siteGroupId;
        this.siteGroupName = siteGroupName;
        this.siteCode = siteCode;
        this.siteId = siteId;
        this.siteName = siteName;
    }

    /**
     * Internal Getter for DelcoId.
     * Delco Identifier.
     * @return Returns the Internal String
     */
    @JsonGetter("DelcoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDelcoId() {
        return this.delcoId;
    }

    /**
     * Getter for DelcoId.
     * Delco Identifier.
     * @return Returns the String
     */
    public String getDelcoId() {
        return OptionalNullable.getFrom(delcoId);
    }

    /**
     * Setter for DelcoId.
     * Delco Identifier.
     * @param delcoId Value for String
     */
    @JsonSetter("DelcoId")
    public void setDelcoId(String delcoId) {
        this.delcoId = OptionalNullable.of(delcoId);
    }

    /**
     * UnSetter for DelcoId.
     * Delco Identifier.
     */
    public void unsetDelcoId() {
        delcoId = null;
    }

    /**
     * Internal Getter for Country.
     * Country name.
     * @return Returns the Internal String
     */
    @JsonGetter("Country")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountry() {
        return this.country;
    }

    /**
     * Getter for Country.
     * Country name.
     * @return Returns the String
     */
    public String getCountry() {
        return OptionalNullable.getFrom(country);
    }

    /**
     * Setter for Country.
     * Country name.
     * @param country Value for String
     */
    @JsonSetter("Country")
    public void setCountry(String country) {
        this.country = OptionalNullable.of(country);
    }

    /**
     * UnSetter for Country.
     * Country name.
     */
    public void unsetCountry() {
        country = null;
    }

    /**
     * Internal Getter for CountryCode.
     * ISO Code of country.
     * @return Returns the Internal String
     */
    @JsonGetter("CountryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountryCode() {
        return this.countryCode;
    }

    /**
     * Getter for CountryCode.
     * ISO Code of country.
     * @return Returns the String
     */
    public String getCountryCode() {
        return OptionalNullable.getFrom(countryCode);
    }

    /**
     * Setter for CountryCode.
     * ISO Code of country.
     * @param countryCode Value for String
     */
    @JsonSetter("CountryCode")
    public void setCountryCode(String countryCode) {
        this.countryCode = OptionalNullable.of(countryCode);
    }

    /**
     * UnSetter for CountryCode.
     * ISO Code of country.
     */
    public void unsetCountryCode() {
        countryCode = null;
    }

    /**
     * Internal Getter for FuelNetworkId.
     * Fuel Network Identifier.
     * @return Returns the Internal Integer
     */
    @JsonGetter("FuelNetworkId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFuelNetworkId() {
        return this.fuelNetworkId;
    }

    /**
     * Getter for FuelNetworkId.
     * Fuel Network Identifier.
     * @return Returns the Integer
     */
    public Integer getFuelNetworkId() {
        return OptionalNullable.getFrom(fuelNetworkId);
    }

    /**
     * Setter for FuelNetworkId.
     * Fuel Network Identifier.
     * @param fuelNetworkId Value for Integer
     */
    @JsonSetter("FuelNetworkId")
    public void setFuelNetworkId(Integer fuelNetworkId) {
        this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
    }

    /**
     * UnSetter for FuelNetworkId.
     * Fuel Network Identifier.
     */
    public void unsetFuelNetworkId() {
        fuelNetworkId = null;
    }

    /**
     * Internal Getter for NetworkName.
     * Network Name.
     * @return Returns the Internal String
     */
    @JsonGetter("NetworkName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNetworkName() {
        return this.networkName;
    }

    /**
     * Getter for NetworkName.
     * Network Name.
     * @return Returns the String
     */
    public String getNetworkName() {
        return OptionalNullable.getFrom(networkName);
    }

    /**
     * Setter for NetworkName.
     * Network Name.
     * @param networkName Value for String
     */
    @JsonSetter("NetworkName")
    public void setNetworkName(String networkName) {
        this.networkName = OptionalNullable.of(networkName);
    }

    /**
     * UnSetter for NetworkName.
     * Network Name.
     */
    public void unsetNetworkName() {
        networkName = null;
    }

    /**
     * Internal Getter for SiteGroupId.
     * Site-Group ID
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteGroupId() {
        return this.siteGroupId;
    }

    /**
     * Getter for SiteGroupId.
     * Site-Group ID
     * @return Returns the Integer
     */
    public Integer getSiteGroupId() {
        return OptionalNullable.getFrom(siteGroupId);
    }

    /**
     * Setter for SiteGroupId.
     * Site-Group ID
     * @param siteGroupId Value for Integer
     */
    @JsonSetter("SiteGroupId")
    public void setSiteGroupId(Integer siteGroupId) {
        this.siteGroupId = OptionalNullable.of(siteGroupId);
    }

    /**
     * UnSetter for SiteGroupId.
     * Site-Group ID
     */
    public void unsetSiteGroupId() {
        siteGroupId = null;
    }

    /**
     * Internal Getter for SiteGroupName.
     * Site-Group name.
     * @return Returns the Internal String
     */
    @JsonGetter("SiteGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteGroupName() {
        return this.siteGroupName;
    }

    /**
     * Getter for SiteGroupName.
     * Site-Group name.
     * @return Returns the String
     */
    public String getSiteGroupName() {
        return OptionalNullable.getFrom(siteGroupName);
    }

    /**
     * Setter for SiteGroupName.
     * Site-Group name.
     * @param siteGroupName Value for String
     */
    @JsonSetter("SiteGroupName")
    public void setSiteGroupName(String siteGroupName) {
        this.siteGroupName = OptionalNullable.of(siteGroupName);
    }

    /**
     * UnSetter for SiteGroupName.
     * Site-Group name.
     */
    public void unsetSiteGroupName() {
        siteGroupName = null;
    }

    /**
     * Internal Getter for SiteCode.
     * Site Code
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteCode() {
        return this.siteCode;
    }

    /**
     * Getter for SiteCode.
     * Site Code
     * @return Returns the Integer
     */
    public Integer getSiteCode() {
        return OptionalNullable.getFrom(siteCode);
    }

    /**
     * Setter for SiteCode.
     * Site Code
     * @param siteCode Value for Integer
     */
    @JsonSetter("SiteCode")
    public void setSiteCode(Integer siteCode) {
        this.siteCode = OptionalNullable.of(siteCode);
    }

    /**
     * UnSetter for SiteCode.
     * Site Code
     */
    public void unsetSiteCode() {
        siteCode = null;
    }

    /**
     * Internal Getter for SiteId.
     * Site Identifier
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteId() {
        return this.siteId;
    }

    /**
     * Getter for SiteId.
     * Site Identifier
     * @return Returns the Integer
     */
    public Integer getSiteId() {
        return OptionalNullable.getFrom(siteId);
    }

    /**
     * Setter for SiteId.
     * Site Identifier
     * @param siteId Value for Integer
     */
    @JsonSetter("SiteId")
    public void setSiteId(Integer siteId) {
        this.siteId = OptionalNullable.of(siteId);
    }

    /**
     * UnSetter for SiteId.
     * Site Identifier
     */
    public void unsetSiteId() {
        siteId = null;
    }

    /**
     * Internal Getter for SiteName.
     * Site Name
     * @return Returns the Internal String
     */
    @JsonGetter("SiteName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteName() {
        return this.siteName;
    }

    /**
     * Getter for SiteName.
     * Site Name
     * @return Returns the String
     */
    public String getSiteName() {
        return OptionalNullable.getFrom(siteName);
    }

    /**
     * Setter for SiteName.
     * Site Name
     * @param siteName Value for String
     */
    @JsonSetter("SiteName")
    public void setSiteName(String siteName) {
        this.siteName = OptionalNullable.of(siteName);
    }

    /**
     * UnSetter for SiteName.
     * Site Name
     */
    public void unsetSiteName() {
        siteName = null;
    }

    /**
     * Converts this FeeRuleLocation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FeeRuleLocation [" + "delcoId=" + delcoId + ", country=" + country
                + ", countryCode=" + countryCode + ", fuelNetworkId=" + fuelNetworkId
                + ", networkName=" + networkName + ", siteGroupId=" + siteGroupId
                + ", siteGroupName=" + siteGroupName + ", siteCode=" + siteCode + ", siteId="
                + siteId + ", siteName=" + siteName + "]";
    }

    /**
     * Builds a new {@link FeeRuleLocation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FeeRuleLocation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.delcoId = internalGetDelcoId();
        builder.country = internalGetCountry();
        builder.countryCode = internalGetCountryCode();
        builder.fuelNetworkId = internalGetFuelNetworkId();
        builder.networkName = internalGetNetworkName();
        builder.siteGroupId = internalGetSiteGroupId();
        builder.siteGroupName = internalGetSiteGroupName();
        builder.siteCode = internalGetSiteCode();
        builder.siteId = internalGetSiteId();
        builder.siteName = internalGetSiteName();
        return builder;
    }

    /**
     * Class to build instances of {@link FeeRuleLocation}.
     */
    public static class Builder {
        private OptionalNullable<String> delcoId;
        private OptionalNullable<String> country;
        private OptionalNullable<String> countryCode;
        private OptionalNullable<Integer> fuelNetworkId;
        private OptionalNullable<String> networkName;
        private OptionalNullable<Integer> siteGroupId;
        private OptionalNullable<String> siteGroupName;
        private OptionalNullable<Integer> siteCode;
        private OptionalNullable<Integer> siteId;
        private OptionalNullable<String> siteName;



        /**
         * Setter for delcoId.
         * @param  delcoId  String value for delcoId.
         * @return Builder
         */
        public Builder delcoId(String delcoId) {
            this.delcoId = OptionalNullable.of(delcoId);
            return this;
        }

        /**
         * UnSetter for delcoId.
         * @return Builder
         */
        public Builder unsetDelcoId() {
            delcoId = null;
            return this;
        }

        /**
         * Setter for country.
         * @param  country  String value for country.
         * @return Builder
         */
        public Builder country(String country) {
            this.country = OptionalNullable.of(country);
            return this;
        }

        /**
         * UnSetter for country.
         * @return Builder
         */
        public Builder unsetCountry() {
            country = null;
            return this;
        }

        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = OptionalNullable.of(countryCode);
            return this;
        }

        /**
         * UnSetter for countryCode.
         * @return Builder
         */
        public Builder unsetCountryCode() {
            countryCode = null;
            return this;
        }

        /**
         * Setter for fuelNetworkId.
         * @param  fuelNetworkId  Integer value for fuelNetworkId.
         * @return Builder
         */
        public Builder fuelNetworkId(Integer fuelNetworkId) {
            this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
            return this;
        }

        /**
         * UnSetter for fuelNetworkId.
         * @return Builder
         */
        public Builder unsetFuelNetworkId() {
            fuelNetworkId = null;
            return this;
        }

        /**
         * Setter for networkName.
         * @param  networkName  String value for networkName.
         * @return Builder
         */
        public Builder networkName(String networkName) {
            this.networkName = OptionalNullable.of(networkName);
            return this;
        }

        /**
         * UnSetter for networkName.
         * @return Builder
         */
        public Builder unsetNetworkName() {
            networkName = null;
            return this;
        }

        /**
         * Setter for siteGroupId.
         * @param  siteGroupId  Integer value for siteGroupId.
         * @return Builder
         */
        public Builder siteGroupId(Integer siteGroupId) {
            this.siteGroupId = OptionalNullable.of(siteGroupId);
            return this;
        }

        /**
         * UnSetter for siteGroupId.
         * @return Builder
         */
        public Builder unsetSiteGroupId() {
            siteGroupId = null;
            return this;
        }

        /**
         * Setter for siteGroupName.
         * @param  siteGroupName  String value for siteGroupName.
         * @return Builder
         */
        public Builder siteGroupName(String siteGroupName) {
            this.siteGroupName = OptionalNullable.of(siteGroupName);
            return this;
        }

        /**
         * UnSetter for siteGroupName.
         * @return Builder
         */
        public Builder unsetSiteGroupName() {
            siteGroupName = null;
            return this;
        }

        /**
         * Setter for siteCode.
         * @param  siteCode  Integer value for siteCode.
         * @return Builder
         */
        public Builder siteCode(Integer siteCode) {
            this.siteCode = OptionalNullable.of(siteCode);
            return this;
        }

        /**
         * UnSetter for siteCode.
         * @return Builder
         */
        public Builder unsetSiteCode() {
            siteCode = null;
            return this;
        }

        /**
         * Setter for siteId.
         * @param  siteId  Integer value for siteId.
         * @return Builder
         */
        public Builder siteId(Integer siteId) {
            this.siteId = OptionalNullable.of(siteId);
            return this;
        }

        /**
         * UnSetter for siteId.
         * @return Builder
         */
        public Builder unsetSiteId() {
            siteId = null;
            return this;
        }

        /**
         * Setter for siteName.
         * @param  siteName  String value for siteName.
         * @return Builder
         */
        public Builder siteName(String siteName) {
            this.siteName = OptionalNullable.of(siteName);
            return this;
        }

        /**
         * UnSetter for siteName.
         * @return Builder
         */
        public Builder unsetSiteName() {
            siteName = null;
            return this;
        }

        /**
         * Builds a new {@link FeeRuleLocation} object using the set fields.
         * @return {@link FeeRuleLocation}
         */
        public FeeRuleLocation build() {
            return new FeeRuleLocation(delcoId, country, countryCode, fuelNetworkId, networkName,
                    siteGroupId, siteGroupName, siteCode, siteId, siteName);
        }
    }
}
