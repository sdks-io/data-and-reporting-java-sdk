/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for PriceList type.
 */
public class PriceList {
    private OptionalNullable<String> date;
    private OptionalNullable<String> day;
    private OptionalNullable<String> type;
    private OptionalNullable<Integer> priceListId;
    private OptionalNullable<String> priceListDescription;
    private OptionalNullable<Integer> priceRuleId;
    private OptionalNullable<String> priceRuleName;
    private OptionalNullable<Integer> delCoId;
    private OptionalNullable<String> countryCode;
    private OptionalNullable<String> country;
    private OptionalNullable<Integer> productGroupId;
    private OptionalNullable<String> productGroupName;
    private OptionalNullable<String> productCode;
    private OptionalNullable<Integer> productId;
    private OptionalNullable<String> productName;
    private OptionalNullable<Double> pricePerUnit;
    private OptionalNullable<String> currencyCode;
    private OptionalNullable<String> currencySymbol;
    private OptionalNullable<String> priceType;
    private OptionalNullable<Integer> siteGroupId;
    private OptionalNullable<String> siteGroupName;
    private OptionalNullable<Integer> siteCode;
    private OptionalNullable<Integer> siteId;
    private OptionalNullable<String> siteName;
    private OptionalNullable<Integer> fuelNetworkId;
    private OptionalNullable<String> networkName;
    private OptionalNullable<Integer> priceRuleDelcoId;
    private OptionalNullable<String> priceRuleDelcoName;
    private OptionalNullable<String> priceRuleCountry;
    private OptionalNullable<String> priceRuleCountryCode;
    private OptionalNullable<Integer> priceRuleBasisId;
    private OptionalNullable<Double> discountValue;
    private OptionalNullable<Double> pricePerUnitAfterDiscount;
    private OptionalNullable<Double> vATPercentage;
    private OptionalNullable<Integer> priceRuleCategoryId;
    private List<Tier> tiers;

    /**
     * Default constructor.
     */
    public PriceList() {
    }

    /**
     * Initialization constructor.
     * @param  date  String value for date.
     * @param  day  String value for day.
     * @param  type  String value for type.
     * @param  priceListId  Integer value for priceListId.
     * @param  priceListDescription  String value for priceListDescription.
     * @param  priceRuleId  Integer value for priceRuleId.
     * @param  priceRuleName  String value for priceRuleName.
     * @param  delCoId  Integer value for delCoId.
     * @param  countryCode  String value for countryCode.
     * @param  country  String value for country.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  productCode  String value for productCode.
     * @param  productId  Integer value for productId.
     * @param  productName  String value for productName.
     * @param  pricePerUnit  Double value for pricePerUnit.
     * @param  currencyCode  String value for currencyCode.
     * @param  currencySymbol  String value for currencySymbol.
     * @param  priceType  String value for priceType.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  siteCode  Integer value for siteCode.
     * @param  siteId  Integer value for siteId.
     * @param  siteName  String value for siteName.
     * @param  fuelNetworkId  Integer value for fuelNetworkId.
     * @param  networkName  String value for networkName.
     * @param  priceRuleDelcoId  Integer value for priceRuleDelcoId.
     * @param  priceRuleDelcoName  String value for priceRuleDelcoName.
     * @param  priceRuleCountry  String value for priceRuleCountry.
     * @param  priceRuleCountryCode  String value for priceRuleCountryCode.
     * @param  priceRuleBasisId  Integer value for priceRuleBasisId.
     * @param  discountValue  Double value for discountValue.
     * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
     * @param  vATPercentage  Double value for vATPercentage.
     * @param  priceRuleCategoryId  Integer value for priceRuleCategoryId.
     * @param  tiers  List of Tier value for tiers.
     */
    public PriceList(
            String date,
            String day,
            String type,
            Integer priceListId,
            String priceListDescription,
            Integer priceRuleId,
            String priceRuleName,
            Integer delCoId,
            String countryCode,
            String country,
            Integer productGroupId,
            String productGroupName,
            String productCode,
            Integer productId,
            String productName,
            Double pricePerUnit,
            String currencyCode,
            String currencySymbol,
            String priceType,
            Integer siteGroupId,
            String siteGroupName,
            Integer siteCode,
            Integer siteId,
            String siteName,
            Integer fuelNetworkId,
            String networkName,
            Integer priceRuleDelcoId,
            String priceRuleDelcoName,
            String priceRuleCountry,
            String priceRuleCountryCode,
            Integer priceRuleBasisId,
            Double discountValue,
            Double pricePerUnitAfterDiscount,
            Double vATPercentage,
            Integer priceRuleCategoryId,
            List<Tier> tiers) {
        this.date = OptionalNullable.of(date);
        this.day = OptionalNullable.of(day);
        this.type = OptionalNullable.of(type);
        this.priceListId = OptionalNullable.of(priceListId);
        this.priceListDescription = OptionalNullable.of(priceListDescription);
        this.priceRuleId = OptionalNullable.of(priceRuleId);
        this.priceRuleName = OptionalNullable.of(priceRuleName);
        this.delCoId = OptionalNullable.of(delCoId);
        this.countryCode = OptionalNullable.of(countryCode);
        this.country = OptionalNullable.of(country);
        this.productGroupId = OptionalNullable.of(productGroupId);
        this.productGroupName = OptionalNullable.of(productGroupName);
        this.productCode = OptionalNullable.of(productCode);
        this.productId = OptionalNullable.of(productId);
        this.productName = OptionalNullable.of(productName);
        this.pricePerUnit = OptionalNullable.of(pricePerUnit);
        this.currencyCode = OptionalNullable.of(currencyCode);
        this.currencySymbol = OptionalNullable.of(currencySymbol);
        this.priceType = OptionalNullable.of(priceType);
        this.siteGroupId = OptionalNullable.of(siteGroupId);
        this.siteGroupName = OptionalNullable.of(siteGroupName);
        this.siteCode = OptionalNullable.of(siteCode);
        this.siteId = OptionalNullable.of(siteId);
        this.siteName = OptionalNullable.of(siteName);
        this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
        this.networkName = OptionalNullable.of(networkName);
        this.priceRuleDelcoId = OptionalNullable.of(priceRuleDelcoId);
        this.priceRuleDelcoName = OptionalNullable.of(priceRuleDelcoName);
        this.priceRuleCountry = OptionalNullable.of(priceRuleCountry);
        this.priceRuleCountryCode = OptionalNullable.of(priceRuleCountryCode);
        this.priceRuleBasisId = OptionalNullable.of(priceRuleBasisId);
        this.discountValue = OptionalNullable.of(discountValue);
        this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
        this.vATPercentage = OptionalNullable.of(vATPercentage);
        this.priceRuleCategoryId = OptionalNullable.of(priceRuleCategoryId);
        this.tiers = tiers;
    }

    /**
     * Initialization constructor.
     * @param  date  String value for date.
     * @param  day  String value for day.
     * @param  type  String value for type.
     * @param  priceListId  Integer value for priceListId.
     * @param  priceListDescription  String value for priceListDescription.
     * @param  priceRuleId  Integer value for priceRuleId.
     * @param  priceRuleName  String value for priceRuleName.
     * @param  delCoId  Integer value for delCoId.
     * @param  countryCode  String value for countryCode.
     * @param  country  String value for country.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  productCode  String value for productCode.
     * @param  productId  Integer value for productId.
     * @param  productName  String value for productName.
     * @param  pricePerUnit  Double value for pricePerUnit.
     * @param  currencyCode  String value for currencyCode.
     * @param  currencySymbol  String value for currencySymbol.
     * @param  priceType  String value for priceType.
     * @param  siteGroupId  Integer value for siteGroupId.
     * @param  siteGroupName  String value for siteGroupName.
     * @param  siteCode  Integer value for siteCode.
     * @param  siteId  Integer value for siteId.
     * @param  siteName  String value for siteName.
     * @param  fuelNetworkId  Integer value for fuelNetworkId.
     * @param  networkName  String value for networkName.
     * @param  priceRuleDelcoId  Integer value for priceRuleDelcoId.
     * @param  priceRuleDelcoName  String value for priceRuleDelcoName.
     * @param  priceRuleCountry  String value for priceRuleCountry.
     * @param  priceRuleCountryCode  String value for priceRuleCountryCode.
     * @param  priceRuleBasisId  Integer value for priceRuleBasisId.
     * @param  discountValue  Double value for discountValue.
     * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
     * @param  vATPercentage  Double value for vATPercentage.
     * @param  priceRuleCategoryId  Integer value for priceRuleCategoryId.
     * @param  tiers  List of Tier value for tiers.
     */

    protected PriceList(OptionalNullable<String> date, OptionalNullable<String> day,
            OptionalNullable<String> type, OptionalNullable<Integer> priceListId,
            OptionalNullable<String> priceListDescription, OptionalNullable<Integer> priceRuleId,
            OptionalNullable<String> priceRuleName, OptionalNullable<Integer> delCoId,
            OptionalNullable<String> countryCode, OptionalNullable<String> country,
            OptionalNullable<Integer> productGroupId, OptionalNullable<String> productGroupName,
            OptionalNullable<String> productCode, OptionalNullable<Integer> productId,
            OptionalNullable<String> productName, OptionalNullable<Double> pricePerUnit,
            OptionalNullable<String> currencyCode, OptionalNullable<String> currencySymbol,
            OptionalNullable<String> priceType, OptionalNullable<Integer> siteGroupId,
            OptionalNullable<String> siteGroupName, OptionalNullable<Integer> siteCode,
            OptionalNullable<Integer> siteId, OptionalNullable<String> siteName,
            OptionalNullable<Integer> fuelNetworkId, OptionalNullable<String> networkName,
            OptionalNullable<Integer> priceRuleDelcoId, OptionalNullable<String> priceRuleDelcoName,
            OptionalNullable<String> priceRuleCountry,
            OptionalNullable<String> priceRuleCountryCode,
            OptionalNullable<Integer> priceRuleBasisId, OptionalNullable<Double> discountValue,
            OptionalNullable<Double> pricePerUnitAfterDiscount,
            OptionalNullable<Double> vATPercentage, OptionalNullable<Integer> priceRuleCategoryId,
            List<Tier> tiers) {
        this.date = date;
        this.day = day;
        this.type = type;
        this.priceListId = priceListId;
        this.priceListDescription = priceListDescription;
        this.priceRuleId = priceRuleId;
        this.priceRuleName = priceRuleName;
        this.delCoId = delCoId;
        this.countryCode = countryCode;
        this.country = country;
        this.productGroupId = productGroupId;
        this.productGroupName = productGroupName;
        this.productCode = productCode;
        this.productId = productId;
        this.productName = productName;
        this.pricePerUnit = pricePerUnit;
        this.currencyCode = currencyCode;
        this.currencySymbol = currencySymbol;
        this.priceType = priceType;
        this.siteGroupId = siteGroupId;
        this.siteGroupName = siteGroupName;
        this.siteCode = siteCode;
        this.siteId = siteId;
        this.siteName = siteName;
        this.fuelNetworkId = fuelNetworkId;
        this.networkName = networkName;
        this.priceRuleDelcoId = priceRuleDelcoId;
        this.priceRuleDelcoName = priceRuleDelcoName;
        this.priceRuleCountry = priceRuleCountry;
        this.priceRuleCountryCode = priceRuleCountryCode;
        this.priceRuleBasisId = priceRuleBasisId;
        this.discountValue = discountValue;
        this.pricePerUnitAfterDiscount = pricePerUnitAfterDiscount;
        this.vATPercentage = vATPercentage;
        this.priceRuleCategoryId = priceRuleCategoryId;
        this.tiers = tiers;
    }

    /**
     * Internal Getter for Date.
     * Date on which the price is applicable. Format: yyyyMMdd E.g.: 20180131
     * @return Returns the Internal String
     */
    @JsonGetter("Date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDate() {
        return this.date;
    }

    /**
     * Getter for Date.
     * Date on which the price is applicable. Format: yyyyMMdd E.g.: 20180131
     * @return Returns the String
     */
    public String getDate() {
        return OptionalNullable.getFrom(date);
    }

    /**
     * Setter for Date.
     * Date on which the price is applicable. Format: yyyyMMdd E.g.: 20180131
     * @param date Value for String
     */
    @JsonSetter("Date")
    public void setDate(String date) {
        this.date = OptionalNullable.of(date);
    }

    /**
     * UnSetter for Date.
     * Date on which the price is applicable. Format: yyyyMMdd E.g.: 20180131
     */
    public void unsetDate() {
        date = null;
    }

    /**
     * Internal Getter for Day.
     * Day on which the price is applicable. E.g.: Sunday, Monday etc.
     * @return Returns the Internal String
     */
    @JsonGetter("Day")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDay() {
        return this.day;
    }

    /**
     * Getter for Day.
     * Day on which the price is applicable. E.g.: Sunday, Monday etc.
     * @return Returns the String
     */
    public String getDay() {
        return OptionalNullable.getFrom(day);
    }

    /**
     * Setter for Day.
     * Day on which the price is applicable. E.g.: Sunday, Monday etc.
     * @param day Value for String
     */
    @JsonSetter("Day")
    public void setDay(String day) {
        this.day = OptionalNullable.of(day);
    }

    /**
     * UnSetter for Day.
     * Day on which the price is applicable. E.g.: Sunday, Monday etc.
     */
    public void unsetDay() {
        day = null;
    }

    /**
     * Internal Getter for Type.
     * Price list type. E.g., List, Shell Standard International List
     * @return Returns the Internal String
     */
    @JsonGetter("Type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * Price list type. E.g., List, Shell Standard International List
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * Price list type. E.g., List, Shell Standard International List
     * @param type Value for String
     */
    @JsonSetter("Type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     * Price list type. E.g., List, Shell Standard International List
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for PriceListId.
     * Price list ID
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceListId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceListId() {
        return this.priceListId;
    }

    /**
     * Getter for PriceListId.
     * Price list ID
     * @return Returns the Integer
     */
    public Integer getPriceListId() {
        return OptionalNullable.getFrom(priceListId);
    }

    /**
     * Setter for PriceListId.
     * Price list ID
     * @param priceListId Value for Integer
     */
    @JsonSetter("PriceListId")
    public void setPriceListId(Integer priceListId) {
        this.priceListId = OptionalNullable.of(priceListId);
    }

    /**
     * UnSetter for PriceListId.
     * Price list ID
     */
    public void unsetPriceListId() {
        priceListId = null;
    }

    /**
     * Internal Getter for PriceListDescription.
     * Price list description E.g., UK Fuels CRT Reseller List Price
     * @return Returns the Internal String
     */
    @JsonGetter("PriceListDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceListDescription() {
        return this.priceListDescription;
    }

    /**
     * Getter for PriceListDescription.
     * Price list description E.g., UK Fuels CRT Reseller List Price
     * @return Returns the String
     */
    public String getPriceListDescription() {
        return OptionalNullable.getFrom(priceListDescription);
    }

    /**
     * Setter for PriceListDescription.
     * Price list description E.g., UK Fuels CRT Reseller List Price
     * @param priceListDescription Value for String
     */
    @JsonSetter("PriceListDescription")
    public void setPriceListDescription(String priceListDescription) {
        this.priceListDescription = OptionalNullable.of(priceListDescription);
    }

    /**
     * UnSetter for PriceListDescription.
     * Price list description E.g., UK Fuels CRT Reseller List Price
     */
    public void unsetPriceListDescription() {
        priceListDescription = null;
    }

    /**
     * Internal Getter for PriceRuleId.
     * Price Rule Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceRuleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceRuleId() {
        return this.priceRuleId;
    }

    /**
     * Getter for PriceRuleId.
     * Price Rule Id
     * @return Returns the Integer
     */
    public Integer getPriceRuleId() {
        return OptionalNullable.getFrom(priceRuleId);
    }

    /**
     * Setter for PriceRuleId.
     * Price Rule Id
     * @param priceRuleId Value for Integer
     */
    @JsonSetter("PriceRuleId")
    public void setPriceRuleId(Integer priceRuleId) {
        this.priceRuleId = OptionalNullable.of(priceRuleId);
    }

    /**
     * UnSetter for PriceRuleId.
     * Price Rule Id
     */
    public void unsetPriceRuleId() {
        priceRuleId = null;
    }

    /**
     * Internal Getter for PriceRuleName.
     * Price Rule Name
     * @return Returns the Internal String
     */
    @JsonGetter("PriceRuleName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceRuleName() {
        return this.priceRuleName;
    }

    /**
     * Getter for PriceRuleName.
     * Price Rule Name
     * @return Returns the String
     */
    public String getPriceRuleName() {
        return OptionalNullable.getFrom(priceRuleName);
    }

    /**
     * Setter for PriceRuleName.
     * Price Rule Name
     * @param priceRuleName Value for String
     */
    @JsonSetter("PriceRuleName")
    public void setPriceRuleName(String priceRuleName) {
        this.priceRuleName = OptionalNullable.of(priceRuleName);
    }

    /**
     * UnSetter for PriceRuleName.
     * Price Rule Name
     */
    public void unsetPriceRuleName() {
        priceRuleName = null;
    }

    /**
     * Internal Getter for DelCoId.
     * DelCo Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("DelCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDelCoId() {
        return this.delCoId;
    }

    /**
     * Getter for DelCoId.
     * DelCo Id
     * @return Returns the Integer
     */
    public Integer getDelCoId() {
        return OptionalNullable.getFrom(delCoId);
    }

    /**
     * Setter for DelCoId.
     * DelCo Id
     * @param delCoId Value for Integer
     */
    @JsonSetter("DelCoId")
    public void setDelCoId(Integer delCoId) {
        this.delCoId = OptionalNullable.of(delCoId);
    }

    /**
     * UnSetter for DelCoId.
     * DelCo Id
     */
    public void unsetDelCoId() {
        delCoId = null;
    }

    /**
     * Internal Getter for CountryCode.
     * Country ISO Code E.g., UK, NL, etc.,
     * @return Returns the Internal String
     */
    @JsonGetter("CountryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountryCode() {
        return this.countryCode;
    }

    /**
     * Getter for CountryCode.
     * Country ISO Code E.g., UK, NL, etc.,
     * @return Returns the String
     */
    public String getCountryCode() {
        return OptionalNullable.getFrom(countryCode);
    }

    /**
     * Setter for CountryCode.
     * Country ISO Code E.g., UK, NL, etc.,
     * @param countryCode Value for String
     */
    @JsonSetter("CountryCode")
    public void setCountryCode(String countryCode) {
        this.countryCode = OptionalNullable.of(countryCode);
    }

    /**
     * UnSetter for CountryCode.
     * Country ISO Code E.g., UK, NL, etc.,
     */
    public void unsetCountryCode() {
        countryCode = null;
    }

    /**
     * Internal Getter for Country.
     * Country E.g., United Kingdom, Netherlands etc
     * @return Returns the Internal String
     */
    @JsonGetter("Country")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountry() {
        return this.country;
    }

    /**
     * Getter for Country.
     * Country E.g., United Kingdom, Netherlands etc
     * @return Returns the String
     */
    public String getCountry() {
        return OptionalNullable.getFrom(country);
    }

    /**
     * Setter for Country.
     * Country E.g., United Kingdom, Netherlands etc
     * @param country Value for String
     */
    @JsonSetter("Country")
    public void setCountry(String country) {
        this.country = OptionalNullable.of(country);
    }

    /**
     * UnSetter for Country.
     * Country E.g., United Kingdom, Netherlands etc
     */
    public void unsetCountry() {
        country = null;
    }

    /**
     * Internal Getter for ProductGroupId.
     * Product Group Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductGroupId() {
        return this.productGroupId;
    }

    /**
     * Getter for ProductGroupId.
     * Product Group Id
     * @return Returns the Integer
     */
    public Integer getProductGroupId() {
        return OptionalNullable.getFrom(productGroupId);
    }

    /**
     * Setter for ProductGroupId.
     * Product Group Id
     * @param productGroupId Value for Integer
     */
    @JsonSetter("ProductGroupId")
    public void setProductGroupId(Integer productGroupId) {
        this.productGroupId = OptionalNullable.of(productGroupId);
    }

    /**
     * UnSetter for ProductGroupId.
     * Product Group Id
     */
    public void unsetProductGroupId() {
        productGroupId = null;
    }

    /**
     * Internal Getter for ProductGroupName.
     * Product Group name
     * @return Returns the Internal String
     */
    @JsonGetter("ProductGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductGroupName() {
        return this.productGroupName;
    }

    /**
     * Getter for ProductGroupName.
     * Product Group name
     * @return Returns the String
     */
    public String getProductGroupName() {
        return OptionalNullable.getFrom(productGroupName);
    }

    /**
     * Setter for ProductGroupName.
     * Product Group name
     * @param productGroupName Value for String
     */
    @JsonSetter("ProductGroupName")
    public void setProductGroupName(String productGroupName) {
        this.productGroupName = OptionalNullable.of(productGroupName);
    }

    /**
     * UnSetter for ProductGroupName.
     * Product Group name
     */
    public void unsetProductGroupName() {
        productGroupName = null;
    }

    /**
     * Internal Getter for ProductCode.
     * Client Product Code
     * @return Returns the Internal String
     */
    @JsonGetter("ProductCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductCode() {
        return this.productCode;
    }

    /**
     * Getter for ProductCode.
     * Client Product Code
     * @return Returns the String
     */
    public String getProductCode() {
        return OptionalNullable.getFrom(productCode);
    }

    /**
     * Setter for ProductCode.
     * Client Product Code
     * @param productCode Value for String
     */
    @JsonSetter("ProductCode")
    public void setProductCode(String productCode) {
        this.productCode = OptionalNullable.of(productCode);
    }

    /**
     * UnSetter for ProductCode.
     * Client Product Code
     */
    public void unsetProductCode() {
        productCode = null;
    }

    /**
     * Internal Getter for ProductId.
     * Product Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductId() {
        return this.productId;
    }

    /**
     * Getter for ProductId.
     * Product Id
     * @return Returns the Integer
     */
    public Integer getProductId() {
        return OptionalNullable.getFrom(productId);
    }

    /**
     * Setter for ProductId.
     * Product Id
     * @param productId Value for Integer
     */
    @JsonSetter("ProductId")
    public void setProductId(Integer productId) {
        this.productId = OptionalNullable.of(productId);
    }

    /**
     * UnSetter for ProductId.
     * Product Id
     */
    public void unsetProductId() {
        productId = null;
    }

    /**
     * Internal Getter for ProductName.
     * Product name in English
     * @return Returns the Internal String
     */
    @JsonGetter("ProductName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductName() {
        return this.productName;
    }

    /**
     * Getter for ProductName.
     * Product name in English
     * @return Returns the String
     */
    public String getProductName() {
        return OptionalNullable.getFrom(productName);
    }

    /**
     * Setter for ProductName.
     * Product name in English
     * @param productName Value for String
     */
    @JsonSetter("ProductName")
    public void setProductName(String productName) {
        this.productName = OptionalNullable.of(productName);
    }

    /**
     * UnSetter for ProductName.
     * Product name in English
     */
    public void unsetProductName() {
        productName = null;
    }

    /**
     * Internal Getter for PricePerUnit.
     * Price per unit
     * @return Returns the Internal Double
     */
    @JsonGetter("PricePerUnit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetPricePerUnit() {
        return this.pricePerUnit;
    }

    /**
     * Getter for PricePerUnit.
     * Price per unit
     * @return Returns the Double
     */
    public Double getPricePerUnit() {
        return OptionalNullable.getFrom(pricePerUnit);
    }

    /**
     * Setter for PricePerUnit.
     * Price per unit
     * @param pricePerUnit Value for Double
     */
    @JsonSetter("PricePerUnit")
    public void setPricePerUnit(Double pricePerUnit) {
        this.pricePerUnit = OptionalNullable.of(pricePerUnit);
    }

    /**
     * UnSetter for PricePerUnit.
     * Price per unit
     */
    public void unsetPricePerUnit() {
        pricePerUnit = null;
    }

    /**
     * Internal Getter for CurrencyCode.
     * Currency Code. Format : 3 digit ISO code
     * @return Returns the Internal String
     */
    @JsonGetter("CurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCurrencyCode() {
        return this.currencyCode;
    }

    /**
     * Getter for CurrencyCode.
     * Currency Code. Format : 3 digit ISO code
     * @return Returns the String
     */
    public String getCurrencyCode() {
        return OptionalNullable.getFrom(currencyCode);
    }

    /**
     * Setter for CurrencyCode.
     * Currency Code. Format : 3 digit ISO code
     * @param currencyCode Value for String
     */
    @JsonSetter("CurrencyCode")
    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = OptionalNullable.of(currencyCode);
    }

    /**
     * UnSetter for CurrencyCode.
     * Currency Code. Format : 3 digit ISO code
     */
    public void unsetCurrencyCode() {
        currencyCode = null;
    }

    /**
     * Internal Getter for CurrencySymbol.
     * Currency Symbol Example: £
     * @return Returns the Internal String
     */
    @JsonGetter("CurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCurrencySymbol() {
        return this.currencySymbol;
    }

    /**
     * Getter for CurrencySymbol.
     * Currency Symbol Example: £
     * @return Returns the String
     */
    public String getCurrencySymbol() {
        return OptionalNullable.getFrom(currencySymbol);
    }

    /**
     * Setter for CurrencySymbol.
     * Currency Symbol Example: £
     * @param currencySymbol Value for String
     */
    @JsonSetter("CurrencySymbol")
    public void setCurrencySymbol(String currencySymbol) {
        this.currencySymbol = OptionalNullable.of(currencySymbol);
    }

    /**
     * UnSetter for CurrencySymbol.
     * Currency Symbol Example: £
     */
    public void unsetCurrencySymbol() {
        currencySymbol = null;
    }

    /**
     * Internal Getter for PriceType.
     * Price Type Possible Values are: •	Country– Price rule defined at country whereas Price Rule
     * DelcoId same as ColcoId. •	TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule
     * DelcoId is different from ColcoId. •	NetworkPrice – Price rule defined at Fuel Network level.
     * •	Other – Price rule defined at either Site or SiteGroup level.
     * @return Returns the Internal String
     */
    @JsonGetter("PriceType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceType() {
        return this.priceType;
    }

    /**
     * Getter for PriceType.
     * Price Type Possible Values are: •	Country– Price rule defined at country whereas Price Rule
     * DelcoId same as ColcoId. •	TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule
     * DelcoId is different from ColcoId. •	NetworkPrice – Price rule defined at Fuel Network level.
     * •	Other – Price rule defined at either Site or SiteGroup level.
     * @return Returns the String
     */
    public String getPriceType() {
        return OptionalNullable.getFrom(priceType);
    }

    /**
     * Setter for PriceType.
     * Price Type Possible Values are: •	Country– Price rule defined at country whereas Price Rule
     * DelcoId same as ColcoId. •	TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule
     * DelcoId is different from ColcoId. •	NetworkPrice – Price rule defined at Fuel Network level.
     * •	Other – Price rule defined at either Site or SiteGroup level.
     * @param priceType Value for String
     */
    @JsonSetter("PriceType")
    public void setPriceType(String priceType) {
        this.priceType = OptionalNullable.of(priceType);
    }

    /**
     * UnSetter for PriceType.
     * Price Type Possible Values are: •	Country– Price rule defined at country whereas Price Rule
     * DelcoId same as ColcoId. •	TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule
     * DelcoId is different from ColcoId. •	NetworkPrice – Price rule defined at Fuel Network level.
     * •	Other – Price rule defined at either Site or SiteGroup level.
     */
    public void unsetPriceType() {
        priceType = null;
    }

    /**
     * Internal Getter for SiteGroupId.
     * Site-Group ID E.g.: 100007
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteGroupId() {
        return this.siteGroupId;
    }

    /**
     * Getter for SiteGroupId.
     * Site-Group ID E.g.: 100007
     * @return Returns the Integer
     */
    public Integer getSiteGroupId() {
        return OptionalNullable.getFrom(siteGroupId);
    }

    /**
     * Setter for SiteGroupId.
     * Site-Group ID E.g.: 100007
     * @param siteGroupId Value for Integer
     */
    @JsonSetter("SiteGroupId")
    public void setSiteGroupId(Integer siteGroupId) {
        this.siteGroupId = OptionalNullable.of(siteGroupId);
    }

    /**
     * UnSetter for SiteGroupId.
     * Site-Group ID E.g.: 100007
     */
    public void unsetSiteGroupId() {
        siteGroupId = null;
    }

    /**
     * Internal Getter for SiteGroupName.
     * Site-Group name
     * @return Returns the Internal String
     */
    @JsonGetter("SiteGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteGroupName() {
        return this.siteGroupName;
    }

    /**
     * Getter for SiteGroupName.
     * Site-Group name
     * @return Returns the String
     */
    public String getSiteGroupName() {
        return OptionalNullable.getFrom(siteGroupName);
    }

    /**
     * Setter for SiteGroupName.
     * Site-Group name
     * @param siteGroupName Value for String
     */
    @JsonSetter("SiteGroupName")
    public void setSiteGroupName(String siteGroupName) {
        this.siteGroupName = OptionalNullable.of(siteGroupName);
    }

    /**
     * UnSetter for SiteGroupName.
     * Site-Group name
     */
    public void unsetSiteGroupName() {
        siteGroupName = null;
    }

    /**
     * Internal Getter for SiteCode.
     * Site Code
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteCode() {
        return this.siteCode;
    }

    /**
     * Getter for SiteCode.
     * Site Code
     * @return Returns the Integer
     */
    public Integer getSiteCode() {
        return OptionalNullable.getFrom(siteCode);
    }

    /**
     * Setter for SiteCode.
     * Site Code
     * @param siteCode Value for Integer
     */
    @JsonSetter("SiteCode")
    public void setSiteCode(Integer siteCode) {
        this.siteCode = OptionalNullable.of(siteCode);
    }

    /**
     * UnSetter for SiteCode.
     * Site Code
     */
    public void unsetSiteCode() {
        siteCode = null;
    }

    /**
     * Internal Getter for SiteId.
     * Site ID
     * @return Returns the Internal Integer
     */
    @JsonGetter("SiteId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSiteId() {
        return this.siteId;
    }

    /**
     * Getter for SiteId.
     * Site ID
     * @return Returns the Integer
     */
    public Integer getSiteId() {
        return OptionalNullable.getFrom(siteId);
    }

    /**
     * Setter for SiteId.
     * Site ID
     * @param siteId Value for Integer
     */
    @JsonSetter("SiteId")
    public void setSiteId(Integer siteId) {
        this.siteId = OptionalNullable.of(siteId);
    }

    /**
     * UnSetter for SiteId.
     * Site ID
     */
    public void unsetSiteId() {
        siteId = null;
    }

    /**
     * Internal Getter for SiteName.
     * Site Name
     * @return Returns the Internal String
     */
    @JsonGetter("SiteName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteName() {
        return this.siteName;
    }

    /**
     * Getter for SiteName.
     * Site Name
     * @return Returns the String
     */
    public String getSiteName() {
        return OptionalNullable.getFrom(siteName);
    }

    /**
     * Setter for SiteName.
     * Site Name
     * @param siteName Value for String
     */
    @JsonSetter("SiteName")
    public void setSiteName(String siteName) {
        this.siteName = OptionalNullable.of(siteName);
    }

    /**
     * UnSetter for SiteName.
     * Site Name
     */
    public void unsetSiteName() {
        siteName = null;
    }

    /**
     * Internal Getter for FuelNetworkId.
     * Fuel Network ID
     * @return Returns the Internal Integer
     */
    @JsonGetter("FuelNetworkId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFuelNetworkId() {
        return this.fuelNetworkId;
    }

    /**
     * Getter for FuelNetworkId.
     * Fuel Network ID
     * @return Returns the Integer
     */
    public Integer getFuelNetworkId() {
        return OptionalNullable.getFrom(fuelNetworkId);
    }

    /**
     * Setter for FuelNetworkId.
     * Fuel Network ID
     * @param fuelNetworkId Value for Integer
     */
    @JsonSetter("FuelNetworkId")
    public void setFuelNetworkId(Integer fuelNetworkId) {
        this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
    }

    /**
     * UnSetter for FuelNetworkId.
     * Fuel Network ID
     */
    public void unsetFuelNetworkId() {
        fuelNetworkId = null;
    }

    /**
     * Internal Getter for NetworkName.
     * Network Name
     * @return Returns the Internal String
     */
    @JsonGetter("NetworkName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNetworkName() {
        return this.networkName;
    }

    /**
     * Getter for NetworkName.
     * Network Name
     * @return Returns the String
     */
    public String getNetworkName() {
        return OptionalNullable.getFrom(networkName);
    }

    /**
     * Setter for NetworkName.
     * Network Name
     * @param networkName Value for String
     */
    @JsonSetter("NetworkName")
    public void setNetworkName(String networkName) {
        this.networkName = OptionalNullable.of(networkName);
    }

    /**
     * UnSetter for NetworkName.
     * Network Name
     */
    public void unsetNetworkName() {
        networkName = null;
    }

    /**
     * Internal Getter for PriceRuleDelcoId.
     * PriceRuleDelcoId
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceRuleDelcoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceRuleDelcoId() {
        return this.priceRuleDelcoId;
    }

    /**
     * Getter for PriceRuleDelcoId.
     * PriceRuleDelcoId
     * @return Returns the Integer
     */
    public Integer getPriceRuleDelcoId() {
        return OptionalNullable.getFrom(priceRuleDelcoId);
    }

    /**
     * Setter for PriceRuleDelcoId.
     * PriceRuleDelcoId
     * @param priceRuleDelcoId Value for Integer
     */
    @JsonSetter("PriceRuleDelcoId")
    public void setPriceRuleDelcoId(Integer priceRuleDelcoId) {
        this.priceRuleDelcoId = OptionalNullable.of(priceRuleDelcoId);
    }

    /**
     * UnSetter for PriceRuleDelcoId.
     * PriceRuleDelcoId
     */
    public void unsetPriceRuleDelcoId() {
        priceRuleDelcoId = null;
    }

    /**
     * Internal Getter for PriceRuleDelcoName.
     * Company Name of the price rule DelCo. E.g.: •	Pilipinas Shell Petroleum Corp •	Shell U.K. Oil
     * Products Limited •	G &amp; V SERVICE STATIONS NV
     * @return Returns the Internal String
     */
    @JsonGetter("PriceRuleDelcoName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceRuleDelcoName() {
        return this.priceRuleDelcoName;
    }

    /**
     * Getter for PriceRuleDelcoName.
     * Company Name of the price rule DelCo. E.g.: •	Pilipinas Shell Petroleum Corp •	Shell U.K. Oil
     * Products Limited •	G &amp; V SERVICE STATIONS NV
     * @return Returns the String
     */
    public String getPriceRuleDelcoName() {
        return OptionalNullable.getFrom(priceRuleDelcoName);
    }

    /**
     * Setter for PriceRuleDelcoName.
     * Company Name of the price rule DelCo. E.g.: •	Pilipinas Shell Petroleum Corp •	Shell U.K. Oil
     * Products Limited •	G &amp; V SERVICE STATIONS NV
     * @param priceRuleDelcoName Value for String
     */
    @JsonSetter("PriceRuleDelcoName")
    public void setPriceRuleDelcoName(String priceRuleDelcoName) {
        this.priceRuleDelcoName = OptionalNullable.of(priceRuleDelcoName);
    }

    /**
     * UnSetter for PriceRuleDelcoName.
     * Company Name of the price rule DelCo. E.g.: •	Pilipinas Shell Petroleum Corp •	Shell U.K. Oil
     * Products Limited •	G &amp; V SERVICE STATIONS NV
     */
    public void unsetPriceRuleDelcoName() {
        priceRuleDelcoName = null;
    }

    /**
     * Internal Getter for PriceRuleCountry.
     * PriceRuleCountry E.g.: United Kingdom
     * @return Returns the Internal String
     */
    @JsonGetter("PriceRuleCountry")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceRuleCountry() {
        return this.priceRuleCountry;
    }

    /**
     * Getter for PriceRuleCountry.
     * PriceRuleCountry E.g.: United Kingdom
     * @return Returns the String
     */
    public String getPriceRuleCountry() {
        return OptionalNullable.getFrom(priceRuleCountry);
    }

    /**
     * Setter for PriceRuleCountry.
     * PriceRuleCountry E.g.: United Kingdom
     * @param priceRuleCountry Value for String
     */
    @JsonSetter("PriceRuleCountry")
    public void setPriceRuleCountry(String priceRuleCountry) {
        this.priceRuleCountry = OptionalNullable.of(priceRuleCountry);
    }

    /**
     * UnSetter for PriceRuleCountry.
     * PriceRuleCountry E.g.: United Kingdom
     */
    public void unsetPriceRuleCountry() {
        priceRuleCountry = null;
    }

    /**
     * Internal Getter for PriceRuleCountryCode.
     * ISO Code of PriceRuleCountry E.g.: UK, NL, etc.,
     * @return Returns the Internal String
     */
    @JsonGetter("PriceRuleCountryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPriceRuleCountryCode() {
        return this.priceRuleCountryCode;
    }

    /**
     * Getter for PriceRuleCountryCode.
     * ISO Code of PriceRuleCountry E.g.: UK, NL, etc.,
     * @return Returns the String
     */
    public String getPriceRuleCountryCode() {
        return OptionalNullable.getFrom(priceRuleCountryCode);
    }

    /**
     * Setter for PriceRuleCountryCode.
     * ISO Code of PriceRuleCountry E.g.: UK, NL, etc.,
     * @param priceRuleCountryCode Value for String
     */
    @JsonSetter("PriceRuleCountryCode")
    public void setPriceRuleCountryCode(String priceRuleCountryCode) {
        this.priceRuleCountryCode = OptionalNullable.of(priceRuleCountryCode);
    }

    /**
     * UnSetter for PriceRuleCountryCode.
     * ISO Code of PriceRuleCountry E.g.: UK, NL, etc.,
     */
    public void unsetPriceRuleCountryCode() {
        priceRuleCountryCode = null;
    }

    /**
     * Internal Getter for PriceRuleBasisId.
     * PriceRuleBasisId
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceRuleBasisId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceRuleBasisId() {
        return this.priceRuleBasisId;
    }

    /**
     * Getter for PriceRuleBasisId.
     * PriceRuleBasisId
     * @return Returns the Integer
     */
    public Integer getPriceRuleBasisId() {
        return OptionalNullable.getFrom(priceRuleBasisId);
    }

    /**
     * Setter for PriceRuleBasisId.
     * PriceRuleBasisId
     * @param priceRuleBasisId Value for Integer
     */
    @JsonSetter("PriceRuleBasisId")
    public void setPriceRuleBasisId(Integer priceRuleBasisId) {
        this.priceRuleBasisId = OptionalNullable.of(priceRuleBasisId);
    }

    /**
     * UnSetter for PriceRuleBasisId.
     * PriceRuleBasisId
     */
    public void unsetPriceRuleBasisId() {
        priceRuleBasisId = null;
    }

    /**
     * Internal Getter for DiscountValue.
     * Discount value
     * @return Returns the Internal Double
     */
    @JsonGetter("DiscountValue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetDiscountValue() {
        return this.discountValue;
    }

    /**
     * Getter for DiscountValue.
     * Discount value
     * @return Returns the Double
     */
    public Double getDiscountValue() {
        return OptionalNullable.getFrom(discountValue);
    }

    /**
     * Setter for DiscountValue.
     * Discount value
     * @param discountValue Value for Double
     */
    @JsonSetter("DiscountValue")
    public void setDiscountValue(Double discountValue) {
        this.discountValue = OptionalNullable.of(discountValue);
    }

    /**
     * UnSetter for DiscountValue.
     * Discount value
     */
    public void unsetDiscountValue() {
        discountValue = null;
    }

    /**
     * Internal Getter for PricePerUnitAfterDiscount.
     * Price per unit after discount
     * @return Returns the Internal Double
     */
    @JsonGetter("PricePerUnitAfterDiscount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetPricePerUnitAfterDiscount() {
        return this.pricePerUnitAfterDiscount;
    }

    /**
     * Getter for PricePerUnitAfterDiscount.
     * Price per unit after discount
     * @return Returns the Double
     */
    public Double getPricePerUnitAfterDiscount() {
        return OptionalNullable.getFrom(pricePerUnitAfterDiscount);
    }

    /**
     * Setter for PricePerUnitAfterDiscount.
     * Price per unit after discount
     * @param pricePerUnitAfterDiscount Value for Double
     */
    @JsonSetter("PricePerUnitAfterDiscount")
    public void setPricePerUnitAfterDiscount(Double pricePerUnitAfterDiscount) {
        this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
    }

    /**
     * UnSetter for PricePerUnitAfterDiscount.
     * Price per unit after discount
     */
    public void unsetPricePerUnitAfterDiscount() {
        pricePerUnitAfterDiscount = null;
    }

    /**
     * Internal Getter for VATPercentage.
     * VAT Percentage
     * @return Returns the Internal Double
     */
    @JsonGetter("VATPercentage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetVATPercentage() {
        return this.vATPercentage;
    }

    /**
     * Getter for VATPercentage.
     * VAT Percentage
     * @return Returns the Double
     */
    public Double getVATPercentage() {
        return OptionalNullable.getFrom(vATPercentage);
    }

    /**
     * Setter for VATPercentage.
     * VAT Percentage
     * @param vATPercentage Value for Double
     */
    @JsonSetter("VATPercentage")
    public void setVATPercentage(Double vATPercentage) {
        this.vATPercentage = OptionalNullable.of(vATPercentage);
    }

    /**
     * UnSetter for VATPercentage.
     * VAT Percentage
     */
    public void unsetVATPercentage() {
        vATPercentage = null;
    }

    /**
     * Internal Getter for PriceRuleCategoryId.
     * PriceRuleCategoryId
     * @return Returns the Internal Integer
     */
    @JsonGetter("PriceRuleCategoryId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPriceRuleCategoryId() {
        return this.priceRuleCategoryId;
    }

    /**
     * Getter for PriceRuleCategoryId.
     * PriceRuleCategoryId
     * @return Returns the Integer
     */
    public Integer getPriceRuleCategoryId() {
        return OptionalNullable.getFrom(priceRuleCategoryId);
    }

    /**
     * Setter for PriceRuleCategoryId.
     * PriceRuleCategoryId
     * @param priceRuleCategoryId Value for Integer
     */
    @JsonSetter("PriceRuleCategoryId")
    public void setPriceRuleCategoryId(Integer priceRuleCategoryId) {
        this.priceRuleCategoryId = OptionalNullable.of(priceRuleCategoryId);
    }

    /**
     * UnSetter for PriceRuleCategoryId.
     * PriceRuleCategoryId
     */
    public void unsetPriceRuleCategoryId() {
        priceRuleCategoryId = null;
    }

    /**
     * Getter for Tiers.
     * @return Returns the List of Tier
     */
    @JsonGetter("Tiers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Tier> getTiers() {
        return tiers;
    }

    /**
     * Setter for Tiers.
     * @param tiers Value for List of Tier
     */
    @JsonSetter("Tiers")
    public void setTiers(List<Tier> tiers) {
        this.tiers = tiers;
    }

    /**
     * Converts this PriceList into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PriceList [" + "date=" + date + ", day=" + day + ", type=" + type + ", priceListId="
                + priceListId + ", priceListDescription=" + priceListDescription + ", priceRuleId="
                + priceRuleId + ", priceRuleName=" + priceRuleName + ", delCoId=" + delCoId
                + ", countryCode=" + countryCode + ", country=" + country + ", productGroupId="
                + productGroupId + ", productGroupName=" + productGroupName + ", productCode="
                + productCode + ", productId=" + productId + ", productName=" + productName
                + ", pricePerUnit=" + pricePerUnit + ", currencyCode=" + currencyCode
                + ", currencySymbol=" + currencySymbol + ", priceType=" + priceType
                + ", siteGroupId=" + siteGroupId + ", siteGroupName=" + siteGroupName
                + ", siteCode=" + siteCode + ", siteId=" + siteId + ", siteName=" + siteName
                + ", fuelNetworkId=" + fuelNetworkId + ", networkName=" + networkName
                + ", priceRuleDelcoId=" + priceRuleDelcoId + ", priceRuleDelcoName="
                + priceRuleDelcoName + ", priceRuleCountry=" + priceRuleCountry
                + ", priceRuleCountryCode=" + priceRuleCountryCode + ", priceRuleBasisId="
                + priceRuleBasisId + ", discountValue=" + discountValue
                + ", pricePerUnitAfterDiscount=" + pricePerUnitAfterDiscount + ", vATPercentage="
                + vATPercentage + ", priceRuleCategoryId=" + priceRuleCategoryId + ", tiers="
                + tiers + "]";
    }

    /**
     * Builds a new {@link PriceList.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PriceList.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .tiers(getTiers());
        builder.date = internalGetDate();
        builder.day = internalGetDay();
        builder.type = internalGetType();
        builder.priceListId = internalGetPriceListId();
        builder.priceListDescription = internalGetPriceListDescription();
        builder.priceRuleId = internalGetPriceRuleId();
        builder.priceRuleName = internalGetPriceRuleName();
        builder.delCoId = internalGetDelCoId();
        builder.countryCode = internalGetCountryCode();
        builder.country = internalGetCountry();
        builder.productGroupId = internalGetProductGroupId();
        builder.productGroupName = internalGetProductGroupName();
        builder.productCode = internalGetProductCode();
        builder.productId = internalGetProductId();
        builder.productName = internalGetProductName();
        builder.pricePerUnit = internalGetPricePerUnit();
        builder.currencyCode = internalGetCurrencyCode();
        builder.currencySymbol = internalGetCurrencySymbol();
        builder.priceType = internalGetPriceType();
        builder.siteGroupId = internalGetSiteGroupId();
        builder.siteGroupName = internalGetSiteGroupName();
        builder.siteCode = internalGetSiteCode();
        builder.siteId = internalGetSiteId();
        builder.siteName = internalGetSiteName();
        builder.fuelNetworkId = internalGetFuelNetworkId();
        builder.networkName = internalGetNetworkName();
        builder.priceRuleDelcoId = internalGetPriceRuleDelcoId();
        builder.priceRuleDelcoName = internalGetPriceRuleDelcoName();
        builder.priceRuleCountry = internalGetPriceRuleCountry();
        builder.priceRuleCountryCode = internalGetPriceRuleCountryCode();
        builder.priceRuleBasisId = internalGetPriceRuleBasisId();
        builder.discountValue = internalGetDiscountValue();
        builder.pricePerUnitAfterDiscount = internalGetPricePerUnitAfterDiscount();
        builder.vATPercentage = internalGetVATPercentage();
        builder.priceRuleCategoryId = internalGetPriceRuleCategoryId();
        return builder;
    }

    /**
     * Class to build instances of {@link PriceList}.
     */
    public static class Builder {
        private OptionalNullable<String> date;
        private OptionalNullable<String> day;
        private OptionalNullable<String> type;
        private OptionalNullable<Integer> priceListId;
        private OptionalNullable<String> priceListDescription;
        private OptionalNullable<Integer> priceRuleId;
        private OptionalNullable<String> priceRuleName;
        private OptionalNullable<Integer> delCoId;
        private OptionalNullable<String> countryCode;
        private OptionalNullable<String> country;
        private OptionalNullable<Integer> productGroupId;
        private OptionalNullable<String> productGroupName;
        private OptionalNullable<String> productCode;
        private OptionalNullable<Integer> productId;
        private OptionalNullable<String> productName;
        private OptionalNullable<Double> pricePerUnit;
        private OptionalNullable<String> currencyCode;
        private OptionalNullable<String> currencySymbol;
        private OptionalNullable<String> priceType;
        private OptionalNullable<Integer> siteGroupId;
        private OptionalNullable<String> siteGroupName;
        private OptionalNullable<Integer> siteCode;
        private OptionalNullable<Integer> siteId;
        private OptionalNullable<String> siteName;
        private OptionalNullable<Integer> fuelNetworkId;
        private OptionalNullable<String> networkName;
        private OptionalNullable<Integer> priceRuleDelcoId;
        private OptionalNullable<String> priceRuleDelcoName;
        private OptionalNullable<String> priceRuleCountry;
        private OptionalNullable<String> priceRuleCountryCode;
        private OptionalNullable<Integer> priceRuleBasisId;
        private OptionalNullable<Double> discountValue;
        private OptionalNullable<Double> pricePerUnitAfterDiscount;
        private OptionalNullable<Double> vATPercentage;
        private OptionalNullable<Integer> priceRuleCategoryId;
        private List<Tier> tiers;



        /**
         * Setter for date.
         * @param  date  String value for date.
         * @return Builder
         */
        public Builder date(String date) {
            this.date = OptionalNullable.of(date);
            return this;
        }

        /**
         * UnSetter for date.
         * @return Builder
         */
        public Builder unsetDate() {
            date = null;
            return this;
        }

        /**
         * Setter for day.
         * @param  day  String value for day.
         * @return Builder
         */
        public Builder day(String day) {
            this.day = OptionalNullable.of(day);
            return this;
        }

        /**
         * UnSetter for day.
         * @return Builder
         */
        public Builder unsetDay() {
            day = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for priceListId.
         * @param  priceListId  Integer value for priceListId.
         * @return Builder
         */
        public Builder priceListId(Integer priceListId) {
            this.priceListId = OptionalNullable.of(priceListId);
            return this;
        }

        /**
         * UnSetter for priceListId.
         * @return Builder
         */
        public Builder unsetPriceListId() {
            priceListId = null;
            return this;
        }

        /**
         * Setter for priceListDescription.
         * @param  priceListDescription  String value for priceListDescription.
         * @return Builder
         */
        public Builder priceListDescription(String priceListDescription) {
            this.priceListDescription = OptionalNullable.of(priceListDescription);
            return this;
        }

        /**
         * UnSetter for priceListDescription.
         * @return Builder
         */
        public Builder unsetPriceListDescription() {
            priceListDescription = null;
            return this;
        }

        /**
         * Setter for priceRuleId.
         * @param  priceRuleId  Integer value for priceRuleId.
         * @return Builder
         */
        public Builder priceRuleId(Integer priceRuleId) {
            this.priceRuleId = OptionalNullable.of(priceRuleId);
            return this;
        }

        /**
         * UnSetter for priceRuleId.
         * @return Builder
         */
        public Builder unsetPriceRuleId() {
            priceRuleId = null;
            return this;
        }

        /**
         * Setter for priceRuleName.
         * @param  priceRuleName  String value for priceRuleName.
         * @return Builder
         */
        public Builder priceRuleName(String priceRuleName) {
            this.priceRuleName = OptionalNullable.of(priceRuleName);
            return this;
        }

        /**
         * UnSetter for priceRuleName.
         * @return Builder
         */
        public Builder unsetPriceRuleName() {
            priceRuleName = null;
            return this;
        }

        /**
         * Setter for delCoId.
         * @param  delCoId  Integer value for delCoId.
         * @return Builder
         */
        public Builder delCoId(Integer delCoId) {
            this.delCoId = OptionalNullable.of(delCoId);
            return this;
        }

        /**
         * UnSetter for delCoId.
         * @return Builder
         */
        public Builder unsetDelCoId() {
            delCoId = null;
            return this;
        }

        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = OptionalNullable.of(countryCode);
            return this;
        }

        /**
         * UnSetter for countryCode.
         * @return Builder
         */
        public Builder unsetCountryCode() {
            countryCode = null;
            return this;
        }

        /**
         * Setter for country.
         * @param  country  String value for country.
         * @return Builder
         */
        public Builder country(String country) {
            this.country = OptionalNullable.of(country);
            return this;
        }

        /**
         * UnSetter for country.
         * @return Builder
         */
        public Builder unsetCountry() {
            country = null;
            return this;
        }

        /**
         * Setter for productGroupId.
         * @param  productGroupId  Integer value for productGroupId.
         * @return Builder
         */
        public Builder productGroupId(Integer productGroupId) {
            this.productGroupId = OptionalNullable.of(productGroupId);
            return this;
        }

        /**
         * UnSetter for productGroupId.
         * @return Builder
         */
        public Builder unsetProductGroupId() {
            productGroupId = null;
            return this;
        }

        /**
         * Setter for productGroupName.
         * @param  productGroupName  String value for productGroupName.
         * @return Builder
         */
        public Builder productGroupName(String productGroupName) {
            this.productGroupName = OptionalNullable.of(productGroupName);
            return this;
        }

        /**
         * UnSetter for productGroupName.
         * @return Builder
         */
        public Builder unsetProductGroupName() {
            productGroupName = null;
            return this;
        }

        /**
         * Setter for productCode.
         * @param  productCode  String value for productCode.
         * @return Builder
         */
        public Builder productCode(String productCode) {
            this.productCode = OptionalNullable.of(productCode);
            return this;
        }

        /**
         * UnSetter for productCode.
         * @return Builder
         */
        public Builder unsetProductCode() {
            productCode = null;
            return this;
        }

        /**
         * Setter for productId.
         * @param  productId  Integer value for productId.
         * @return Builder
         */
        public Builder productId(Integer productId) {
            this.productId = OptionalNullable.of(productId);
            return this;
        }

        /**
         * UnSetter for productId.
         * @return Builder
         */
        public Builder unsetProductId() {
            productId = null;
            return this;
        }

        /**
         * Setter for productName.
         * @param  productName  String value for productName.
         * @return Builder
         */
        public Builder productName(String productName) {
            this.productName = OptionalNullable.of(productName);
            return this;
        }

        /**
         * UnSetter for productName.
         * @return Builder
         */
        public Builder unsetProductName() {
            productName = null;
            return this;
        }

        /**
         * Setter for pricePerUnit.
         * @param  pricePerUnit  Double value for pricePerUnit.
         * @return Builder
         */
        public Builder pricePerUnit(Double pricePerUnit) {
            this.pricePerUnit = OptionalNullable.of(pricePerUnit);
            return this;
        }

        /**
         * UnSetter for pricePerUnit.
         * @return Builder
         */
        public Builder unsetPricePerUnit() {
            pricePerUnit = null;
            return this;
        }

        /**
         * Setter for currencyCode.
         * @param  currencyCode  String value for currencyCode.
         * @return Builder
         */
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = OptionalNullable.of(currencyCode);
            return this;
        }

        /**
         * UnSetter for currencyCode.
         * @return Builder
         */
        public Builder unsetCurrencyCode() {
            currencyCode = null;
            return this;
        }

        /**
         * Setter for currencySymbol.
         * @param  currencySymbol  String value for currencySymbol.
         * @return Builder
         */
        public Builder currencySymbol(String currencySymbol) {
            this.currencySymbol = OptionalNullable.of(currencySymbol);
            return this;
        }

        /**
         * UnSetter for currencySymbol.
         * @return Builder
         */
        public Builder unsetCurrencySymbol() {
            currencySymbol = null;
            return this;
        }

        /**
         * Setter for priceType.
         * @param  priceType  String value for priceType.
         * @return Builder
         */
        public Builder priceType(String priceType) {
            this.priceType = OptionalNullable.of(priceType);
            return this;
        }

        /**
         * UnSetter for priceType.
         * @return Builder
         */
        public Builder unsetPriceType() {
            priceType = null;
            return this;
        }

        /**
         * Setter for siteGroupId.
         * @param  siteGroupId  Integer value for siteGroupId.
         * @return Builder
         */
        public Builder siteGroupId(Integer siteGroupId) {
            this.siteGroupId = OptionalNullable.of(siteGroupId);
            return this;
        }

        /**
         * UnSetter for siteGroupId.
         * @return Builder
         */
        public Builder unsetSiteGroupId() {
            siteGroupId = null;
            return this;
        }

        /**
         * Setter for siteGroupName.
         * @param  siteGroupName  String value for siteGroupName.
         * @return Builder
         */
        public Builder siteGroupName(String siteGroupName) {
            this.siteGroupName = OptionalNullable.of(siteGroupName);
            return this;
        }

        /**
         * UnSetter for siteGroupName.
         * @return Builder
         */
        public Builder unsetSiteGroupName() {
            siteGroupName = null;
            return this;
        }

        /**
         * Setter for siteCode.
         * @param  siteCode  Integer value for siteCode.
         * @return Builder
         */
        public Builder siteCode(Integer siteCode) {
            this.siteCode = OptionalNullable.of(siteCode);
            return this;
        }

        /**
         * UnSetter for siteCode.
         * @return Builder
         */
        public Builder unsetSiteCode() {
            siteCode = null;
            return this;
        }

        /**
         * Setter for siteId.
         * @param  siteId  Integer value for siteId.
         * @return Builder
         */
        public Builder siteId(Integer siteId) {
            this.siteId = OptionalNullable.of(siteId);
            return this;
        }

        /**
         * UnSetter for siteId.
         * @return Builder
         */
        public Builder unsetSiteId() {
            siteId = null;
            return this;
        }

        /**
         * Setter for siteName.
         * @param  siteName  String value for siteName.
         * @return Builder
         */
        public Builder siteName(String siteName) {
            this.siteName = OptionalNullable.of(siteName);
            return this;
        }

        /**
         * UnSetter for siteName.
         * @return Builder
         */
        public Builder unsetSiteName() {
            siteName = null;
            return this;
        }

        /**
         * Setter for fuelNetworkId.
         * @param  fuelNetworkId  Integer value for fuelNetworkId.
         * @return Builder
         */
        public Builder fuelNetworkId(Integer fuelNetworkId) {
            this.fuelNetworkId = OptionalNullable.of(fuelNetworkId);
            return this;
        }

        /**
         * UnSetter for fuelNetworkId.
         * @return Builder
         */
        public Builder unsetFuelNetworkId() {
            fuelNetworkId = null;
            return this;
        }

        /**
         * Setter for networkName.
         * @param  networkName  String value for networkName.
         * @return Builder
         */
        public Builder networkName(String networkName) {
            this.networkName = OptionalNullable.of(networkName);
            return this;
        }

        /**
         * UnSetter for networkName.
         * @return Builder
         */
        public Builder unsetNetworkName() {
            networkName = null;
            return this;
        }

        /**
         * Setter for priceRuleDelcoId.
         * @param  priceRuleDelcoId  Integer value for priceRuleDelcoId.
         * @return Builder
         */
        public Builder priceRuleDelcoId(Integer priceRuleDelcoId) {
            this.priceRuleDelcoId = OptionalNullable.of(priceRuleDelcoId);
            return this;
        }

        /**
         * UnSetter for priceRuleDelcoId.
         * @return Builder
         */
        public Builder unsetPriceRuleDelcoId() {
            priceRuleDelcoId = null;
            return this;
        }

        /**
         * Setter for priceRuleDelcoName.
         * @param  priceRuleDelcoName  String value for priceRuleDelcoName.
         * @return Builder
         */
        public Builder priceRuleDelcoName(String priceRuleDelcoName) {
            this.priceRuleDelcoName = OptionalNullable.of(priceRuleDelcoName);
            return this;
        }

        /**
         * UnSetter for priceRuleDelcoName.
         * @return Builder
         */
        public Builder unsetPriceRuleDelcoName() {
            priceRuleDelcoName = null;
            return this;
        }

        /**
         * Setter for priceRuleCountry.
         * @param  priceRuleCountry  String value for priceRuleCountry.
         * @return Builder
         */
        public Builder priceRuleCountry(String priceRuleCountry) {
            this.priceRuleCountry = OptionalNullable.of(priceRuleCountry);
            return this;
        }

        /**
         * UnSetter for priceRuleCountry.
         * @return Builder
         */
        public Builder unsetPriceRuleCountry() {
            priceRuleCountry = null;
            return this;
        }

        /**
         * Setter for priceRuleCountryCode.
         * @param  priceRuleCountryCode  String value for priceRuleCountryCode.
         * @return Builder
         */
        public Builder priceRuleCountryCode(String priceRuleCountryCode) {
            this.priceRuleCountryCode = OptionalNullable.of(priceRuleCountryCode);
            return this;
        }

        /**
         * UnSetter for priceRuleCountryCode.
         * @return Builder
         */
        public Builder unsetPriceRuleCountryCode() {
            priceRuleCountryCode = null;
            return this;
        }

        /**
         * Setter for priceRuleBasisId.
         * @param  priceRuleBasisId  Integer value for priceRuleBasisId.
         * @return Builder
         */
        public Builder priceRuleBasisId(Integer priceRuleBasisId) {
            this.priceRuleBasisId = OptionalNullable.of(priceRuleBasisId);
            return this;
        }

        /**
         * UnSetter for priceRuleBasisId.
         * @return Builder
         */
        public Builder unsetPriceRuleBasisId() {
            priceRuleBasisId = null;
            return this;
        }

        /**
         * Setter for discountValue.
         * @param  discountValue  Double value for discountValue.
         * @return Builder
         */
        public Builder discountValue(Double discountValue) {
            this.discountValue = OptionalNullable.of(discountValue);
            return this;
        }

        /**
         * UnSetter for discountValue.
         * @return Builder
         */
        public Builder unsetDiscountValue() {
            discountValue = null;
            return this;
        }

        /**
         * Setter for pricePerUnitAfterDiscount.
         * @param  pricePerUnitAfterDiscount  Double value for pricePerUnitAfterDiscount.
         * @return Builder
         */
        public Builder pricePerUnitAfterDiscount(Double pricePerUnitAfterDiscount) {
            this.pricePerUnitAfterDiscount = OptionalNullable.of(pricePerUnitAfterDiscount);
            return this;
        }

        /**
         * UnSetter for pricePerUnitAfterDiscount.
         * @return Builder
         */
        public Builder unsetPricePerUnitAfterDiscount() {
            pricePerUnitAfterDiscount = null;
            return this;
        }

        /**
         * Setter for vATPercentage.
         * @param  vATPercentage  Double value for vATPercentage.
         * @return Builder
         */
        public Builder vATPercentage(Double vATPercentage) {
            this.vATPercentage = OptionalNullable.of(vATPercentage);
            return this;
        }

        /**
         * UnSetter for vATPercentage.
         * @return Builder
         */
        public Builder unsetVATPercentage() {
            vATPercentage = null;
            return this;
        }

        /**
         * Setter for priceRuleCategoryId.
         * @param  priceRuleCategoryId  Integer value for priceRuleCategoryId.
         * @return Builder
         */
        public Builder priceRuleCategoryId(Integer priceRuleCategoryId) {
            this.priceRuleCategoryId = OptionalNullable.of(priceRuleCategoryId);
            return this;
        }

        /**
         * UnSetter for priceRuleCategoryId.
         * @return Builder
         */
        public Builder unsetPriceRuleCategoryId() {
            priceRuleCategoryId = null;
            return this;
        }

        /**
         * Setter for tiers.
         * @param  tiers  List of Tier value for tiers.
         * @return Builder
         */
        public Builder tiers(List<Tier> tiers) {
            this.tiers = tiers;
            return this;
        }

        /**
         * Builds a new {@link PriceList} object using the set fields.
         * @return {@link PriceList}
         */
        public PriceList build() {
            return new PriceList(date, day, type, priceListId, priceListDescription, priceRuleId,
                    priceRuleName, delCoId, countryCode, country, productGroupId, productGroupName,
                    productCode, productId, productName, pricePerUnit, currencyCode, currencySymbol,
                    priceType, siteGroupId, siteGroupName, siteCode, siteId, siteName,
                    fuelNetworkId, networkName, priceRuleDelcoId, priceRuleDelcoName,
                    priceRuleCountry, priceRuleCountryCode, priceRuleBasisId, discountValue,
                    pricePerUnitAfterDiscount, vATPercentage, priceRuleCategoryId, tiers);
        }
    }
}
