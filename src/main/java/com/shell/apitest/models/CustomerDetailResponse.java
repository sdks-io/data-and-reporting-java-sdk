/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for CustomerDetailResponse type.
 */
public class CustomerDetailResponse {
    private OptionalNullable<Integer> accountId;
    private OptionalNullable<String> accountName;
    private OptionalNullable<String> accountNumber;
    private OptionalNullable<String> accountShortName;
    private OptionalNullable<String> accountTradingName;
    private Boolean allowFleetIdInput;
    private OptionalNullable<String> band;
    private Address billingAddress;
    private OptionalNullable<String> cardGroupPosition;
    private Address correspondenceAddress;
    private List<DeliveryAddresses> deliveryAddresses;
    private Boolean fleetPin;
    private OptionalNullable<String> fullName;
    private OptionalNullable<Integer> invoiceCustomerId;
    private OptionalNullable<String> invoiceCustomerShortName;
    private OptionalNullable<Boolean> isInvoicePoint;
    private OptionalNullable<String> marketingSegmentation;
    private OptionalNullable<String> vATNumber;
    private OptionalNullable<Integer> payerId;
    private OptionalNullable<String> payerName;
    private OptionalNullable<String> payerNumber;
    private OptionalNullable<Boolean> selfSelectedPin;
    private OptionalNullable<String> status;
    private OptionalNullable<Integer> defaultPINAdviceType;
    private List<PINAdviceTypes> pINAdviceTypes;
    private ErrorStatus error;
    private OptionalNullable<String> requestId;
    private Boolean pINChangeAllowedByCardholder;
    private Boolean pINChangeAllowedFromFleetPIN;

    /**
     * Default constructor.
     */
    public CustomerDetailResponse() {
    }

    /**
     * Initialization constructor.
     * @param  accountId  Integer value for accountId.
     * @param  accountName  String value for accountName.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountShortName  String value for accountShortName.
     * @param  accountTradingName  String value for accountTradingName.
     * @param  allowFleetIdInput  Boolean value for allowFleetIdInput.
     * @param  band  String value for band.
     * @param  billingAddress  Address value for billingAddress.
     * @param  cardGroupPosition  String value for cardGroupPosition.
     * @param  correspondenceAddress  Address value for correspondenceAddress.
     * @param  deliveryAddresses  List of DeliveryAddresses value for deliveryAddresses.
     * @param  fleetPin  Boolean value for fleetPin.
     * @param  fullName  String value for fullName.
     * @param  invoiceCustomerId  Integer value for invoiceCustomerId.
     * @param  invoiceCustomerShortName  String value for invoiceCustomerShortName.
     * @param  isInvoicePoint  Boolean value for isInvoicePoint.
     * @param  marketingSegmentation  String value for marketingSegmentation.
     * @param  vATNumber  String value for vATNumber.
     * @param  payerId  Integer value for payerId.
     * @param  payerName  String value for payerName.
     * @param  payerNumber  String value for payerNumber.
     * @param  selfSelectedPin  Boolean value for selfSelectedPin.
     * @param  status  String value for status.
     * @param  defaultPINAdviceType  Integer value for defaultPINAdviceType.
     * @param  pINAdviceTypes  List of PINAdviceTypes value for pINAdviceTypes.
     * @param  error  ErrorStatus value for error.
     * @param  requestId  String value for requestId.
     * @param  pINChangeAllowedByCardholder  Boolean value for pINChangeAllowedByCardholder.
     * @param  pINChangeAllowedFromFleetPIN  Boolean value for pINChangeAllowedFromFleetPIN.
     */
    public CustomerDetailResponse(
            Integer accountId,
            String accountName,
            String accountNumber,
            String accountShortName,
            String accountTradingName,
            Boolean allowFleetIdInput,
            String band,
            Address billingAddress,
            String cardGroupPosition,
            Address correspondenceAddress,
            List<DeliveryAddresses> deliveryAddresses,
            Boolean fleetPin,
            String fullName,
            Integer invoiceCustomerId,
            String invoiceCustomerShortName,
            Boolean isInvoicePoint,
            String marketingSegmentation,
            String vATNumber,
            Integer payerId,
            String payerName,
            String payerNumber,
            Boolean selfSelectedPin,
            String status,
            Integer defaultPINAdviceType,
            List<PINAdviceTypes> pINAdviceTypes,
            ErrorStatus error,
            String requestId,
            Boolean pINChangeAllowedByCardholder,
            Boolean pINChangeAllowedFromFleetPIN) {
        this.accountId = OptionalNullable.of(accountId);
        this.accountName = OptionalNullable.of(accountName);
        this.accountNumber = OptionalNullable.of(accountNumber);
        this.accountShortName = OptionalNullable.of(accountShortName);
        this.accountTradingName = OptionalNullable.of(accountTradingName);
        this.allowFleetIdInput = allowFleetIdInput;
        this.band = OptionalNullable.of(band);
        this.billingAddress = billingAddress;
        this.cardGroupPosition = OptionalNullable.of(cardGroupPosition);
        this.correspondenceAddress = correspondenceAddress;
        this.deliveryAddresses = deliveryAddresses;
        this.fleetPin = fleetPin;
        this.fullName = OptionalNullable.of(fullName);
        this.invoiceCustomerId = OptionalNullable.of(invoiceCustomerId);
        this.invoiceCustomerShortName = OptionalNullable.of(invoiceCustomerShortName);
        this.isInvoicePoint = OptionalNullable.of(isInvoicePoint);
        this.marketingSegmentation = OptionalNullable.of(marketingSegmentation);
        this.vATNumber = OptionalNullable.of(vATNumber);
        this.payerId = OptionalNullable.of(payerId);
        this.payerName = OptionalNullable.of(payerName);
        this.payerNumber = OptionalNullable.of(payerNumber);
        this.selfSelectedPin = OptionalNullable.of(selfSelectedPin);
        this.status = OptionalNullable.of(status);
        this.defaultPINAdviceType = OptionalNullable.of(defaultPINAdviceType);
        this.pINAdviceTypes = pINAdviceTypes;
        this.error = error;
        this.requestId = OptionalNullable.of(requestId);
        this.pINChangeAllowedByCardholder = pINChangeAllowedByCardholder;
        this.pINChangeAllowedFromFleetPIN = pINChangeAllowedFromFleetPIN;
    }

    /**
     * Initialization constructor.
     * @param  accountId  Integer value for accountId.
     * @param  accountName  String value for accountName.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountShortName  String value for accountShortName.
     * @param  accountTradingName  String value for accountTradingName.
     * @param  allowFleetIdInput  Boolean value for allowFleetIdInput.
     * @param  band  String value for band.
     * @param  billingAddress  Address value for billingAddress.
     * @param  cardGroupPosition  String value for cardGroupPosition.
     * @param  correspondenceAddress  Address value for correspondenceAddress.
     * @param  deliveryAddresses  List of DeliveryAddresses value for deliveryAddresses.
     * @param  fleetPin  Boolean value for fleetPin.
     * @param  fullName  String value for fullName.
     * @param  invoiceCustomerId  Integer value for invoiceCustomerId.
     * @param  invoiceCustomerShortName  String value for invoiceCustomerShortName.
     * @param  isInvoicePoint  Boolean value for isInvoicePoint.
     * @param  marketingSegmentation  String value for marketingSegmentation.
     * @param  vATNumber  String value for vATNumber.
     * @param  payerId  Integer value for payerId.
     * @param  payerName  String value for payerName.
     * @param  payerNumber  String value for payerNumber.
     * @param  selfSelectedPin  Boolean value for selfSelectedPin.
     * @param  status  String value for status.
     * @param  defaultPINAdviceType  Integer value for defaultPINAdviceType.
     * @param  pINAdviceTypes  List of PINAdviceTypes value for pINAdviceTypes.
     * @param  error  ErrorStatus value for error.
     * @param  requestId  String value for requestId.
     * @param  pINChangeAllowedByCardholder  Boolean value for pINChangeAllowedByCardholder.
     * @param  pINChangeAllowedFromFleetPIN  Boolean value for pINChangeAllowedFromFleetPIN.
     */

    protected CustomerDetailResponse(OptionalNullable<Integer> accountId,
            OptionalNullable<String> accountName, OptionalNullable<String> accountNumber,
            OptionalNullable<String> accountShortName, OptionalNullable<String> accountTradingName,
            Boolean allowFleetIdInput, OptionalNullable<String> band, Address billingAddress,
            OptionalNullable<String> cardGroupPosition, Address correspondenceAddress,
            List<DeliveryAddresses> deliveryAddresses, Boolean fleetPin,
            OptionalNullable<String> fullName, OptionalNullable<Integer> invoiceCustomerId,
            OptionalNullable<String> invoiceCustomerShortName,
            OptionalNullable<Boolean> isInvoicePoint,
            OptionalNullable<String> marketingSegmentation, OptionalNullable<String> vATNumber,
            OptionalNullable<Integer> payerId, OptionalNullable<String> payerName,
            OptionalNullable<String> payerNumber, OptionalNullable<Boolean> selfSelectedPin,
            OptionalNullable<String> status, OptionalNullable<Integer> defaultPINAdviceType,
            List<PINAdviceTypes> pINAdviceTypes, ErrorStatus error,
            OptionalNullable<String> requestId, Boolean pINChangeAllowedByCardholder,
            Boolean pINChangeAllowedFromFleetPIN) {
        this.accountId = accountId;
        this.accountName = accountName;
        this.accountNumber = accountNumber;
        this.accountShortName = accountShortName;
        this.accountTradingName = accountTradingName;
        this.allowFleetIdInput = allowFleetIdInput;
        this.band = band;
        this.billingAddress = billingAddress;
        this.cardGroupPosition = cardGroupPosition;
        this.correspondenceAddress = correspondenceAddress;
        this.deliveryAddresses = deliveryAddresses;
        this.fleetPin = fleetPin;
        this.fullName = fullName;
        this.invoiceCustomerId = invoiceCustomerId;
        this.invoiceCustomerShortName = invoiceCustomerShortName;
        this.isInvoicePoint = isInvoicePoint;
        this.marketingSegmentation = marketingSegmentation;
        this.vATNumber = vATNumber;
        this.payerId = payerId;
        this.payerName = payerName;
        this.payerNumber = payerNumber;
        this.selfSelectedPin = selfSelectedPin;
        this.status = status;
        this.defaultPINAdviceType = defaultPINAdviceType;
        this.pINAdviceTypes = pINAdviceTypes;
        this.error = error;
        this.requestId = requestId;
        this.pINChangeAllowedByCardholder = pINChangeAllowedByCardholder;
        this.pINChangeAllowedFromFleetPIN = pINChangeAllowedFromFleetPIN;
    }

    /**
     * Internal Getter for AccountId.
     * Account Id of the selected account.
     * @return Returns the Internal Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAccountId() {
        return this.accountId;
    }

    /**
     * Getter for AccountId.
     * Account Id of the selected account.
     * @return Returns the Integer
     */
    public Integer getAccountId() {
        return OptionalNullable.getFrom(accountId);
    }

    /**
     * Setter for AccountId.
     * Account Id of the selected account.
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = OptionalNullable.of(accountId);
    }

    /**
     * UnSetter for AccountId.
     * Account Id of the selected account.
     */
    public void unsetAccountId() {
        accountId = null;
    }

    /**
     * Internal Getter for AccountName.
     * Account Name of the selected account.
     * @return Returns the Internal String
     */
    @JsonGetter("AccountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountName() {
        return this.accountName;
    }

    /**
     * Getter for AccountName.
     * Account Name of the selected account.
     * @return Returns the String
     */
    public String getAccountName() {
        return OptionalNullable.getFrom(accountName);
    }

    /**
     * Setter for AccountName.
     * Account Name of the selected account.
     * @param accountName Value for String
     */
    @JsonSetter("AccountName")
    public void setAccountName(String accountName) {
        this.accountName = OptionalNullable.of(accountName);
    }

    /**
     * UnSetter for AccountName.
     * Account Name of the selected account.
     */
    public void unsetAccountName() {
        accountName = null;
    }

    /**
     * Internal Getter for AccountNumber.
     * Account Number of the selected account.
     * @return Returns the Internal String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountNumber() {
        return this.accountNumber;
    }

    /**
     * Getter for AccountNumber.
     * Account Number of the selected account.
     * @return Returns the String
     */
    public String getAccountNumber() {
        return OptionalNullable.getFrom(accountNumber);
    }

    /**
     * Setter for AccountNumber.
     * Account Number of the selected account.
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = OptionalNullable.of(accountNumber);
    }

    /**
     * UnSetter for AccountNumber.
     * Account Number of the selected account.
     */
    public void unsetAccountNumber() {
        accountNumber = null;
    }

    /**
     * Internal Getter for AccountShortName.
     * Short name of the customer.
     * @return Returns the Internal String
     */
    @JsonGetter("AccountShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountShortName() {
        return this.accountShortName;
    }

    /**
     * Getter for AccountShortName.
     * Short name of the customer.
     * @return Returns the String
     */
    public String getAccountShortName() {
        return OptionalNullable.getFrom(accountShortName);
    }

    /**
     * Setter for AccountShortName.
     * Short name of the customer.
     * @param accountShortName Value for String
     */
    @JsonSetter("AccountShortName")
    public void setAccountShortName(String accountShortName) {
        this.accountShortName = OptionalNullable.of(accountShortName);
    }

    /**
     * UnSetter for AccountShortName.
     * Short name of the customer.
     */
    public void unsetAccountShortName() {
        accountShortName = null;
    }

    /**
     * Internal Getter for AccountTradingName.
     * Trading name of the customer
     * @return Returns the Internal String
     */
    @JsonGetter("AccountTradingName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountTradingName() {
        return this.accountTradingName;
    }

    /**
     * Getter for AccountTradingName.
     * Trading name of the customer
     * @return Returns the String
     */
    public String getAccountTradingName() {
        return OptionalNullable.getFrom(accountTradingName);
    }

    /**
     * Setter for AccountTradingName.
     * Trading name of the customer
     * @param accountTradingName Value for String
     */
    @JsonSetter("AccountTradingName")
    public void setAccountTradingName(String accountTradingName) {
        this.accountTradingName = OptionalNullable.of(accountTradingName);
    }

    /**
     * UnSetter for AccountTradingName.
     * Trading name of the customer
     */
    public void unsetAccountTradingName() {
        accountTradingName = null;
    }

    /**
     * Getter for AllowFleetIdInput.
     * True/False. When false, users should not be allowed to enable Fleet Id prompt option while
     * ordering cards under this account.
     * @return Returns the Boolean
     */
    @JsonGetter("AllowFleetIdInput")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAllowFleetIdInput() {
        return allowFleetIdInput;
    }

    /**
     * Setter for AllowFleetIdInput.
     * True/False. When false, users should not be allowed to enable Fleet Id prompt option while
     * ordering cards under this account.
     * @param allowFleetIdInput Value for Boolean
     */
    @JsonSetter("AllowFleetIdInput")
    public void setAllowFleetIdInput(Boolean allowFleetIdInput) {
        this.allowFleetIdInput = allowFleetIdInput;
    }

    /**
     * Internal Getter for Band.
     * Band Id and Description of the Payer in Card Platform e.g. (Id – Description): 1-Platinum
     * 2-Gold 3-Silver 4-Bronze
     * @return Returns the Internal String
     */
    @JsonGetter("Band")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBand() {
        return this.band;
    }

    /**
     * Getter for Band.
     * Band Id and Description of the Payer in Card Platform e.g. (Id – Description): 1-Platinum
     * 2-Gold 3-Silver 4-Bronze
     * @return Returns the String
     */
    public String getBand() {
        return OptionalNullable.getFrom(band);
    }

    /**
     * Setter for Band.
     * Band Id and Description of the Payer in Card Platform e.g. (Id – Description): 1-Platinum
     * 2-Gold 3-Silver 4-Bronze
     * @param band Value for String
     */
    @JsonSetter("Band")
    public void setBand(String band) {
        this.band = OptionalNullable.of(band);
    }

    /**
     * UnSetter for Band.
     * Band Id and Description of the Payer in Card Platform e.g. (Id – Description): 1-Platinum
     * 2-Gold 3-Silver 4-Bronze
     */
    public void unsetBand() {
        band = null;
    }

    /**
     * Getter for BillingAddress.
     * @return Returns the Address
     */
    @JsonGetter("BillingAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Address getBillingAddress() {
        return billingAddress;
    }

    /**
     * Setter for BillingAddress.
     * @param billingAddress Value for Address
     */
    @JsonSetter("BillingAddress")
    public void setBillingAddress(Address billingAddress) {
        this.billingAddress = billingAddress;
    }

    /**
     * Internal Getter for CardGroupPosition.
     * Card group position at – •	Payer – Payer level •	Account – Account level
     * @return Returns the Internal String
     */
    @JsonGetter("CardGroupPosition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCardGroupPosition() {
        return this.cardGroupPosition;
    }

    /**
     * Getter for CardGroupPosition.
     * Card group position at – •	Payer – Payer level •	Account – Account level
     * @return Returns the String
     */
    public String getCardGroupPosition() {
        return OptionalNullable.getFrom(cardGroupPosition);
    }

    /**
     * Setter for CardGroupPosition.
     * Card group position at – •	Payer – Payer level •	Account – Account level
     * @param cardGroupPosition Value for String
     */
    @JsonSetter("CardGroupPosition")
    public void setCardGroupPosition(String cardGroupPosition) {
        this.cardGroupPosition = OptionalNullable.of(cardGroupPosition);
    }

    /**
     * UnSetter for CardGroupPosition.
     * Card group position at – •	Payer – Payer level •	Account – Account level
     */
    public void unsetCardGroupPosition() {
        cardGroupPosition = null;
    }

    /**
     * Getter for CorrespondenceAddress.
     * @return Returns the Address
     */
    @JsonGetter("CorrespondenceAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Address getCorrespondenceAddress() {
        return correspondenceAddress;
    }

    /**
     * Setter for CorrespondenceAddress.
     * @param correspondenceAddress Value for Address
     */
    @JsonSetter("CorrespondenceAddress")
    public void setCorrespondenceAddress(Address correspondenceAddress) {
        this.correspondenceAddress = correspondenceAddress;
    }

    /**
     * Getter for DeliveryAddresses.
     * @return Returns the List of DeliveryAddresses
     */
    @JsonGetter("DeliveryAddresses")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DeliveryAddresses> getDeliveryAddresses() {
        return deliveryAddresses;
    }

    /**
     * Setter for DeliveryAddresses.
     * @param deliveryAddresses Value for List of DeliveryAddresses
     */
    @JsonSetter("DeliveryAddresses")
    public void setDeliveryAddresses(List<DeliveryAddresses> deliveryAddresses) {
        this.deliveryAddresses = deliveryAddresses;
    }

    /**
     * Getter for FleetPin.
     * Is Fleet Pin optional enabled for the selected account
     * @return Returns the Boolean
     */
    @JsonGetter("FleetPin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFleetPin() {
        return fleetPin;
    }

    /**
     * Setter for FleetPin.
     * Is Fleet Pin optional enabled for the selected account
     * @param fleetPin Value for Boolean
     */
    @JsonSetter("FleetPin")
    public void setFleetPin(Boolean fleetPin) {
        this.fleetPin = fleetPin;
    }

    /**
     * Internal Getter for FullName.
     * Full Name of the customer
     * @return Returns the Internal String
     */
    @JsonGetter("FullName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFullName() {
        return this.fullName;
    }

    /**
     * Getter for FullName.
     * Full Name of the customer
     * @return Returns the String
     */
    public String getFullName() {
        return OptionalNullable.getFrom(fullName);
    }

    /**
     * Setter for FullName.
     * Full Name of the customer
     * @param fullName Value for String
     */
    @JsonSetter("FullName")
    public void setFullName(String fullName) {
        this.fullName = OptionalNullable.of(fullName);
    }

    /**
     * UnSetter for FullName.
     * Full Name of the customer
     */
    public void unsetFullName() {
        fullName = null;
    }

    /**
     * Internal Getter for InvoiceCustomerId.
     * Customer Id of the Invoice Point of the account
     * @return Returns the Internal Integer
     */
    @JsonGetter("InvoiceCustomerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetInvoiceCustomerId() {
        return this.invoiceCustomerId;
    }

    /**
     * Getter for InvoiceCustomerId.
     * Customer Id of the Invoice Point of the account
     * @return Returns the Integer
     */
    public Integer getInvoiceCustomerId() {
        return OptionalNullable.getFrom(invoiceCustomerId);
    }

    /**
     * Setter for InvoiceCustomerId.
     * Customer Id of the Invoice Point of the account
     * @param invoiceCustomerId Value for Integer
     */
    @JsonSetter("InvoiceCustomerId")
    public void setInvoiceCustomerId(Integer invoiceCustomerId) {
        this.invoiceCustomerId = OptionalNullable.of(invoiceCustomerId);
    }

    /**
     * UnSetter for InvoiceCustomerId.
     * Customer Id of the Invoice Point of the account
     */
    public void unsetInvoiceCustomerId() {
        invoiceCustomerId = null;
    }

    /**
     * Internal Getter for InvoiceCustomerShortName.
     * Short Name of the Invoice Point of the account
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceCustomerShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceCustomerShortName() {
        return this.invoiceCustomerShortName;
    }

    /**
     * Getter for InvoiceCustomerShortName.
     * Short Name of the Invoice Point of the account
     * @return Returns the String
     */
    public String getInvoiceCustomerShortName() {
        return OptionalNullable.getFrom(invoiceCustomerShortName);
    }

    /**
     * Setter for InvoiceCustomerShortName.
     * Short Name of the Invoice Point of the account
     * @param invoiceCustomerShortName Value for String
     */
    @JsonSetter("InvoiceCustomerShortName")
    public void setInvoiceCustomerShortName(String invoiceCustomerShortName) {
        this.invoiceCustomerShortName = OptionalNullable.of(invoiceCustomerShortName);
    }

    /**
     * UnSetter for InvoiceCustomerShortName.
     * Short Name of the Invoice Point of the account
     */
    public void unsetInvoiceCustomerShortName() {
        invoiceCustomerShortName = null;
    }

    /**
     * Internal Getter for IsInvoicePoint.
     * Whether the account is an invoice point.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("IsInvoicePoint")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetIsInvoicePoint() {
        return this.isInvoicePoint;
    }

    /**
     * Getter for IsInvoicePoint.
     * Whether the account is an invoice point.
     * @return Returns the Boolean
     */
    public Boolean getIsInvoicePoint() {
        return OptionalNullable.getFrom(isInvoicePoint);
    }

    /**
     * Setter for IsInvoicePoint.
     * Whether the account is an invoice point.
     * @param isInvoicePoint Value for Boolean
     */
    @JsonSetter("IsInvoicePoint")
    public void setIsInvoicePoint(Boolean isInvoicePoint) {
        this.isInvoicePoint = OptionalNullable.of(isInvoicePoint);
    }

    /**
     * UnSetter for IsInvoicePoint.
     * Whether the account is an invoice point.
     */
    public void unsetIsInvoicePoint() {
        isInvoicePoint = null;
    }

    /**
     * Internal Getter for MarketingSegmentation.
     * Marketing Segmentation id and description e.g. (Id – Description): 1-National CRT
     * 2-International CRT &amp; IKAs 3-Small Customers 4-National/International Fleet/IKA
     * @return Returns the Internal String
     */
    @JsonGetter("MarketingSegmentation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMarketingSegmentation() {
        return this.marketingSegmentation;
    }

    /**
     * Getter for MarketingSegmentation.
     * Marketing Segmentation id and description e.g. (Id – Description): 1-National CRT
     * 2-International CRT &amp; IKAs 3-Small Customers 4-National/International Fleet/IKA
     * @return Returns the String
     */
    public String getMarketingSegmentation() {
        return OptionalNullable.getFrom(marketingSegmentation);
    }

    /**
     * Setter for MarketingSegmentation.
     * Marketing Segmentation id and description e.g. (Id – Description): 1-National CRT
     * 2-International CRT &amp; IKAs 3-Small Customers 4-National/International Fleet/IKA
     * @param marketingSegmentation Value for String
     */
    @JsonSetter("MarketingSegmentation")
    public void setMarketingSegmentation(String marketingSegmentation) {
        this.marketingSegmentation = OptionalNullable.of(marketingSegmentation);
    }

    /**
     * UnSetter for MarketingSegmentation.
     * Marketing Segmentation id and description e.g. (Id – Description): 1-National CRT
     * 2-International CRT &amp; IKAs 3-Small Customers 4-National/International Fleet/IKA
     */
    public void unsetMarketingSegmentation() {
        marketingSegmentation = null;
    }

    /**
     * Internal Getter for VATNumber.
     * VAT Registration Number of Customer
     * @return Returns the Internal String
     */
    @JsonGetter("VATNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVATNumber() {
        return this.vATNumber;
    }

    /**
     * Getter for VATNumber.
     * VAT Registration Number of Customer
     * @return Returns the String
     */
    public String getVATNumber() {
        return OptionalNullable.getFrom(vATNumber);
    }

    /**
     * Setter for VATNumber.
     * VAT Registration Number of Customer
     * @param vATNumber Value for String
     */
    @JsonSetter("VATNumber")
    public void setVATNumber(String vATNumber) {
        this.vATNumber = OptionalNullable.of(vATNumber);
    }

    /**
     * UnSetter for VATNumber.
     * VAT Registration Number of Customer
     */
    public void unsetVATNumber() {
        vATNumber = null;
    }

    /**
     * Internal Getter for PayerId.
     * Payer Id of the selected account.
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * Payer Id of the selected account.
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * Payer Id of the selected account.
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     * Payer Id of the selected account.
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Internal Getter for PayerName.
     * Payer Name of the selected account.
     * @return Returns the Internal String
     */
    @JsonGetter("PayerName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerName() {
        return this.payerName;
    }

    /**
     * Getter for PayerName.
     * Payer Name of the selected account.
     * @return Returns the String
     */
    public String getPayerName() {
        return OptionalNullable.getFrom(payerName);
    }

    /**
     * Setter for PayerName.
     * Payer Name of the selected account.
     * @param payerName Value for String
     */
    @JsonSetter("PayerName")
    public void setPayerName(String payerName) {
        this.payerName = OptionalNullable.of(payerName);
    }

    /**
     * UnSetter for PayerName.
     * Payer Name of the selected account.
     */
    public void unsetPayerName() {
        payerName = null;
    }

    /**
     * Internal Getter for PayerNumber.
     * Payer Number of the selected account.
     * @return Returns the Internal String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerNumber() {
        return this.payerNumber;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number of the selected account.
     * @return Returns the String
     */
    public String getPayerNumber() {
        return OptionalNullable.getFrom(payerNumber);
    }

    /**
     * Setter for PayerNumber.
     * Payer Number of the selected account.
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = OptionalNullable.of(payerNumber);
    }

    /**
     * UnSetter for PayerNumber.
     * Payer Number of the selected account.
     */
    public void unsetPayerNumber() {
        payerNumber = null;
    }

    /**
     * Internal Getter for SelfSelectedPin.
     * Is Self-selected Pin enabled for the account
     * @return Returns the Internal Boolean
     */
    @JsonGetter("SelfSelectedPin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetSelfSelectedPin() {
        return this.selfSelectedPin;
    }

    /**
     * Getter for SelfSelectedPin.
     * Is Self-selected Pin enabled for the account
     * @return Returns the Boolean
     */
    public Boolean getSelfSelectedPin() {
        return OptionalNullable.getFrom(selfSelectedPin);
    }

    /**
     * Setter for SelfSelectedPin.
     * Is Self-selected Pin enabled for the account
     * @param selfSelectedPin Value for Boolean
     */
    @JsonSetter("SelfSelectedPin")
    public void setSelfSelectedPin(Boolean selfSelectedPin) {
        this.selfSelectedPin = OptionalNullable.of(selfSelectedPin);
    }

    /**
     * UnSetter for SelfSelectedPin.
     * Is Self-selected Pin enabled for the account
     */
    public void unsetSelfSelectedPin() {
        selfSelectedPin = null;
    }

    /**
     * Internal Getter for Status.
     * Payer current status id and description e.g. (Id – Description): 1-Active 2-Requested from
     * UTA 3-Awaiting embossing 4-Manufactured 5-Awaiting despatch
     * @return Returns the Internal String
     */
    @JsonGetter("Status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * Payer current status id and description e.g. (Id – Description): 1-Active 2-Requested from
     * UTA 3-Awaiting embossing 4-Manufactured 5-Awaiting despatch
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * Payer current status id and description e.g. (Id – Description): 1-Active 2-Requested from
     * UTA 3-Awaiting embossing 4-Manufactured 5-Awaiting despatch
     * @param status Value for String
     */
    @JsonSetter("Status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     * Payer current status id and description e.g. (Id – Description): 1-Active 2-Requested from
     * UTA 3-Awaiting embossing 4-Manufactured 5-Awaiting despatch
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for DefaultPINAdviceType.
     * Default PIN AdviceType of the customer. Possible Values: 1.	Paper 2.	Email 3.	SMS 4.	None
     * @return Returns the Internal Integer
     */
    @JsonGetter("DefaultPINAdviceType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDefaultPINAdviceType() {
        return this.defaultPINAdviceType;
    }

    /**
     * Getter for DefaultPINAdviceType.
     * Default PIN AdviceType of the customer. Possible Values: 1.	Paper 2.	Email 3.	SMS 4.	None
     * @return Returns the Integer
     */
    public Integer getDefaultPINAdviceType() {
        return OptionalNullable.getFrom(defaultPINAdviceType);
    }

    /**
     * Setter for DefaultPINAdviceType.
     * Default PIN AdviceType of the customer. Possible Values: 1.	Paper 2.	Email 3.	SMS 4.	None
     * @param defaultPINAdviceType Value for Integer
     */
    @JsonSetter("DefaultPINAdviceType")
    public void setDefaultPINAdviceType(Integer defaultPINAdviceType) {
        this.defaultPINAdviceType = OptionalNullable.of(defaultPINAdviceType);
    }

    /**
     * UnSetter for DefaultPINAdviceType.
     * Default PIN AdviceType of the customer. Possible Values: 1.	Paper 2.	Email 3.	SMS 4.	None
     */
    public void unsetDefaultPINAdviceType() {
        defaultPINAdviceType = null;
    }

    /**
     * Getter for PINAdviceTypes.
     * @return Returns the List of PINAdviceTypes
     */
    @JsonGetter("PINAdviceTypes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PINAdviceTypes> getPINAdviceTypes() {
        return pINAdviceTypes;
    }

    /**
     * Setter for PINAdviceTypes.
     * @param pINAdviceTypes Value for List of PINAdviceTypes
     */
    @JsonSetter("PINAdviceTypes")
    public void setPINAdviceTypes(List<PINAdviceTypes> pINAdviceTypes) {
        this.pINAdviceTypes = pINAdviceTypes;
    }

    /**
     * Getter for Error.
     * @return Returns the ErrorStatus
     */
    @JsonGetter("Error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ErrorStatus getError() {
        return error;
    }

    /**
     * Setter for Error.
     * @param error Value for ErrorStatus
     */
    @JsonSetter("Error")
    public void setError(ErrorStatus error) {
        this.error = error;
    }

    /**
     * Internal Getter for RequestId.
     * API Request id
     * @return Returns the Internal String
     */
    @JsonGetter("RequestId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRequestId() {
        return this.requestId;
    }

    /**
     * Getter for RequestId.
     * API Request id
     * @return Returns the String
     */
    public String getRequestId() {
        return OptionalNullable.getFrom(requestId);
    }

    /**
     * Setter for RequestId.
     * API Request id
     * @param requestId Value for String
     */
    @JsonSetter("RequestId")
    public void setRequestId(String requestId) {
        this.requestId = OptionalNullable.of(requestId);
    }

    /**
     * UnSetter for RequestId.
     * API Request id
     */
    public void unsetRequestId() {
        requestId = null;
    }

    /**
     * Getter for PINChangeAllowedByCardholder.
     * PIN change allowed for card holder or not.
     * @return Returns the Boolean
     */
    @JsonGetter("PINChangeAllowedByCardholder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPINChangeAllowedByCardholder() {
        return pINChangeAllowedByCardholder;
    }

    /**
     * Setter for PINChangeAllowedByCardholder.
     * PIN change allowed for card holder or not.
     * @param pINChangeAllowedByCardholder Value for Boolean
     */
    @JsonSetter("PINChangeAllowedByCardholder")
    public void setPINChangeAllowedByCardholder(Boolean pINChangeAllowedByCardholder) {
        this.pINChangeAllowedByCardholder = pINChangeAllowedByCardholder;
    }

    /**
     * Getter for PINChangeAllowedFromFleetPIN.
     * PIN change allowed from fleetpin or not.
     * @return Returns the Boolean
     */
    @JsonGetter("PINChangeAllowedFromFleetPIN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPINChangeAllowedFromFleetPIN() {
        return pINChangeAllowedFromFleetPIN;
    }

    /**
     * Setter for PINChangeAllowedFromFleetPIN.
     * PIN change allowed from fleetpin or not.
     * @param pINChangeAllowedFromFleetPIN Value for Boolean
     */
    @JsonSetter("PINChangeAllowedFromFleetPIN")
    public void setPINChangeAllowedFromFleetPIN(Boolean pINChangeAllowedFromFleetPIN) {
        this.pINChangeAllowedFromFleetPIN = pINChangeAllowedFromFleetPIN;
    }

    /**
     * Converts this CustomerDetailResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CustomerDetailResponse [" + "accountId=" + accountId + ", accountName="
                + accountName + ", accountNumber=" + accountNumber + ", accountShortName="
                + accountShortName + ", accountTradingName=" + accountTradingName
                + ", allowFleetIdInput=" + allowFleetIdInput + ", band=" + band
                + ", billingAddress=" + billingAddress + ", cardGroupPosition=" + cardGroupPosition
                + ", correspondenceAddress=" + correspondenceAddress + ", deliveryAddresses="
                + deliveryAddresses + ", fleetPin=" + fleetPin + ", fullName=" + fullName
                + ", invoiceCustomerId=" + invoiceCustomerId + ", invoiceCustomerShortName="
                + invoiceCustomerShortName + ", isInvoicePoint=" + isInvoicePoint
                + ", marketingSegmentation=" + marketingSegmentation + ", vATNumber=" + vATNumber
                + ", payerId=" + payerId + ", payerName=" + payerName + ", payerNumber="
                + payerNumber + ", selfSelectedPin=" + selfSelectedPin + ", status=" + status
                + ", defaultPINAdviceType=" + defaultPINAdviceType + ", pINAdviceTypes="
                + pINAdviceTypes + ", error=" + error + ", requestId=" + requestId
                + ", pINChangeAllowedByCardholder=" + pINChangeAllowedByCardholder
                + ", pINChangeAllowedFromFleetPIN=" + pINChangeAllowedFromFleetPIN + "]";
    }

    /**
     * Builds a new {@link CustomerDetailResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CustomerDetailResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .allowFleetIdInput(getAllowFleetIdInput())
                .billingAddress(getBillingAddress())
                .correspondenceAddress(getCorrespondenceAddress())
                .deliveryAddresses(getDeliveryAddresses())
                .fleetPin(getFleetPin())
                .pINAdviceTypes(getPINAdviceTypes())
                .error(getError())
                .pINChangeAllowedByCardholder(getPINChangeAllowedByCardholder())
                .pINChangeAllowedFromFleetPIN(getPINChangeAllowedFromFleetPIN());
        builder.accountId = internalGetAccountId();
        builder.accountName = internalGetAccountName();
        builder.accountNumber = internalGetAccountNumber();
        builder.accountShortName = internalGetAccountShortName();
        builder.accountTradingName = internalGetAccountTradingName();
        builder.band = internalGetBand();
        builder.cardGroupPosition = internalGetCardGroupPosition();
        builder.fullName = internalGetFullName();
        builder.invoiceCustomerId = internalGetInvoiceCustomerId();
        builder.invoiceCustomerShortName = internalGetInvoiceCustomerShortName();
        builder.isInvoicePoint = internalGetIsInvoicePoint();
        builder.marketingSegmentation = internalGetMarketingSegmentation();
        builder.vATNumber = internalGetVATNumber();
        builder.payerId = internalGetPayerId();
        builder.payerName = internalGetPayerName();
        builder.payerNumber = internalGetPayerNumber();
        builder.selfSelectedPin = internalGetSelfSelectedPin();
        builder.status = internalGetStatus();
        builder.defaultPINAdviceType = internalGetDefaultPINAdviceType();
        builder.requestId = internalGetRequestId();
        return builder;
    }

    /**
     * Class to build instances of {@link CustomerDetailResponse}.
     */
    public static class Builder {
        private OptionalNullable<Integer> accountId;
        private OptionalNullable<String> accountName;
        private OptionalNullable<String> accountNumber;
        private OptionalNullable<String> accountShortName;
        private OptionalNullable<String> accountTradingName;
        private Boolean allowFleetIdInput;
        private OptionalNullable<String> band;
        private Address billingAddress;
        private OptionalNullable<String> cardGroupPosition;
        private Address correspondenceAddress;
        private List<DeliveryAddresses> deliveryAddresses;
        private Boolean fleetPin;
        private OptionalNullable<String> fullName;
        private OptionalNullable<Integer> invoiceCustomerId;
        private OptionalNullable<String> invoiceCustomerShortName;
        private OptionalNullable<Boolean> isInvoicePoint;
        private OptionalNullable<String> marketingSegmentation;
        private OptionalNullable<String> vATNumber;
        private OptionalNullable<Integer> payerId;
        private OptionalNullable<String> payerName;
        private OptionalNullable<String> payerNumber;
        private OptionalNullable<Boolean> selfSelectedPin;
        private OptionalNullable<String> status;
        private OptionalNullable<Integer> defaultPINAdviceType;
        private List<PINAdviceTypes> pINAdviceTypes;
        private ErrorStatus error;
        private OptionalNullable<String> requestId;
        private Boolean pINChangeAllowedByCardholder;
        private Boolean pINChangeAllowedFromFleetPIN;



        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = OptionalNullable.of(accountId);
            return this;
        }

        /**
         * UnSetter for accountId.
         * @return Builder
         */
        public Builder unsetAccountId() {
            accountId = null;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = OptionalNullable.of(accountName);
            return this;
        }

        /**
         * UnSetter for accountName.
         * @return Builder
         */
        public Builder unsetAccountName() {
            accountName = null;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = OptionalNullable.of(accountNumber);
            return this;
        }

        /**
         * UnSetter for accountNumber.
         * @return Builder
         */
        public Builder unsetAccountNumber() {
            accountNumber = null;
            return this;
        }

        /**
         * Setter for accountShortName.
         * @param  accountShortName  String value for accountShortName.
         * @return Builder
         */
        public Builder accountShortName(String accountShortName) {
            this.accountShortName = OptionalNullable.of(accountShortName);
            return this;
        }

        /**
         * UnSetter for accountShortName.
         * @return Builder
         */
        public Builder unsetAccountShortName() {
            accountShortName = null;
            return this;
        }

        /**
         * Setter for accountTradingName.
         * @param  accountTradingName  String value for accountTradingName.
         * @return Builder
         */
        public Builder accountTradingName(String accountTradingName) {
            this.accountTradingName = OptionalNullable.of(accountTradingName);
            return this;
        }

        /**
         * UnSetter for accountTradingName.
         * @return Builder
         */
        public Builder unsetAccountTradingName() {
            accountTradingName = null;
            return this;
        }

        /**
         * Setter for allowFleetIdInput.
         * @param  allowFleetIdInput  Boolean value for allowFleetIdInput.
         * @return Builder
         */
        public Builder allowFleetIdInput(Boolean allowFleetIdInput) {
            this.allowFleetIdInput = allowFleetIdInput;
            return this;
        }

        /**
         * Setter for band.
         * @param  band  String value for band.
         * @return Builder
         */
        public Builder band(String band) {
            this.band = OptionalNullable.of(band);
            return this;
        }

        /**
         * UnSetter for band.
         * @return Builder
         */
        public Builder unsetBand() {
            band = null;
            return this;
        }

        /**
         * Setter for billingAddress.
         * @param  billingAddress  Address value for billingAddress.
         * @return Builder
         */
        public Builder billingAddress(Address billingAddress) {
            this.billingAddress = billingAddress;
            return this;
        }

        /**
         * Setter for cardGroupPosition.
         * @param  cardGroupPosition  String value for cardGroupPosition.
         * @return Builder
         */
        public Builder cardGroupPosition(String cardGroupPosition) {
            this.cardGroupPosition = OptionalNullable.of(cardGroupPosition);
            return this;
        }

        /**
         * UnSetter for cardGroupPosition.
         * @return Builder
         */
        public Builder unsetCardGroupPosition() {
            cardGroupPosition = null;
            return this;
        }

        /**
         * Setter for correspondenceAddress.
         * @param  correspondenceAddress  Address value for correspondenceAddress.
         * @return Builder
         */
        public Builder correspondenceAddress(Address correspondenceAddress) {
            this.correspondenceAddress = correspondenceAddress;
            return this;
        }

        /**
         * Setter for deliveryAddresses.
         * @param  deliveryAddresses  List of DeliveryAddresses value for deliveryAddresses.
         * @return Builder
         */
        public Builder deliveryAddresses(List<DeliveryAddresses> deliveryAddresses) {
            this.deliveryAddresses = deliveryAddresses;
            return this;
        }

        /**
         * Setter for fleetPin.
         * @param  fleetPin  Boolean value for fleetPin.
         * @return Builder
         */
        public Builder fleetPin(Boolean fleetPin) {
            this.fleetPin = fleetPin;
            return this;
        }

        /**
         * Setter for fullName.
         * @param  fullName  String value for fullName.
         * @return Builder
         */
        public Builder fullName(String fullName) {
            this.fullName = OptionalNullable.of(fullName);
            return this;
        }

        /**
         * UnSetter for fullName.
         * @return Builder
         */
        public Builder unsetFullName() {
            fullName = null;
            return this;
        }

        /**
         * Setter for invoiceCustomerId.
         * @param  invoiceCustomerId  Integer value for invoiceCustomerId.
         * @return Builder
         */
        public Builder invoiceCustomerId(Integer invoiceCustomerId) {
            this.invoiceCustomerId = OptionalNullable.of(invoiceCustomerId);
            return this;
        }

        /**
         * UnSetter for invoiceCustomerId.
         * @return Builder
         */
        public Builder unsetInvoiceCustomerId() {
            invoiceCustomerId = null;
            return this;
        }

        /**
         * Setter for invoiceCustomerShortName.
         * @param  invoiceCustomerShortName  String value for invoiceCustomerShortName.
         * @return Builder
         */
        public Builder invoiceCustomerShortName(String invoiceCustomerShortName) {
            this.invoiceCustomerShortName = OptionalNullable.of(invoiceCustomerShortName);
            return this;
        }

        /**
         * UnSetter for invoiceCustomerShortName.
         * @return Builder
         */
        public Builder unsetInvoiceCustomerShortName() {
            invoiceCustomerShortName = null;
            return this;
        }

        /**
         * Setter for isInvoicePoint.
         * @param  isInvoicePoint  Boolean value for isInvoicePoint.
         * @return Builder
         */
        public Builder isInvoicePoint(Boolean isInvoicePoint) {
            this.isInvoicePoint = OptionalNullable.of(isInvoicePoint);
            return this;
        }

        /**
         * UnSetter for isInvoicePoint.
         * @return Builder
         */
        public Builder unsetIsInvoicePoint() {
            isInvoicePoint = null;
            return this;
        }

        /**
         * Setter for marketingSegmentation.
         * @param  marketingSegmentation  String value for marketingSegmentation.
         * @return Builder
         */
        public Builder marketingSegmentation(String marketingSegmentation) {
            this.marketingSegmentation = OptionalNullable.of(marketingSegmentation);
            return this;
        }

        /**
         * UnSetter for marketingSegmentation.
         * @return Builder
         */
        public Builder unsetMarketingSegmentation() {
            marketingSegmentation = null;
            return this;
        }

        /**
         * Setter for vATNumber.
         * @param  vATNumber  String value for vATNumber.
         * @return Builder
         */
        public Builder vATNumber(String vATNumber) {
            this.vATNumber = OptionalNullable.of(vATNumber);
            return this;
        }

        /**
         * UnSetter for vATNumber.
         * @return Builder
         */
        public Builder unsetVATNumber() {
            vATNumber = null;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for payerName.
         * @param  payerName  String value for payerName.
         * @return Builder
         */
        public Builder payerName(String payerName) {
            this.payerName = OptionalNullable.of(payerName);
            return this;
        }

        /**
         * UnSetter for payerName.
         * @return Builder
         */
        public Builder unsetPayerName() {
            payerName = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = OptionalNullable.of(payerNumber);
            return this;
        }

        /**
         * UnSetter for payerNumber.
         * @return Builder
         */
        public Builder unsetPayerNumber() {
            payerNumber = null;
            return this;
        }

        /**
         * Setter for selfSelectedPin.
         * @param  selfSelectedPin  Boolean value for selfSelectedPin.
         * @return Builder
         */
        public Builder selfSelectedPin(Boolean selfSelectedPin) {
            this.selfSelectedPin = OptionalNullable.of(selfSelectedPin);
            return this;
        }

        /**
         * UnSetter for selfSelectedPin.
         * @return Builder
         */
        public Builder unsetSelfSelectedPin() {
            selfSelectedPin = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for defaultPINAdviceType.
         * @param  defaultPINAdviceType  Integer value for defaultPINAdviceType.
         * @return Builder
         */
        public Builder defaultPINAdviceType(Integer defaultPINAdviceType) {
            this.defaultPINAdviceType = OptionalNullable.of(defaultPINAdviceType);
            return this;
        }

        /**
         * UnSetter for defaultPINAdviceType.
         * @return Builder
         */
        public Builder unsetDefaultPINAdviceType() {
            defaultPINAdviceType = null;
            return this;
        }

        /**
         * Setter for pINAdviceTypes.
         * @param  pINAdviceTypes  List of PINAdviceTypes value for pINAdviceTypes.
         * @return Builder
         */
        public Builder pINAdviceTypes(List<PINAdviceTypes> pINAdviceTypes) {
            this.pINAdviceTypes = pINAdviceTypes;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  ErrorStatus value for error.
         * @return Builder
         */
        public Builder error(ErrorStatus error) {
            this.error = error;
            return this;
        }

        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = OptionalNullable.of(requestId);
            return this;
        }

        /**
         * UnSetter for requestId.
         * @return Builder
         */
        public Builder unsetRequestId() {
            requestId = null;
            return this;
        }

        /**
         * Setter for pINChangeAllowedByCardholder.
         * @param  pINChangeAllowedByCardholder  Boolean value for pINChangeAllowedByCardholder.
         * @return Builder
         */
        public Builder pINChangeAllowedByCardholder(Boolean pINChangeAllowedByCardholder) {
            this.pINChangeAllowedByCardholder = pINChangeAllowedByCardholder;
            return this;
        }

        /**
         * Setter for pINChangeAllowedFromFleetPIN.
         * @param  pINChangeAllowedFromFleetPIN  Boolean value for pINChangeAllowedFromFleetPIN.
         * @return Builder
         */
        public Builder pINChangeAllowedFromFleetPIN(Boolean pINChangeAllowedFromFleetPIN) {
            this.pINChangeAllowedFromFleetPIN = pINChangeAllowedFromFleetPIN;
            return this;
        }

        /**
         * Builds a new {@link CustomerDetailResponse} object using the set fields.
         * @return {@link CustomerDetailResponse}
         */
        public CustomerDetailResponse build() {
            return new CustomerDetailResponse(accountId, accountName, accountNumber,
                    accountShortName, accountTradingName, allowFleetIdInput, band, billingAddress,
                    cardGroupPosition, correspondenceAddress, deliveryAddresses, fleetPin, fullName,
                    invoiceCustomerId, invoiceCustomerShortName, isInvoicePoint,
                    marketingSegmentation, vATNumber, payerId, payerName, payerNumber,
                    selfSelectedPin, status, defaultPINAdviceType, pINAdviceTypes, error, requestId,
                    pINChangeAllowedByCardholder, pINChangeAllowedFromFleetPIN);
        }
    }
}
