/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CardDayTimeRestrictions type.
 */
public class CardDayTimeRestrictions {
    private OptionalNullable<String> level;
    private Boolean monday;
    private Boolean tuesday;
    private Boolean wednesday;
    private Boolean thursday;
    private Boolean friday;
    private Boolean saturday;
    private Boolean sunday;
    private OptionalNullable<String> timeFrom;
    private OptionalNullable<String> timeTo;

    /**
     * Default constructor.
     */
    public CardDayTimeRestrictions() {
    }

    /**
     * Initialization constructor.
     * @param  level  String value for level.
     * @param  monday  Boolean value for monday.
     * @param  tuesday  Boolean value for tuesday.
     * @param  wednesday  Boolean value for wednesday.
     * @param  thursday  Boolean value for thursday.
     * @param  friday  Boolean value for friday.
     * @param  saturday  Boolean value for saturday.
     * @param  sunday  Boolean value for sunday.
     * @param  timeFrom  String value for timeFrom.
     * @param  timeTo  String value for timeTo.
     */
    public CardDayTimeRestrictions(
            String level,
            Boolean monday,
            Boolean tuesday,
            Boolean wednesday,
            Boolean thursday,
            Boolean friday,
            Boolean saturday,
            Boolean sunday,
            String timeFrom,
            String timeTo) {
        this.level = OptionalNullable.of(level);
        this.monday = monday;
        this.tuesday = tuesday;
        this.wednesday = wednesday;
        this.thursday = thursday;
        this.friday = friday;
        this.saturday = saturday;
        this.sunday = sunday;
        this.timeFrom = OptionalNullable.of(timeFrom);
        this.timeTo = OptionalNullable.of(timeTo);
    }

    /**
     * Initialization constructor.
     * @param  level  String value for level.
     * @param  monday  Boolean value for monday.
     * @param  tuesday  Boolean value for tuesday.
     * @param  wednesday  Boolean value for wednesday.
     * @param  thursday  Boolean value for thursday.
     * @param  friday  Boolean value for friday.
     * @param  saturday  Boolean value for saturday.
     * @param  sunday  Boolean value for sunday.
     * @param  timeFrom  String value for timeFrom.
     * @param  timeTo  String value for timeTo.
     */

    protected CardDayTimeRestrictions(OptionalNullable<String> level, Boolean monday,
            Boolean tuesday, Boolean wednesday, Boolean thursday, Boolean friday, Boolean saturday,
            Boolean sunday, OptionalNullable<String> timeFrom, OptionalNullable<String> timeTo) {
        this.level = level;
        this.monday = monday;
        this.tuesday = tuesday;
        this.wednesday = wednesday;
        this.thursday = thursday;
        this.friday = friday;
        this.saturday = saturday;
        this.sunday = sunday;
        this.timeFrom = timeFrom;
        this.timeTo = timeTo;
    }

    /**
     * Internal Getter for Level.
     * Describes at which level the restriction is set at. Possible values: OU = Restriction set at
     * ColCo card type Customer = Restriction set at customer card type
     * @return Returns the Internal String
     */
    @JsonGetter("Level")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLevel() {
        return this.level;
    }

    /**
     * Getter for Level.
     * Describes at which level the restriction is set at. Possible values: OU = Restriction set at
     * ColCo card type Customer = Restriction set at customer card type
     * @return Returns the String
     */
    public String getLevel() {
        return OptionalNullable.getFrom(level);
    }

    /**
     * Setter for Level.
     * Describes at which level the restriction is set at. Possible values: OU = Restriction set at
     * ColCo card type Customer = Restriction set at customer card type
     * @param level Value for String
     */
    @JsonSetter("Level")
    public void setLevel(String level) {
        this.level = OptionalNullable.of(level);
    }

    /**
     * UnSetter for Level.
     * Describes at which level the restriction is set at. Possible values: OU = Restriction set at
     * ColCo card type Customer = Restriction set at customer card type
     */
    public void unsetLevel() {
        level = null;
    }

    /**
     * Getter for Monday.
     * Whether the transaction is allowed on Mondays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Monday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getMonday() {
        return monday;
    }

    /**
     * Setter for Monday.
     * Whether the transaction is allowed on Mondays or not.
     * @param monday Value for Boolean
     */
    @JsonSetter("Monday")
    public void setMonday(Boolean monday) {
        this.monday = monday;
    }

    /**
     * Getter for Tuesday.
     * Whether the transaction is allowed on Tuesdays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Tuesday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTuesday() {
        return tuesday;
    }

    /**
     * Setter for Tuesday.
     * Whether the transaction is allowed on Tuesdays or not.
     * @param tuesday Value for Boolean
     */
    @JsonSetter("Tuesday")
    public void setTuesday(Boolean tuesday) {
        this.tuesday = tuesday;
    }

    /**
     * Getter for Wednesday.
     * Whether the transaction is allowed on Wednesdays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Wednesday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getWednesday() {
        return wednesday;
    }

    /**
     * Setter for Wednesday.
     * Whether the transaction is allowed on Wednesdays or not.
     * @param wednesday Value for Boolean
     */
    @JsonSetter("Wednesday")
    public void setWednesday(Boolean wednesday) {
        this.wednesday = wednesday;
    }

    /**
     * Getter for Thursday.
     * Whether the transaction is allowed on Thursdays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Thursday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getThursday() {
        return thursday;
    }

    /**
     * Setter for Thursday.
     * Whether the transaction is allowed on Thursdays or not.
     * @param thursday Value for Boolean
     */
    @JsonSetter("Thursday")
    public void setThursday(Boolean thursday) {
        this.thursday = thursday;
    }

    /**
     * Getter for Friday.
     * Whether the transaction is allowed on Fridays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Friday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFriday() {
        return friday;
    }

    /**
     * Setter for Friday.
     * Whether the transaction is allowed on Fridays or not.
     * @param friday Value for Boolean
     */
    @JsonSetter("Friday")
    public void setFriday(Boolean friday) {
        this.friday = friday;
    }

    /**
     * Getter for Saturday.
     * Whether the transaction is allowed on Saturdays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Saturday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSaturday() {
        return saturday;
    }

    /**
     * Setter for Saturday.
     * Whether the transaction is allowed on Saturdays or not.
     * @param saturday Value for Boolean
     */
    @JsonSetter("Saturday")
    public void setSaturday(Boolean saturday) {
        this.saturday = saturday;
    }

    /**
     * Getter for Sunday.
     * Whether the transaction is allowed on Sundays or not.
     * @return Returns the Boolean
     */
    @JsonGetter("Sunday")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSunday() {
        return sunday;
    }

    /**
     * Setter for Sunday.
     * Whether the transaction is allowed on Sundays or not.
     * @param sunday Value for Boolean
     */
    @JsonSetter("Sunday")
    public void setSunday(Boolean sunday) {
        this.sunday = sunday;
    }

    /**
     * Internal Getter for TimeFrom.
     * The time in the day from when the transaction is allowed. Format: HH:mm: ss E.g., 21:00:00
     * Note: 1) The client application has to convert the value to the required date-time data type.
     * 2) The value will be 00:00:00 when no restriction set for this field.
     * @return Returns the Internal String
     */
    @JsonGetter("TimeFrom")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTimeFrom() {
        return this.timeFrom;
    }

    /**
     * Getter for TimeFrom.
     * The time in the day from when the transaction is allowed. Format: HH:mm: ss E.g., 21:00:00
     * Note: 1) The client application has to convert the value to the required date-time data type.
     * 2) The value will be 00:00:00 when no restriction set for this field.
     * @return Returns the String
     */
    public String getTimeFrom() {
        return OptionalNullable.getFrom(timeFrom);
    }

    /**
     * Setter for TimeFrom.
     * The time in the day from when the transaction is allowed. Format: HH:mm: ss E.g., 21:00:00
     * Note: 1) The client application has to convert the value to the required date-time data type.
     * 2) The value will be 00:00:00 when no restriction set for this field.
     * @param timeFrom Value for String
     */
    @JsonSetter("TimeFrom")
    public void setTimeFrom(String timeFrom) {
        this.timeFrom = OptionalNullable.of(timeFrom);
    }

    /**
     * UnSetter for TimeFrom.
     * The time in the day from when the transaction is allowed. Format: HH:mm: ss E.g., 21:00:00
     * Note: 1) The client application has to convert the value to the required date-time data type.
     * 2) The value will be 00:00:00 when no restriction set for this field.
     */
    public void unsetTimeFrom() {
        timeFrom = null;
    }

    /**
     * Internal Getter for TimeTo.
     * allowed. Format: HH:mm: ss E.g., 21:00:00 Note: 1) The client application has to convert the
     * value to the required date-time data type. 2) The value will be 00:00:00 when no restriction
     * set for this field.
     * @return Returns the Internal String
     */
    @JsonGetter("TimeTo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTimeTo() {
        return this.timeTo;
    }

    /**
     * Getter for TimeTo.
     * allowed. Format: HH:mm: ss E.g., 21:00:00 Note: 1) The client application has to convert the
     * value to the required date-time data type. 2) The value will be 00:00:00 when no restriction
     * set for this field.
     * @return Returns the String
     */
    public String getTimeTo() {
        return OptionalNullable.getFrom(timeTo);
    }

    /**
     * Setter for TimeTo.
     * allowed. Format: HH:mm: ss E.g., 21:00:00 Note: 1) The client application has to convert the
     * value to the required date-time data type. 2) The value will be 00:00:00 when no restriction
     * set for this field.
     * @param timeTo Value for String
     */
    @JsonSetter("TimeTo")
    public void setTimeTo(String timeTo) {
        this.timeTo = OptionalNullable.of(timeTo);
    }

    /**
     * UnSetter for TimeTo.
     * allowed. Format: HH:mm: ss E.g., 21:00:00 Note: 1) The client application has to convert the
     * value to the required date-time data type. 2) The value will be 00:00:00 when no restriction
     * set for this field.
     */
    public void unsetTimeTo() {
        timeTo = null;
    }

    /**
     * Converts this CardDayTimeRestrictions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardDayTimeRestrictions [" + "level=" + level + ", monday=" + monday + ", tuesday="
                + tuesday + ", wednesday=" + wednesday + ", thursday=" + thursday + ", friday="
                + friday + ", saturday=" + saturday + ", sunday=" + sunday + ", timeFrom="
                + timeFrom + ", timeTo=" + timeTo + "]";
    }

    /**
     * Builds a new {@link CardDayTimeRestrictions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardDayTimeRestrictions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .monday(getMonday())
                .tuesday(getTuesday())
                .wednesday(getWednesday())
                .thursday(getThursday())
                .friday(getFriday())
                .saturday(getSaturday())
                .sunday(getSunday());
        builder.level = internalGetLevel();
        builder.timeFrom = internalGetTimeFrom();
        builder.timeTo = internalGetTimeTo();
        return builder;
    }

    /**
     * Class to build instances of {@link CardDayTimeRestrictions}.
     */
    public static class Builder {
        private OptionalNullable<String> level;
        private Boolean monday;
        private Boolean tuesday;
        private Boolean wednesday;
        private Boolean thursday;
        private Boolean friday;
        private Boolean saturday;
        private Boolean sunday;
        private OptionalNullable<String> timeFrom;
        private OptionalNullable<String> timeTo;



        /**
         * Setter for level.
         * @param  level  String value for level.
         * @return Builder
         */
        public Builder level(String level) {
            this.level = OptionalNullable.of(level);
            return this;
        }

        /**
         * UnSetter for level.
         * @return Builder
         */
        public Builder unsetLevel() {
            level = null;
            return this;
        }

        /**
         * Setter for monday.
         * @param  monday  Boolean value for monday.
         * @return Builder
         */
        public Builder monday(Boolean monday) {
            this.monday = monday;
            return this;
        }

        /**
         * Setter for tuesday.
         * @param  tuesday  Boolean value for tuesday.
         * @return Builder
         */
        public Builder tuesday(Boolean tuesday) {
            this.tuesday = tuesday;
            return this;
        }

        /**
         * Setter for wednesday.
         * @param  wednesday  Boolean value for wednesday.
         * @return Builder
         */
        public Builder wednesday(Boolean wednesday) {
            this.wednesday = wednesday;
            return this;
        }

        /**
         * Setter for thursday.
         * @param  thursday  Boolean value for thursday.
         * @return Builder
         */
        public Builder thursday(Boolean thursday) {
            this.thursday = thursday;
            return this;
        }

        /**
         * Setter for friday.
         * @param  friday  Boolean value for friday.
         * @return Builder
         */
        public Builder friday(Boolean friday) {
            this.friday = friday;
            return this;
        }

        /**
         * Setter for saturday.
         * @param  saturday  Boolean value for saturday.
         * @return Builder
         */
        public Builder saturday(Boolean saturday) {
            this.saturday = saturday;
            return this;
        }

        /**
         * Setter for sunday.
         * @param  sunday  Boolean value for sunday.
         * @return Builder
         */
        public Builder sunday(Boolean sunday) {
            this.sunday = sunday;
            return this;
        }

        /**
         * Setter for timeFrom.
         * @param  timeFrom  String value for timeFrom.
         * @return Builder
         */
        public Builder timeFrom(String timeFrom) {
            this.timeFrom = OptionalNullable.of(timeFrom);
            return this;
        }

        /**
         * UnSetter for timeFrom.
         * @return Builder
         */
        public Builder unsetTimeFrom() {
            timeFrom = null;
            return this;
        }

        /**
         * Setter for timeTo.
         * @param  timeTo  String value for timeTo.
         * @return Builder
         */
        public Builder timeTo(String timeTo) {
            this.timeTo = OptionalNullable.of(timeTo);
            return this;
        }

        /**
         * UnSetter for timeTo.
         * @return Builder
         */
        public Builder unsetTimeTo() {
            timeTo = null;
            return this;
        }

        /**
         * Builds a new {@link CardDayTimeRestrictions} object using the set fields.
         * @return {@link CardDayTimeRestrictions}
         */
        public CardDayTimeRestrictions build() {
            return new CardDayTimeRestrictions(level, monday, tuesday, wednesday, thursday, friday,
                    saturday, sunday, timeFrom, timeTo);
        }
    }
}
