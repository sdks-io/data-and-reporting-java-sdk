/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for FeeItem type.
 */
public class FeeItem {
    private OptionalNullable<Integer> feeItemId;
    private OptionalNullable<Integer> accountId;
    private OptionalNullable<String> accountNumber;
    private OptionalNullable<String> accountShortName;
    private OptionalNullable<Integer> invoiceAccountId;
    private OptionalNullable<String> invoiceAccountNumber;
    private OptionalNullable<String> invoiceAccountShortName;
    private OptionalNullable<Integer> payerId;
    private OptionalNullable<String> payerNumber;
    private OptionalNullable<String> payerShortName;
    private OptionalNullable<Integer> cardId;
    private OptionalNullable<String> pAN;
    private OptionalNullable<Integer> cardGroupId;
    private OptionalNullable<String> cardGroupName;
    private OptionalNullable<Integer> feeTypeId;
    private OptionalNullable<String> feeType;
    private OptionalNullable<String> feeTypeGroup;
    private OptionalNullable<Integer> feeRuleId;
    private OptionalNullable<String> feeRuleDescription;
    private List<FeesFeeRuleTiers> feeRuleTiers;
    private OptionalNullable<String> feeItemDate;
    private OptionalNullable<String> feeItemTime;
    private OptionalNullable<Boolean> isManual;
    private OptionalNullable<Boolean> isCancelled;
    private OptionalNullable<String> customerCurrencyCode;
    private OptionalNullable<String> customerCurrencySymbol;
    private OptionalNullable<Integer> productId;
    private OptionalNullable<String> productCode;
    private OptionalNullable<String> productName;
    private OptionalNullable<Integer> productGroupId;
    private OptionalNullable<String> productGroupName;
    private OptionalNullable<String> lineItemDescription;
    private OptionalNullable<Integer> quantity;
    private OptionalNullable<Boolean> isInvoiced;
    private OptionalNullable<String> vATCountryCode;
    private OptionalNullable<String> vATCountryName;
    private OptionalNullable<Double> vATPercentage;
    private OptionalNullable<Integer> vATCategoryID;
    private OptionalNullable<String> vATCategoryDescription;
    private OptionalNullable<Integer> legislativeRegionId;
    private OptionalNullable<String> legislativeRegionName;
    private OptionalNullable<String> systemEntryDate;
    private OptionalNullable<String> systemEntryTime;
    private OptionalNullable<Double> colCoNetAmount;
    private OptionalNullable<Double> colCoVATAmount;
    private OptionalNullable<Double> colCoGrossAmount;
    private OptionalNullable<Integer> interimInvoiceId;
    private OptionalNullable<String> interimInvoiceNumber;
    private OptionalNullable<Integer> invoiceId;
    private OptionalNullable<String> invoiceNumber;
    private OptionalNullable<String> invoiceDate;
    private OptionalNullable<Double> customerExchangeRate;
    private OptionalNullable<Double> invoiceNetAmount;
    private OptionalNullable<Double> invoiceGrossAmount;
    private OptionalNullable<Double> invoiceVATAmount;
    private OptionalNullable<Boolean> reverseCharge;
    private OptionalNullable<Integer> originalFeeItemId;
    private OptionalNullable<String> originalCurrencyCode;
    private OptionalNullable<String> originalCurrencySymbol;
    private OptionalNullable<Double> originalUnitPrice;
    private OptionalNullable<Double> originalNetAmount;
    private OptionalNullable<Double> originalVATAmount;
    private OptionalNullable<Double> originalGrossAmount;
    private OptionalNullable<Double> originalExchangeRate;
    private OptionalNullable<Integer> originalLegislativeRegionId;
    private OptionalNullable<String> originalLegislativeRegionName;
    private OptionalNullable<String> frequency;
    private OptionalNullable<String> feeItemCardLevelBreakup;
    private OptionalNullable<Integer> originalFeeItemInvoiceId;
    private OptionalNullable<String> originalFeeItemInvoiceNumber;
    private OptionalNullable<String> originalFeeItemInvoiceDate;
    private OptionalNullable<String> driverName;
    private OptionalNullable<String> embossText;
    private OptionalNullable<String> vRN;

    /**
     * Default constructor.
     */
    public FeeItem() {
    }

    /**
     * Initialization constructor.
     * @param  feeItemId  Integer value for feeItemId.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountShortName  String value for accountShortName.
     * @param  invoiceAccountId  Integer value for invoiceAccountId.
     * @param  invoiceAccountNumber  String value for invoiceAccountNumber.
     * @param  invoiceAccountShortName  String value for invoiceAccountShortName.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerShortName  String value for payerShortName.
     * @param  cardId  Integer value for cardId.
     * @param  pAN  String value for pAN.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  feeTypeId  Integer value for feeTypeId.
     * @param  feeType  String value for feeType.
     * @param  feeTypeGroup  String value for feeTypeGroup.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  feeRuleTiers  List of FeesFeeRuleTiers value for feeRuleTiers.
     * @param  feeItemDate  String value for feeItemDate.
     * @param  feeItemTime  String value for feeItemTime.
     * @param  isManual  Boolean value for isManual.
     * @param  isCancelled  Boolean value for isCancelled.
     * @param  customerCurrencyCode  String value for customerCurrencyCode.
     * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  lineItemDescription  String value for lineItemDescription.
     * @param  quantity  Integer value for quantity.
     * @param  isInvoiced  Boolean value for isInvoiced.
     * @param  vATCountryCode  String value for vATCountryCode.
     * @param  vATCountryName  String value for vATCountryName.
     * @param  vATPercentage  Double value for vATPercentage.
     * @param  vATCategoryID  Integer value for vATCategoryID.
     * @param  vATCategoryDescription  String value for vATCategoryDescription.
     * @param  legislativeRegionId  Integer value for legislativeRegionId.
     * @param  legislativeRegionName  String value for legislativeRegionName.
     * @param  systemEntryDate  String value for systemEntryDate.
     * @param  systemEntryTime  String value for systemEntryTime.
     * @param  colCoNetAmount  Double value for colCoNetAmount.
     * @param  colCoVATAmount  Double value for colCoVATAmount.
     * @param  colCoGrossAmount  Double value for colCoGrossAmount.
     * @param  interimInvoiceId  Integer value for interimInvoiceId.
     * @param  interimInvoiceNumber  String value for interimInvoiceNumber.
     * @param  invoiceId  Integer value for invoiceId.
     * @param  invoiceNumber  String value for invoiceNumber.
     * @param  invoiceDate  String value for invoiceDate.
     * @param  customerExchangeRate  Double value for customerExchangeRate.
     * @param  invoiceNetAmount  Double value for invoiceNetAmount.
     * @param  invoiceGrossAmount  Double value for invoiceGrossAmount.
     * @param  invoiceVATAmount  Double value for invoiceVATAmount.
     * @param  reverseCharge  Boolean value for reverseCharge.
     * @param  originalFeeItemId  Integer value for originalFeeItemId.
     * @param  originalCurrencyCode  String value for originalCurrencyCode.
     * @param  originalCurrencySymbol  String value for originalCurrencySymbol.
     * @param  originalUnitPrice  Double value for originalUnitPrice.
     * @param  originalNetAmount  Double value for originalNetAmount.
     * @param  originalVATAmount  Double value for originalVATAmount.
     * @param  originalGrossAmount  Double value for originalGrossAmount.
     * @param  originalExchangeRate  Double value for originalExchangeRate.
     * @param  originalLegislativeRegionId  Integer value for originalLegislativeRegionId.
     * @param  originalLegislativeRegionName  String value for originalLegislativeRegionName.
     * @param  frequency  String value for frequency.
     * @param  feeItemCardLevelBreakup  String value for feeItemCardLevelBreakup.
     * @param  originalFeeItemInvoiceId  Integer value for originalFeeItemInvoiceId.
     * @param  originalFeeItemInvoiceNumber  String value for originalFeeItemInvoiceNumber.
     * @param  originalFeeItemInvoiceDate  String value for originalFeeItemInvoiceDate.
     * @param  driverName  String value for driverName.
     * @param  embossText  String value for embossText.
     * @param  vRN  String value for vRN.
     */
    public FeeItem(
            Integer feeItemId,
            Integer accountId,
            String accountNumber,
            String accountShortName,
            Integer invoiceAccountId,
            String invoiceAccountNumber,
            String invoiceAccountShortName,
            Integer payerId,
            String payerNumber,
            String payerShortName,
            Integer cardId,
            String pAN,
            Integer cardGroupId,
            String cardGroupName,
            Integer feeTypeId,
            String feeType,
            String feeTypeGroup,
            Integer feeRuleId,
            String feeRuleDescription,
            List<FeesFeeRuleTiers> feeRuleTiers,
            String feeItemDate,
            String feeItemTime,
            Boolean isManual,
            Boolean isCancelled,
            String customerCurrencyCode,
            String customerCurrencySymbol,
            Integer productId,
            String productCode,
            String productName,
            Integer productGroupId,
            String productGroupName,
            String lineItemDescription,
            Integer quantity,
            Boolean isInvoiced,
            String vATCountryCode,
            String vATCountryName,
            Double vATPercentage,
            Integer vATCategoryID,
            String vATCategoryDescription,
            Integer legislativeRegionId,
            String legislativeRegionName,
            String systemEntryDate,
            String systemEntryTime,
            Double colCoNetAmount,
            Double colCoVATAmount,
            Double colCoGrossAmount,
            Integer interimInvoiceId,
            String interimInvoiceNumber,
            Integer invoiceId,
            String invoiceNumber,
            String invoiceDate,
            Double customerExchangeRate,
            Double invoiceNetAmount,
            Double invoiceGrossAmount,
            Double invoiceVATAmount,
            Boolean reverseCharge,
            Integer originalFeeItemId,
            String originalCurrencyCode,
            String originalCurrencySymbol,
            Double originalUnitPrice,
            Double originalNetAmount,
            Double originalVATAmount,
            Double originalGrossAmount,
            Double originalExchangeRate,
            Integer originalLegislativeRegionId,
            String originalLegislativeRegionName,
            String frequency,
            String feeItemCardLevelBreakup,
            Integer originalFeeItemInvoiceId,
            String originalFeeItemInvoiceNumber,
            String originalFeeItemInvoiceDate,
            String driverName,
            String embossText,
            String vRN) {
        this.feeItemId = OptionalNullable.of(feeItemId);
        this.accountId = OptionalNullable.of(accountId);
        this.accountNumber = OptionalNullable.of(accountNumber);
        this.accountShortName = OptionalNullable.of(accountShortName);
        this.invoiceAccountId = OptionalNullable.of(invoiceAccountId);
        this.invoiceAccountNumber = OptionalNullable.of(invoiceAccountNumber);
        this.invoiceAccountShortName = OptionalNullable.of(invoiceAccountShortName);
        this.payerId = OptionalNullable.of(payerId);
        this.payerNumber = OptionalNullable.of(payerNumber);
        this.payerShortName = OptionalNullable.of(payerShortName);
        this.cardId = OptionalNullable.of(cardId);
        this.pAN = OptionalNullable.of(pAN);
        this.cardGroupId = OptionalNullable.of(cardGroupId);
        this.cardGroupName = OptionalNullable.of(cardGroupName);
        this.feeTypeId = OptionalNullable.of(feeTypeId);
        this.feeType = OptionalNullable.of(feeType);
        this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
        this.feeRuleId = OptionalNullable.of(feeRuleId);
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
        this.feeRuleTiers = feeRuleTiers;
        this.feeItemDate = OptionalNullable.of(feeItemDate);
        this.feeItemTime = OptionalNullable.of(feeItemTime);
        this.isManual = OptionalNullable.of(isManual);
        this.isCancelled = OptionalNullable.of(isCancelled);
        this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
        this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
        this.productId = OptionalNullable.of(productId);
        this.productCode = OptionalNullable.of(productCode);
        this.productName = OptionalNullable.of(productName);
        this.productGroupId = OptionalNullable.of(productGroupId);
        this.productGroupName = OptionalNullable.of(productGroupName);
        this.lineItemDescription = OptionalNullable.of(lineItemDescription);
        this.quantity = OptionalNullable.of(quantity);
        this.isInvoiced = OptionalNullable.of(isInvoiced);
        this.vATCountryCode = OptionalNullable.of(vATCountryCode);
        this.vATCountryName = OptionalNullable.of(vATCountryName);
        this.vATPercentage = OptionalNullable.of(vATPercentage);
        this.vATCategoryID = OptionalNullable.of(vATCategoryID);
        this.vATCategoryDescription = OptionalNullable.of(vATCategoryDescription);
        this.legislativeRegionId = OptionalNullable.of(legislativeRegionId);
        this.legislativeRegionName = OptionalNullable.of(legislativeRegionName);
        this.systemEntryDate = OptionalNullable.of(systemEntryDate);
        this.systemEntryTime = OptionalNullable.of(systemEntryTime);
        this.colCoNetAmount = OptionalNullable.of(colCoNetAmount);
        this.colCoVATAmount = OptionalNullable.of(colCoVATAmount);
        this.colCoGrossAmount = OptionalNullable.of(colCoGrossAmount);
        this.interimInvoiceId = OptionalNullable.of(interimInvoiceId);
        this.interimInvoiceNumber = OptionalNullable.of(interimInvoiceNumber);
        this.invoiceId = OptionalNullable.of(invoiceId);
        this.invoiceNumber = OptionalNullable.of(invoiceNumber);
        this.invoiceDate = OptionalNullable.of(invoiceDate);
        this.customerExchangeRate = OptionalNullable.of(customerExchangeRate);
        this.invoiceNetAmount = OptionalNullable.of(invoiceNetAmount);
        this.invoiceGrossAmount = OptionalNullable.of(invoiceGrossAmount);
        this.invoiceVATAmount = OptionalNullable.of(invoiceVATAmount);
        this.reverseCharge = OptionalNullable.of(reverseCharge);
        this.originalFeeItemId = OptionalNullable.of(originalFeeItemId);
        this.originalCurrencyCode = OptionalNullable.of(originalCurrencyCode);
        this.originalCurrencySymbol = OptionalNullable.of(originalCurrencySymbol);
        this.originalUnitPrice = OptionalNullable.of(originalUnitPrice);
        this.originalNetAmount = OptionalNullable.of(originalNetAmount);
        this.originalVATAmount = OptionalNullable.of(originalVATAmount);
        this.originalGrossAmount = OptionalNullable.of(originalGrossAmount);
        this.originalExchangeRate = OptionalNullable.of(originalExchangeRate);
        this.originalLegislativeRegionId = OptionalNullable.of(originalLegislativeRegionId);
        this.originalLegislativeRegionName = OptionalNullable.of(originalLegislativeRegionName);
        this.frequency = OptionalNullable.of(frequency);
        this.feeItemCardLevelBreakup = OptionalNullable.of(feeItemCardLevelBreakup);
        this.originalFeeItemInvoiceId = OptionalNullable.of(originalFeeItemInvoiceId);
        this.originalFeeItemInvoiceNumber = OptionalNullable.of(originalFeeItemInvoiceNumber);
        this.originalFeeItemInvoiceDate = OptionalNullable.of(originalFeeItemInvoiceDate);
        this.driverName = OptionalNullable.of(driverName);
        this.embossText = OptionalNullable.of(embossText);
        this.vRN = OptionalNullable.of(vRN);
    }

    /**
     * Initialization constructor.
     * @param  feeItemId  Integer value for feeItemId.
     * @param  accountId  Integer value for accountId.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountShortName  String value for accountShortName.
     * @param  invoiceAccountId  Integer value for invoiceAccountId.
     * @param  invoiceAccountNumber  String value for invoiceAccountNumber.
     * @param  invoiceAccountShortName  String value for invoiceAccountShortName.
     * @param  payerId  Integer value for payerId.
     * @param  payerNumber  String value for payerNumber.
     * @param  payerShortName  String value for payerShortName.
     * @param  cardId  Integer value for cardId.
     * @param  pAN  String value for pAN.
     * @param  cardGroupId  Integer value for cardGroupId.
     * @param  cardGroupName  String value for cardGroupName.
     * @param  feeTypeId  Integer value for feeTypeId.
     * @param  feeType  String value for feeType.
     * @param  feeTypeGroup  String value for feeTypeGroup.
     * @param  feeRuleId  Integer value for feeRuleId.
     * @param  feeRuleDescription  String value for feeRuleDescription.
     * @param  feeRuleTiers  List of FeesFeeRuleTiers value for feeRuleTiers.
     * @param  feeItemDate  String value for feeItemDate.
     * @param  feeItemTime  String value for feeItemTime.
     * @param  isManual  Boolean value for isManual.
     * @param  isCancelled  Boolean value for isCancelled.
     * @param  customerCurrencyCode  String value for customerCurrencyCode.
     * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
     * @param  productId  Integer value for productId.
     * @param  productCode  String value for productCode.
     * @param  productName  String value for productName.
     * @param  productGroupId  Integer value for productGroupId.
     * @param  productGroupName  String value for productGroupName.
     * @param  lineItemDescription  String value for lineItemDescription.
     * @param  quantity  Integer value for quantity.
     * @param  isInvoiced  Boolean value for isInvoiced.
     * @param  vATCountryCode  String value for vATCountryCode.
     * @param  vATCountryName  String value for vATCountryName.
     * @param  vATPercentage  Double value for vATPercentage.
     * @param  vATCategoryID  Integer value for vATCategoryID.
     * @param  vATCategoryDescription  String value for vATCategoryDescription.
     * @param  legislativeRegionId  Integer value for legislativeRegionId.
     * @param  legislativeRegionName  String value for legislativeRegionName.
     * @param  systemEntryDate  String value for systemEntryDate.
     * @param  systemEntryTime  String value for systemEntryTime.
     * @param  colCoNetAmount  Double value for colCoNetAmount.
     * @param  colCoVATAmount  Double value for colCoVATAmount.
     * @param  colCoGrossAmount  Double value for colCoGrossAmount.
     * @param  interimInvoiceId  Integer value for interimInvoiceId.
     * @param  interimInvoiceNumber  String value for interimInvoiceNumber.
     * @param  invoiceId  Integer value for invoiceId.
     * @param  invoiceNumber  String value for invoiceNumber.
     * @param  invoiceDate  String value for invoiceDate.
     * @param  customerExchangeRate  Double value for customerExchangeRate.
     * @param  invoiceNetAmount  Double value for invoiceNetAmount.
     * @param  invoiceGrossAmount  Double value for invoiceGrossAmount.
     * @param  invoiceVATAmount  Double value for invoiceVATAmount.
     * @param  reverseCharge  Boolean value for reverseCharge.
     * @param  originalFeeItemId  Integer value for originalFeeItemId.
     * @param  originalCurrencyCode  String value for originalCurrencyCode.
     * @param  originalCurrencySymbol  String value for originalCurrencySymbol.
     * @param  originalUnitPrice  Double value for originalUnitPrice.
     * @param  originalNetAmount  Double value for originalNetAmount.
     * @param  originalVATAmount  Double value for originalVATAmount.
     * @param  originalGrossAmount  Double value for originalGrossAmount.
     * @param  originalExchangeRate  Double value for originalExchangeRate.
     * @param  originalLegislativeRegionId  Integer value for originalLegislativeRegionId.
     * @param  originalLegislativeRegionName  String value for originalLegislativeRegionName.
     * @param  frequency  String value for frequency.
     * @param  feeItemCardLevelBreakup  String value for feeItemCardLevelBreakup.
     * @param  originalFeeItemInvoiceId  Integer value for originalFeeItemInvoiceId.
     * @param  originalFeeItemInvoiceNumber  String value for originalFeeItemInvoiceNumber.
     * @param  originalFeeItemInvoiceDate  String value for originalFeeItemInvoiceDate.
     * @param  driverName  String value for driverName.
     * @param  embossText  String value for embossText.
     * @param  vRN  String value for vRN.
     */

    protected FeeItem(OptionalNullable<Integer> feeItemId, OptionalNullable<Integer> accountId,
            OptionalNullable<String> accountNumber, OptionalNullable<String> accountShortName,
            OptionalNullable<Integer> invoiceAccountId,
            OptionalNullable<String> invoiceAccountNumber,
            OptionalNullable<String> invoiceAccountShortName, OptionalNullable<Integer> payerId,
            OptionalNullable<String> payerNumber, OptionalNullable<String> payerShortName,
            OptionalNullable<Integer> cardId, OptionalNullable<String> pAN,
            OptionalNullable<Integer> cardGroupId, OptionalNullable<String> cardGroupName,
            OptionalNullable<Integer> feeTypeId, OptionalNullable<String> feeType,
            OptionalNullable<String> feeTypeGroup, OptionalNullable<Integer> feeRuleId,
            OptionalNullable<String> feeRuleDescription, List<FeesFeeRuleTiers> feeRuleTiers,
            OptionalNullable<String> feeItemDate, OptionalNullable<String> feeItemTime,
            OptionalNullable<Boolean> isManual, OptionalNullable<Boolean> isCancelled,
            OptionalNullable<String> customerCurrencyCode,
            OptionalNullable<String> customerCurrencySymbol, OptionalNullable<Integer> productId,
            OptionalNullable<String> productCode, OptionalNullable<String> productName,
            OptionalNullable<Integer> productGroupId, OptionalNullable<String> productGroupName,
            OptionalNullable<String> lineItemDescription, OptionalNullable<Integer> quantity,
            OptionalNullable<Boolean> isInvoiced, OptionalNullable<String> vATCountryCode,
            OptionalNullable<String> vATCountryName, OptionalNullable<Double> vATPercentage,
            OptionalNullable<Integer> vATCategoryID,
            OptionalNullable<String> vATCategoryDescription,
            OptionalNullable<Integer> legislativeRegionId,
            OptionalNullable<String> legislativeRegionName,
            OptionalNullable<String> systemEntryDate, OptionalNullable<String> systemEntryTime,
            OptionalNullable<Double> colCoNetAmount, OptionalNullable<Double> colCoVATAmount,
            OptionalNullable<Double> colCoGrossAmount, OptionalNullable<Integer> interimInvoiceId,
            OptionalNullable<String> interimInvoiceNumber, OptionalNullable<Integer> invoiceId,
            OptionalNullable<String> invoiceNumber, OptionalNullable<String> invoiceDate,
            OptionalNullable<Double> customerExchangeRate,
            OptionalNullable<Double> invoiceNetAmount, OptionalNullable<Double> invoiceGrossAmount,
            OptionalNullable<Double> invoiceVATAmount, OptionalNullable<Boolean> reverseCharge,
            OptionalNullable<Integer> originalFeeItemId,
            OptionalNullable<String> originalCurrencyCode,
            OptionalNullable<String> originalCurrencySymbol,
            OptionalNullable<Double> originalUnitPrice, OptionalNullable<Double> originalNetAmount,
            OptionalNullable<Double> originalVATAmount,
            OptionalNullable<Double> originalGrossAmount,
            OptionalNullable<Double> originalExchangeRate,
            OptionalNullable<Integer> originalLegislativeRegionId,
            OptionalNullable<String> originalLegislativeRegionName,
            OptionalNullable<String> frequency, OptionalNullable<String> feeItemCardLevelBreakup,
            OptionalNullable<Integer> originalFeeItemInvoiceId,
            OptionalNullable<String> originalFeeItemInvoiceNumber,
            OptionalNullable<String> originalFeeItemInvoiceDate,
            OptionalNullable<String> driverName, OptionalNullable<String> embossText,
            OptionalNullable<String> vRN) {
        this.feeItemId = feeItemId;
        this.accountId = accountId;
        this.accountNumber = accountNumber;
        this.accountShortName = accountShortName;
        this.invoiceAccountId = invoiceAccountId;
        this.invoiceAccountNumber = invoiceAccountNumber;
        this.invoiceAccountShortName = invoiceAccountShortName;
        this.payerId = payerId;
        this.payerNumber = payerNumber;
        this.payerShortName = payerShortName;
        this.cardId = cardId;
        this.pAN = pAN;
        this.cardGroupId = cardGroupId;
        this.cardGroupName = cardGroupName;
        this.feeTypeId = feeTypeId;
        this.feeType = feeType;
        this.feeTypeGroup = feeTypeGroup;
        this.feeRuleId = feeRuleId;
        this.feeRuleDescription = feeRuleDescription;
        this.feeRuleTiers = feeRuleTiers;
        this.feeItemDate = feeItemDate;
        this.feeItemTime = feeItemTime;
        this.isManual = isManual;
        this.isCancelled = isCancelled;
        this.customerCurrencyCode = customerCurrencyCode;
        this.customerCurrencySymbol = customerCurrencySymbol;
        this.productId = productId;
        this.productCode = productCode;
        this.productName = productName;
        this.productGroupId = productGroupId;
        this.productGroupName = productGroupName;
        this.lineItemDescription = lineItemDescription;
        this.quantity = quantity;
        this.isInvoiced = isInvoiced;
        this.vATCountryCode = vATCountryCode;
        this.vATCountryName = vATCountryName;
        this.vATPercentage = vATPercentage;
        this.vATCategoryID = vATCategoryID;
        this.vATCategoryDescription = vATCategoryDescription;
        this.legislativeRegionId = legislativeRegionId;
        this.legislativeRegionName = legislativeRegionName;
        this.systemEntryDate = systemEntryDate;
        this.systemEntryTime = systemEntryTime;
        this.colCoNetAmount = colCoNetAmount;
        this.colCoVATAmount = colCoVATAmount;
        this.colCoGrossAmount = colCoGrossAmount;
        this.interimInvoiceId = interimInvoiceId;
        this.interimInvoiceNumber = interimInvoiceNumber;
        this.invoiceId = invoiceId;
        this.invoiceNumber = invoiceNumber;
        this.invoiceDate = invoiceDate;
        this.customerExchangeRate = customerExchangeRate;
        this.invoiceNetAmount = invoiceNetAmount;
        this.invoiceGrossAmount = invoiceGrossAmount;
        this.invoiceVATAmount = invoiceVATAmount;
        this.reverseCharge = reverseCharge;
        this.originalFeeItemId = originalFeeItemId;
        this.originalCurrencyCode = originalCurrencyCode;
        this.originalCurrencySymbol = originalCurrencySymbol;
        this.originalUnitPrice = originalUnitPrice;
        this.originalNetAmount = originalNetAmount;
        this.originalVATAmount = originalVATAmount;
        this.originalGrossAmount = originalGrossAmount;
        this.originalExchangeRate = originalExchangeRate;
        this.originalLegislativeRegionId = originalLegislativeRegionId;
        this.originalLegislativeRegionName = originalLegislativeRegionName;
        this.frequency = frequency;
        this.feeItemCardLevelBreakup = feeItemCardLevelBreakup;
        this.originalFeeItemInvoiceId = originalFeeItemInvoiceId;
        this.originalFeeItemInvoiceNumber = originalFeeItemInvoiceNumber;
        this.originalFeeItemInvoiceDate = originalFeeItemInvoiceDate;
        this.driverName = driverName;
        this.embossText = embossText;
        this.vRN = vRN;
    }

    /**
     * Internal Getter for FeeItemId.
     * Fee Item unique identifier in the H3 Cards Platform
     * @return Returns the Internal Integer
     */
    @JsonGetter("FeeItemId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFeeItemId() {
        return this.feeItemId;
    }

    /**
     * Getter for FeeItemId.
     * Fee Item unique identifier in the H3 Cards Platform
     * @return Returns the Integer
     */
    public Integer getFeeItemId() {
        return OptionalNullable.getFrom(feeItemId);
    }

    /**
     * Setter for FeeItemId.
     * Fee Item unique identifier in the H3 Cards Platform
     * @param feeItemId Value for Integer
     */
    @JsonSetter("FeeItemId")
    public void setFeeItemId(Integer feeItemId) {
        this.feeItemId = OptionalNullable.of(feeItemId);
    }

    /**
     * UnSetter for FeeItemId.
     * Fee Item unique identifier in the H3 Cards Platform
     */
    public void unsetFeeItemId() {
        feeItemId = null;
    }

    /**
     * Internal Getter for AccountId.
     * Account Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("AccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAccountId() {
        return this.accountId;
    }

    /**
     * Getter for AccountId.
     * Account Id
     * @return Returns the Integer
     */
    public Integer getAccountId() {
        return OptionalNullable.getFrom(accountId);
    }

    /**
     * Setter for AccountId.
     * Account Id
     * @param accountId Value for Integer
     */
    @JsonSetter("AccountId")
    public void setAccountId(Integer accountId) {
        this.accountId = OptionalNullable.of(accountId);
    }

    /**
     * UnSetter for AccountId.
     * Account Id
     */
    public void unsetAccountId() {
        accountId = null;
    }

    /**
     * Internal Getter for AccountNumber.
     * Account Number
     * @return Returns the Internal String
     */
    @JsonGetter("AccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountNumber() {
        return this.accountNumber;
    }

    /**
     * Getter for AccountNumber.
     * Account Number
     * @return Returns the String
     */
    public String getAccountNumber() {
        return OptionalNullable.getFrom(accountNumber);
    }

    /**
     * Setter for AccountNumber.
     * Account Number
     * @param accountNumber Value for String
     */
    @JsonSetter("AccountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = OptionalNullable.of(accountNumber);
    }

    /**
     * UnSetter for AccountNumber.
     * Account Number
     */
    public void unsetAccountNumber() {
        accountNumber = null;
    }

    /**
     * Internal Getter for AccountShortName.
     * Account short Number
     * @return Returns the Internal String
     */
    @JsonGetter("AccountShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAccountShortName() {
        return this.accountShortName;
    }

    /**
     * Getter for AccountShortName.
     * Account short Number
     * @return Returns the String
     */
    public String getAccountShortName() {
        return OptionalNullable.getFrom(accountShortName);
    }

    /**
     * Setter for AccountShortName.
     * Account short Number
     * @param accountShortName Value for String
     */
    @JsonSetter("AccountShortName")
    public void setAccountShortName(String accountShortName) {
        this.accountShortName = OptionalNullable.of(accountShortName);
    }

    /**
     * UnSetter for AccountShortName.
     * Account short Number
     */
    public void unsetAccountShortName() {
        accountShortName = null;
    }

    /**
     * Internal Getter for InvoiceAccountId.
     * Invoice Account Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("InvoiceAccountId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetInvoiceAccountId() {
        return this.invoiceAccountId;
    }

    /**
     * Getter for InvoiceAccountId.
     * Invoice Account Id
     * @return Returns the Integer
     */
    public Integer getInvoiceAccountId() {
        return OptionalNullable.getFrom(invoiceAccountId);
    }

    /**
     * Setter for InvoiceAccountId.
     * Invoice Account Id
     * @param invoiceAccountId Value for Integer
     */
    @JsonSetter("InvoiceAccountId")
    public void setInvoiceAccountId(Integer invoiceAccountId) {
        this.invoiceAccountId = OptionalNullable.of(invoiceAccountId);
    }

    /**
     * UnSetter for InvoiceAccountId.
     * Invoice Account Id
     */
    public void unsetInvoiceAccountId() {
        invoiceAccountId = null;
    }

    /**
     * Internal Getter for InvoiceAccountNumber.
     * Invoice Account Number
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceAccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceAccountNumber() {
        return this.invoiceAccountNumber;
    }

    /**
     * Getter for InvoiceAccountNumber.
     * Invoice Account Number
     * @return Returns the String
     */
    public String getInvoiceAccountNumber() {
        return OptionalNullable.getFrom(invoiceAccountNumber);
    }

    /**
     * Setter for InvoiceAccountNumber.
     * Invoice Account Number
     * @param invoiceAccountNumber Value for String
     */
    @JsonSetter("InvoiceAccountNumber")
    public void setInvoiceAccountNumber(String invoiceAccountNumber) {
        this.invoiceAccountNumber = OptionalNullable.of(invoiceAccountNumber);
    }

    /**
     * UnSetter for InvoiceAccountNumber.
     * Invoice Account Number
     */
    public void unsetInvoiceAccountNumber() {
        invoiceAccountNumber = null;
    }

    /**
     * Internal Getter for InvoiceAccountShortName.
     * Invoice Account short Name
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceAccountShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceAccountShortName() {
        return this.invoiceAccountShortName;
    }

    /**
     * Getter for InvoiceAccountShortName.
     * Invoice Account short Name
     * @return Returns the String
     */
    public String getInvoiceAccountShortName() {
        return OptionalNullable.getFrom(invoiceAccountShortName);
    }

    /**
     * Setter for InvoiceAccountShortName.
     * Invoice Account short Name
     * @param invoiceAccountShortName Value for String
     */
    @JsonSetter("InvoiceAccountShortName")
    public void setInvoiceAccountShortName(String invoiceAccountShortName) {
        this.invoiceAccountShortName = OptionalNullable.of(invoiceAccountShortName);
    }

    /**
     * UnSetter for InvoiceAccountShortName.
     * Invoice Account short Name
     */
    public void unsetInvoiceAccountShortName() {
        invoiceAccountShortName = null;
    }

    /**
     * Internal Getter for PayerId.
     * Payer Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("PayerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetPayerId() {
        return this.payerId;
    }

    /**
     * Getter for PayerId.
     * Payer Id
     * @return Returns the Integer
     */
    public Integer getPayerId() {
        return OptionalNullable.getFrom(payerId);
    }

    /**
     * Setter for PayerId.
     * Payer Id
     * @param payerId Value for Integer
     */
    @JsonSetter("PayerId")
    public void setPayerId(Integer payerId) {
        this.payerId = OptionalNullable.of(payerId);
    }

    /**
     * UnSetter for PayerId.
     * Payer Id
     */
    public void unsetPayerId() {
        payerId = null;
    }

    /**
     * Internal Getter for PayerNumber.
     * Payer Number
     * @return Returns the Internal String
     */
    @JsonGetter("PayerNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerNumber() {
        return this.payerNumber;
    }

    /**
     * Getter for PayerNumber.
     * Payer Number
     * @return Returns the String
     */
    public String getPayerNumber() {
        return OptionalNullable.getFrom(payerNumber);
    }

    /**
     * Setter for PayerNumber.
     * Payer Number
     * @param payerNumber Value for String
     */
    @JsonSetter("PayerNumber")
    public void setPayerNumber(String payerNumber) {
        this.payerNumber = OptionalNullable.of(payerNumber);
    }

    /**
     * UnSetter for PayerNumber.
     * Payer Number
     */
    public void unsetPayerNumber() {
        payerNumber = null;
    }

    /**
     * Internal Getter for PayerShortName.
     * Payer short Name
     * @return Returns the Internal String
     */
    @JsonGetter("PayerShortName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayerShortName() {
        return this.payerShortName;
    }

    /**
     * Getter for PayerShortName.
     * Payer short Name
     * @return Returns the String
     */
    public String getPayerShortName() {
        return OptionalNullable.getFrom(payerShortName);
    }

    /**
     * Setter for PayerShortName.
     * Payer short Name
     * @param payerShortName Value for String
     */
    @JsonSetter("PayerShortName")
    public void setPayerShortName(String payerShortName) {
        this.payerShortName = OptionalNullable.of(payerShortName);
    }

    /**
     * UnSetter for PayerShortName.
     * Payer short Name
     */
    public void unsetPayerShortName() {
        payerShortName = null;
    }

    /**
     * Internal Getter for CardId.
     * Unique Card Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardId() {
        return this.cardId;
    }

    /**
     * Getter for CardId.
     * Unique Card Id
     * @return Returns the Integer
     */
    public Integer getCardId() {
        return OptionalNullable.getFrom(cardId);
    }

    /**
     * Setter for CardId.
     * Unique Card Id
     * @param cardId Value for Integer
     */
    @JsonSetter("CardId")
    public void setCardId(Integer cardId) {
        this.cardId = OptionalNullable.of(cardId);
    }

    /**
     * UnSetter for CardId.
     * Unique Card Id
     */
    public void unsetCardId() {
        cardId = null;
    }

    /**
     * Internal Getter for PAN.
     * Card PAN
     * @return Returns the Internal String
     */
    @JsonGetter("PAN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPAN() {
        return this.pAN;
    }

    /**
     * Getter for PAN.
     * Card PAN
     * @return Returns the String
     */
    public String getPAN() {
        return OptionalNullable.getFrom(pAN);
    }

    /**
     * Setter for PAN.
     * Card PAN
     * @param pAN Value for String
     */
    @JsonSetter("PAN")
    public void setPAN(String pAN) {
        this.pAN = OptionalNullable.of(pAN);
    }

    /**
     * UnSetter for PAN.
     * Card PAN
     */
    public void unsetPAN() {
        pAN = null;
    }

    /**
     * Internal Getter for CardGroupId.
     * Card Group Id
     * @return Returns the Internal Integer
     */
    @JsonGetter("CardGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCardGroupId() {
        return this.cardGroupId;
    }

    /**
     * Getter for CardGroupId.
     * Card Group Id
     * @return Returns the Integer
     */
    public Integer getCardGroupId() {
        return OptionalNullable.getFrom(cardGroupId);
    }

    /**
     * Setter for CardGroupId.
     * Card Group Id
     * @param cardGroupId Value for Integer
     */
    @JsonSetter("CardGroupId")
    public void setCardGroupId(Integer cardGroupId) {
        this.cardGroupId = OptionalNullable.of(cardGroupId);
    }

    /**
     * UnSetter for CardGroupId.
     * Card Group Id
     */
    public void unsetCardGroupId() {
        cardGroupId = null;
    }

    /**
     * Internal Getter for CardGroupName.
     * Card Group Name
     * @return Returns the Internal String
     */
    @JsonGetter("CardGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCardGroupName() {
        return this.cardGroupName;
    }

    /**
     * Getter for CardGroupName.
     * Card Group Name
     * @return Returns the String
     */
    public String getCardGroupName() {
        return OptionalNullable.getFrom(cardGroupName);
    }

    /**
     * Setter for CardGroupName.
     * Card Group Name
     * @param cardGroupName Value for String
     */
    @JsonSetter("CardGroupName")
    public void setCardGroupName(String cardGroupName) {
        this.cardGroupName = OptionalNullable.of(cardGroupName);
    }

    /**
     * UnSetter for CardGroupName.
     * Card Group Name
     */
    public void unsetCardGroupName() {
        cardGroupName = null;
    }

    /**
     * Internal Getter for FeeTypeId.
     * Fee type identifier.
     * @return Returns the Internal Integer
     */
    @JsonGetter("FeeTypeId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFeeTypeId() {
        return this.feeTypeId;
    }

    /**
     * Getter for FeeTypeId.
     * Fee type identifier.
     * @return Returns the Integer
     */
    public Integer getFeeTypeId() {
        return OptionalNullable.getFrom(feeTypeId);
    }

    /**
     * Setter for FeeTypeId.
     * Fee type identifier.
     * @param feeTypeId Value for Integer
     */
    @JsonSetter("FeeTypeId")
    public void setFeeTypeId(Integer feeTypeId) {
        this.feeTypeId = OptionalNullable.of(feeTypeId);
    }

    /**
     * UnSetter for FeeTypeId.
     * Fee type identifier.
     */
    public void unsetFeeTypeId() {
        feeTypeId = null;
    }

    /**
     * Internal Getter for FeeType.
     * Fee type description
     * @return Returns the Internal String
     */
    @JsonGetter("FeeType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeType() {
        return this.feeType;
    }

    /**
     * Getter for FeeType.
     * Fee type description
     * @return Returns the String
     */
    public String getFeeType() {
        return OptionalNullable.getFrom(feeType);
    }

    /**
     * Setter for FeeType.
     * Fee type description
     * @param feeType Value for String
     */
    @JsonSetter("FeeType")
    public void setFeeType(String feeType) {
        this.feeType = OptionalNullable.of(feeType);
    }

    /**
     * UnSetter for FeeType.
     * Fee type description
     */
    public void unsetFeeType() {
        feeType = null;
    }

    /**
     * Internal Getter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated. Example: Account Card Others
     * @return Returns the Internal String
     */
    @JsonGetter("FeeTypeGroup")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeTypeGroup() {
        return this.feeTypeGroup;
    }

    /**
     * Getter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated. Example: Account Card Others
     * @return Returns the String
     */
    public String getFeeTypeGroup() {
        return OptionalNullable.getFrom(feeTypeGroup);
    }

    /**
     * Setter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated. Example: Account Card Others
     * @param feeTypeGroup Value for String
     */
    @JsonSetter("FeeTypeGroup")
    public void setFeeTypeGroup(String feeTypeGroup) {
        this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
    }

    /**
     * UnSetter for FeeTypeGroup.
     * Fee type group in under which the Fee item is generated. Example: Account Card Others
     */
    public void unsetFeeTypeGroup() {
        feeTypeGroup = null;
    }

    /**
     * Internal Getter for FeeRuleId.
     * Fee rule identifier
     * @return Returns the Internal Integer
     */
    @JsonGetter("FeeRuleId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFeeRuleId() {
        return this.feeRuleId;
    }

    /**
     * Getter for FeeRuleId.
     * Fee rule identifier
     * @return Returns the Integer
     */
    public Integer getFeeRuleId() {
        return OptionalNullable.getFrom(feeRuleId);
    }

    /**
     * Setter for FeeRuleId.
     * Fee rule identifier
     * @param feeRuleId Value for Integer
     */
    @JsonSetter("FeeRuleId")
    public void setFeeRuleId(Integer feeRuleId) {
        this.feeRuleId = OptionalNullable.of(feeRuleId);
    }

    /**
     * UnSetter for FeeRuleId.
     * Fee rule identifier
     */
    public void unsetFeeRuleId() {
        feeRuleId = null;
    }

    /**
     * Internal Getter for FeeRuleDescription.
     * Fee rule description
     * @return Returns the Internal String
     */
    @JsonGetter("FeeRuleDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeRuleDescription() {
        return this.feeRuleDescription;
    }

    /**
     * Getter for FeeRuleDescription.
     * Fee rule description
     * @return Returns the String
     */
    public String getFeeRuleDescription() {
        return OptionalNullable.getFrom(feeRuleDescription);
    }

    /**
     * Setter for FeeRuleDescription.
     * Fee rule description
     * @param feeRuleDescription Value for String
     */
    @JsonSetter("FeeRuleDescription")
    public void setFeeRuleDescription(String feeRuleDescription) {
        this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
    }

    /**
     * UnSetter for FeeRuleDescription.
     * Fee rule description
     */
    public void unsetFeeRuleDescription() {
        feeRuleDescription = null;
    }

    /**
     * Getter for FeeRuleTiers.
     * @return Returns the List of FeesFeeRuleTiers
     */
    @JsonGetter("FeeRuleTiers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<FeesFeeRuleTiers> getFeeRuleTiers() {
        return feeRuleTiers;
    }

    /**
     * Setter for FeeRuleTiers.
     * @param feeRuleTiers Value for List of FeesFeeRuleTiers
     */
    @JsonSetter("FeeRuleTiers")
    public void setFeeRuleTiers(List<FeesFeeRuleTiers> feeRuleTiers) {
        this.feeRuleTiers = feeRuleTiers;
    }

    /**
     * Internal Getter for FeeItemDate.
     * Local Fee Item Date of when the transaction took place Format: yyyyMMdd
     * @return Returns the Internal String
     */
    @JsonGetter("FeeItemDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeItemDate() {
        return this.feeItemDate;
    }

    /**
     * Getter for FeeItemDate.
     * Local Fee Item Date of when the transaction took place Format: yyyyMMdd
     * @return Returns the String
     */
    public String getFeeItemDate() {
        return OptionalNullable.getFrom(feeItemDate);
    }

    /**
     * Setter for FeeItemDate.
     * Local Fee Item Date of when the transaction took place Format: yyyyMMdd
     * @param feeItemDate Value for String
     */
    @JsonSetter("FeeItemDate")
    public void setFeeItemDate(String feeItemDate) {
        this.feeItemDate = OptionalNullable.of(feeItemDate);
    }

    /**
     * UnSetter for FeeItemDate.
     * Local Fee Item Date of when the transaction took place Format: yyyyMMdd
     */
    public void unsetFeeItemDate() {
        feeItemDate = null;
    }

    /**
     * Internal Getter for FeeItemTime.
     * Local Fee Item Time of where the transaction took place Format: HH:mm:ss (24 hours format)
     * @return Returns the Internal String
     */
    @JsonGetter("FeeItemTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeItemTime() {
        return this.feeItemTime;
    }

    /**
     * Getter for FeeItemTime.
     * Local Fee Item Time of where the transaction took place Format: HH:mm:ss (24 hours format)
     * @return Returns the String
     */
    public String getFeeItemTime() {
        return OptionalNullable.getFrom(feeItemTime);
    }

    /**
     * Setter for FeeItemTime.
     * Local Fee Item Time of where the transaction took place Format: HH:mm:ss (24 hours format)
     * @param feeItemTime Value for String
     */
    @JsonSetter("FeeItemTime")
    public void setFeeItemTime(String feeItemTime) {
        this.feeItemTime = OptionalNullable.of(feeItemTime);
    }

    /**
     * UnSetter for FeeItemTime.
     * Local Fee Item Time of where the transaction took place Format: HH:mm:ss (24 hours format)
     */
    public void unsetFeeItemTime() {
        feeItemTime = null;
    }

    /**
     * Internal Getter for IsManual.
     * True/False. Is manual
     * @return Returns the Internal Boolean
     */
    @JsonGetter("IsManual")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetIsManual() {
        return this.isManual;
    }

    /**
     * Getter for IsManual.
     * True/False. Is manual
     * @return Returns the Boolean
     */
    public Boolean getIsManual() {
        return OptionalNullable.getFrom(isManual);
    }

    /**
     * Setter for IsManual.
     * True/False. Is manual
     * @param isManual Value for Boolean
     */
    @JsonSetter("IsManual")
    public void setIsManual(Boolean isManual) {
        this.isManual = OptionalNullable.of(isManual);
    }

    /**
     * UnSetter for IsManual.
     * True/False. Is manual
     */
    public void unsetIsManual() {
        isManual = null;
    }

    /**
     * Internal Getter for IsCancelled.
     * True/False. Is cancelled
     * @return Returns the Internal Boolean
     */
    @JsonGetter("IsCancelled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetIsCancelled() {
        return this.isCancelled;
    }

    /**
     * Getter for IsCancelled.
     * True/False. Is cancelled
     * @return Returns the Boolean
     */
    public Boolean getIsCancelled() {
        return OptionalNullable.getFrom(isCancelled);
    }

    /**
     * Setter for IsCancelled.
     * True/False. Is cancelled
     * @param isCancelled Value for Boolean
     */
    @JsonSetter("IsCancelled")
    public void setIsCancelled(Boolean isCancelled) {
        this.isCancelled = OptionalNullable.of(isCancelled);
    }

    /**
     * UnSetter for IsCancelled.
     * True/False. Is cancelled
     */
    public void unsetIsCancelled() {
        isCancelled = null;
    }

    /**
     * Internal Getter for CustomerCurrencyCode.
     * ISO currency code Example: GBP
     * @return Returns the Internal String
     */
    @JsonGetter("CustomerCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCustomerCurrencyCode() {
        return this.customerCurrencyCode;
    }

    /**
     * Getter for CustomerCurrencyCode.
     * ISO currency code Example: GBP
     * @return Returns the String
     */
    public String getCustomerCurrencyCode() {
        return OptionalNullable.getFrom(customerCurrencyCode);
    }

    /**
     * Setter for CustomerCurrencyCode.
     * ISO currency code Example: GBP
     * @param customerCurrencyCode Value for String
     */
    @JsonSetter("CustomerCurrencyCode")
    public void setCustomerCurrencyCode(String customerCurrencyCode) {
        this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
    }

    /**
     * UnSetter for CustomerCurrencyCode.
     * ISO currency code Example: GBP
     */
    public void unsetCustomerCurrencyCode() {
        customerCurrencyCode = null;
    }

    /**
     * Internal Getter for CustomerCurrencySymbol.
     * Currency symbol of the Currency Code Example: £, $
     * @return Returns the Internal String
     */
    @JsonGetter("CustomerCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCustomerCurrencySymbol() {
        return this.customerCurrencySymbol;
    }

    /**
     * Getter for CustomerCurrencySymbol.
     * Currency symbol of the Currency Code Example: £, $
     * @return Returns the String
     */
    public String getCustomerCurrencySymbol() {
        return OptionalNullable.getFrom(customerCurrencySymbol);
    }

    /**
     * Setter for CustomerCurrencySymbol.
     * Currency symbol of the Currency Code Example: £, $
     * @param customerCurrencySymbol Value for String
     */
    @JsonSetter("CustomerCurrencySymbol")
    public void setCustomerCurrencySymbol(String customerCurrencySymbol) {
        this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
    }

    /**
     * UnSetter for CustomerCurrencySymbol.
     * Currency symbol of the Currency Code Example: £, $
     */
    public void unsetCustomerCurrencySymbol() {
        customerCurrencySymbol = null;
    }

    /**
     * Internal Getter for ProductId.
     * Product Id Example: Sample list of product ids and description. 100 Service fee 102 Invoice
     * production fee 103 Account fee 104 Transaction fee 105 Card membership fee
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductId() {
        return this.productId;
    }

    /**
     * Getter for ProductId.
     * Product Id Example: Sample list of product ids and description. 100 Service fee 102 Invoice
     * production fee 103 Account fee 104 Transaction fee 105 Card membership fee
     * @return Returns the Integer
     */
    public Integer getProductId() {
        return OptionalNullable.getFrom(productId);
    }

    /**
     * Setter for ProductId.
     * Product Id Example: Sample list of product ids and description. 100 Service fee 102 Invoice
     * production fee 103 Account fee 104 Transaction fee 105 Card membership fee
     * @param productId Value for Integer
     */
    @JsonSetter("ProductId")
    public void setProductId(Integer productId) {
        this.productId = OptionalNullable.of(productId);
    }

    /**
     * UnSetter for ProductId.
     * Product Id Example: Sample list of product ids and description. 100 Service fee 102 Invoice
     * production fee 103 Account fee 104 Transaction fee 105 Card membership fee
     */
    public void unsetProductId() {
        productId = null;
    }

    /**
     * Internal Getter for ProductCode.
     * Product Code – Global as per GFN configuration Example: 2 Service fee 4 Invoice production
     * fee 5 Account fee 6 Transaction fee 7 Card membership fee
     * @return Returns the Internal String
     */
    @JsonGetter("ProductCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductCode() {
        return this.productCode;
    }

    /**
     * Getter for ProductCode.
     * Product Code – Global as per GFN configuration Example: 2 Service fee 4 Invoice production
     * fee 5 Account fee 6 Transaction fee 7 Card membership fee
     * @return Returns the String
     */
    public String getProductCode() {
        return OptionalNullable.getFrom(productCode);
    }

    /**
     * Setter for ProductCode.
     * Product Code – Global as per GFN configuration Example: 2 Service fee 4 Invoice production
     * fee 5 Account fee 6 Transaction fee 7 Card membership fee
     * @param productCode Value for String
     */
    @JsonSetter("ProductCode")
    public void setProductCode(String productCode) {
        this.productCode = OptionalNullable.of(productCode);
    }

    /**
     * UnSetter for ProductCode.
     * Product Code – Global as per GFN configuration Example: 2 Service fee 4 Invoice production
     * fee 5 Account fee 6 Transaction fee 7 Card membership fee
     */
    public void unsetProductCode() {
        productCode = null;
    }

    /**
     * Internal Getter for ProductName.
     * Product Name Example: Sample list of product ids and description. Service fee Invoice
     * production fee
     * @return Returns the Internal String
     */
    @JsonGetter("ProductName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductName() {
        return this.productName;
    }

    /**
     * Getter for ProductName.
     * Product Name Example: Sample list of product ids and description. Service fee Invoice
     * production fee
     * @return Returns the String
     */
    public String getProductName() {
        return OptionalNullable.getFrom(productName);
    }

    /**
     * Setter for ProductName.
     * Product Name Example: Sample list of product ids and description. Service fee Invoice
     * production fee
     * @param productName Value for String
     */
    @JsonSetter("ProductName")
    public void setProductName(String productName) {
        this.productName = OptionalNullable.of(productName);
    }

    /**
     * UnSetter for ProductName.
     * Product Name Example: Sample list of product ids and description. Service fee Invoice
     * production fee
     */
    public void unsetProductName() {
        productName = null;
    }

    /**
     * Internal Getter for ProductGroupId.
     * Product Group Id Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @return Returns the Internal Integer
     */
    @JsonGetter("ProductGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetProductGroupId() {
        return this.productGroupId;
    }

    /**
     * Getter for ProductGroupId.
     * Product Group Id Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @return Returns the Integer
     */
    public Integer getProductGroupId() {
        return OptionalNullable.getFrom(productGroupId);
    }

    /**
     * Setter for ProductGroupId.
     * Product Group Id Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @param productGroupId Value for Integer
     */
    @JsonSetter("ProductGroupId")
    public void setProductGroupId(Integer productGroupId) {
        this.productGroupId = OptionalNullable.of(productGroupId);
    }

    /**
     * UnSetter for ProductGroupId.
     * Product Group Id Example: Sample list 22 Card related fees 23 Monetary Adjustment
     */
    public void unsetProductGroupId() {
        productGroupId = null;
    }

    /**
     * Internal Getter for ProductGroupName.
     * Product Group Name Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @return Returns the Internal String
     */
    @JsonGetter("ProductGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProductGroupName() {
        return this.productGroupName;
    }

    /**
     * Getter for ProductGroupName.
     * Product Group Name Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @return Returns the String
     */
    public String getProductGroupName() {
        return OptionalNullable.getFrom(productGroupName);
    }

    /**
     * Setter for ProductGroupName.
     * Product Group Name Example: Sample list 22 Card related fees 23 Monetary Adjustment
     * @param productGroupName Value for String
     */
    @JsonSetter("ProductGroupName")
    public void setProductGroupName(String productGroupName) {
        this.productGroupName = OptionalNullable.of(productGroupName);
    }

    /**
     * UnSetter for ProductGroupName.
     * Product Group Name Example: Sample list 22 Card related fees 23 Monetary Adjustment
     */
    public void unsetProductGroupName() {
        productGroupName = null;
    }

    /**
     * Internal Getter for LineItemDescription.
     * Line Item Description generally the quantity as printed on Invoice or the manually keyed in
     * description for manual fees
     * @return Returns the Internal String
     */
    @JsonGetter("LineItemDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLineItemDescription() {
        return this.lineItemDescription;
    }

    /**
     * Getter for LineItemDescription.
     * Line Item Description generally the quantity as printed on Invoice or the manually keyed in
     * description for manual fees
     * @return Returns the String
     */
    public String getLineItemDescription() {
        return OptionalNullable.getFrom(lineItemDescription);
    }

    /**
     * Setter for LineItemDescription.
     * Line Item Description generally the quantity as printed on Invoice or the manually keyed in
     * description for manual fees
     * @param lineItemDescription Value for String
     */
    @JsonSetter("LineItemDescription")
    public void setLineItemDescription(String lineItemDescription) {
        this.lineItemDescription = OptionalNullable.of(lineItemDescription);
    }

    /**
     * UnSetter for LineItemDescription.
     * Line Item Description generally the quantity as printed on Invoice or the manually keyed in
     * description for manual fees
     */
    public void unsetLineItemDescription() {
        lineItemDescription = null;
    }

    /**
     * Internal Getter for Quantity.
     * Quantity
     * @return Returns the Internal Integer
     */
    @JsonGetter("Quantity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetQuantity() {
        return this.quantity;
    }

    /**
     * Getter for Quantity.
     * Quantity
     * @return Returns the Integer
     */
    public Integer getQuantity() {
        return OptionalNullable.getFrom(quantity);
    }

    /**
     * Setter for Quantity.
     * Quantity
     * @param quantity Value for Integer
     */
    @JsonSetter("Quantity")
    public void setQuantity(Integer quantity) {
        this.quantity = OptionalNullable.of(quantity);
    }

    /**
     * UnSetter for Quantity.
     * Quantity
     */
    public void unsetQuantity() {
        quantity = null;
    }

    /**
     * Internal Getter for IsInvoiced.
     * True/False. Is fee item invoiced
     * @return Returns the Internal Boolean
     */
    @JsonGetter("IsInvoiced")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetIsInvoiced() {
        return this.isInvoiced;
    }

    /**
     * Getter for IsInvoiced.
     * True/False. Is fee item invoiced
     * @return Returns the Boolean
     */
    public Boolean getIsInvoiced() {
        return OptionalNullable.getFrom(isInvoiced);
    }

    /**
     * Setter for IsInvoiced.
     * True/False. Is fee item invoiced
     * @param isInvoiced Value for Boolean
     */
    @JsonSetter("IsInvoiced")
    public void setIsInvoiced(Boolean isInvoiced) {
        this.isInvoiced = OptionalNullable.of(isInvoiced);
    }

    /**
     * UnSetter for IsInvoiced.
     * True/False. Is fee item invoiced
     */
    public void unsetIsInvoiced() {
        isInvoiced = null;
    }

    /**
     * Internal Getter for VATCountryCode.
     * VAT country ISO code
     * @return Returns the Internal String
     */
    @JsonGetter("VATCountryCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVATCountryCode() {
        return this.vATCountryCode;
    }

    /**
     * Getter for VATCountryCode.
     * VAT country ISO code
     * @return Returns the String
     */
    public String getVATCountryCode() {
        return OptionalNullable.getFrom(vATCountryCode);
    }

    /**
     * Setter for VATCountryCode.
     * VAT country ISO code
     * @param vATCountryCode Value for String
     */
    @JsonSetter("VATCountryCode")
    public void setVATCountryCode(String vATCountryCode) {
        this.vATCountryCode = OptionalNullable.of(vATCountryCode);
    }

    /**
     * UnSetter for VATCountryCode.
     * VAT country ISO code
     */
    public void unsetVATCountryCode() {
        vATCountryCode = null;
    }

    /**
     * Internal Getter for VATCountryName.
     * VAT country name
     * @return Returns the Internal String
     */
    @JsonGetter("VATCountryName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVATCountryName() {
        return this.vATCountryName;
    }

    /**
     * Getter for VATCountryName.
     * VAT country name
     * @return Returns the String
     */
    public String getVATCountryName() {
        return OptionalNullable.getFrom(vATCountryName);
    }

    /**
     * Setter for VATCountryName.
     * VAT country name
     * @param vATCountryName Value for String
     */
    @JsonSetter("VATCountryName")
    public void setVATCountryName(String vATCountryName) {
        this.vATCountryName = OptionalNullable.of(vATCountryName);
    }

    /**
     * UnSetter for VATCountryName.
     * VAT country name
     */
    public void unsetVATCountryName() {
        vATCountryName = null;
    }

    /**
     * Internal Getter for VATPercentage.
     * VAT percentage
     * @return Returns the Internal Double
     */
    @JsonGetter("VATPercentage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetVATPercentage() {
        return this.vATPercentage;
    }

    /**
     * Getter for VATPercentage.
     * VAT percentage
     * @return Returns the Double
     */
    public Double getVATPercentage() {
        return OptionalNullable.getFrom(vATPercentage);
    }

    /**
     * Setter for VATPercentage.
     * VAT percentage
     * @param vATPercentage Value for Double
     */
    @JsonSetter("VATPercentage")
    public void setVATPercentage(Double vATPercentage) {
        this.vATPercentage = OptionalNullable.of(vATPercentage);
    }

    /**
     * UnSetter for VATPercentage.
     * VAT percentage
     */
    public void unsetVATPercentage() {
        vATPercentage = null;
    }

    /**
     * Internal Getter for VATCategoryID.
     * VAT Category identifier
     * @return Returns the Internal Integer
     */
    @JsonGetter("VATCategoryID")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetVATCategoryID() {
        return this.vATCategoryID;
    }

    /**
     * Getter for VATCategoryID.
     * VAT Category identifier
     * @return Returns the Integer
     */
    public Integer getVATCategoryID() {
        return OptionalNullable.getFrom(vATCategoryID);
    }

    /**
     * Setter for VATCategoryID.
     * VAT Category identifier
     * @param vATCategoryID Value for Integer
     */
    @JsonSetter("VATCategoryID")
    public void setVATCategoryID(Integer vATCategoryID) {
        this.vATCategoryID = OptionalNullable.of(vATCategoryID);
    }

    /**
     * UnSetter for VATCategoryID.
     * VAT Category identifier
     */
    public void unsetVATCategoryID() {
        vATCategoryID = null;
    }

    /**
     * Internal Getter for VATCategoryDescription.
     * VAT Category description
     * @return Returns the Internal String
     */
    @JsonGetter("VATCategoryDescription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVATCategoryDescription() {
        return this.vATCategoryDescription;
    }

    /**
     * Getter for VATCategoryDescription.
     * VAT Category description
     * @return Returns the String
     */
    public String getVATCategoryDescription() {
        return OptionalNullable.getFrom(vATCategoryDescription);
    }

    /**
     * Setter for VATCategoryDescription.
     * VAT Category description
     * @param vATCategoryDescription Value for String
     */
    @JsonSetter("VATCategoryDescription")
    public void setVATCategoryDescription(String vATCategoryDescription) {
        this.vATCategoryDescription = OptionalNullable.of(vATCategoryDescription);
    }

    /**
     * UnSetter for VATCategoryDescription.
     * VAT Category description
     */
    public void unsetVATCategoryDescription() {
        vATCategoryDescription = null;
    }

    /**
     * Internal Getter for LegislativeRegionId.
     * Legislative region id
     * @return Returns the Internal Integer
     */
    @JsonGetter("LegislativeRegionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetLegislativeRegionId() {
        return this.legislativeRegionId;
    }

    /**
     * Getter for LegislativeRegionId.
     * Legislative region id
     * @return Returns the Integer
     */
    public Integer getLegislativeRegionId() {
        return OptionalNullable.getFrom(legislativeRegionId);
    }

    /**
     * Setter for LegislativeRegionId.
     * Legislative region id
     * @param legislativeRegionId Value for Integer
     */
    @JsonSetter("LegislativeRegionId")
    public void setLegislativeRegionId(Integer legislativeRegionId) {
        this.legislativeRegionId = OptionalNullable.of(legislativeRegionId);
    }

    /**
     * UnSetter for LegislativeRegionId.
     * Legislative region id
     */
    public void unsetLegislativeRegionId() {
        legislativeRegionId = null;
    }

    /**
     * Internal Getter for LegislativeRegionName.
     * Legislative region name
     * @return Returns the Internal String
     */
    @JsonGetter("LegislativeRegionName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLegislativeRegionName() {
        return this.legislativeRegionName;
    }

    /**
     * Getter for LegislativeRegionName.
     * Legislative region name
     * @return Returns the String
     */
    public String getLegislativeRegionName() {
        return OptionalNullable.getFrom(legislativeRegionName);
    }

    /**
     * Setter for LegislativeRegionName.
     * Legislative region name
     * @param legislativeRegionName Value for String
     */
    @JsonSetter("LegislativeRegionName")
    public void setLegislativeRegionName(String legislativeRegionName) {
        this.legislativeRegionName = OptionalNullable.of(legislativeRegionName);
    }

    /**
     * UnSetter for LegislativeRegionName.
     * Legislative region name
     */
    public void unsetLegislativeRegionName() {
        legislativeRegionName = null;
    }

    /**
     * Internal Getter for SystemEntryDate.
     * System entry date
     * @return Returns the Internal String
     */
    @JsonGetter("SystemEntryDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSystemEntryDate() {
        return this.systemEntryDate;
    }

    /**
     * Getter for SystemEntryDate.
     * System entry date
     * @return Returns the String
     */
    public String getSystemEntryDate() {
        return OptionalNullable.getFrom(systemEntryDate);
    }

    /**
     * Setter for SystemEntryDate.
     * System entry date
     * @param systemEntryDate Value for String
     */
    @JsonSetter("SystemEntryDate")
    public void setSystemEntryDate(String systemEntryDate) {
        this.systemEntryDate = OptionalNullable.of(systemEntryDate);
    }

    /**
     * UnSetter for SystemEntryDate.
     * System entry date
     */
    public void unsetSystemEntryDate() {
        systemEntryDate = null;
    }

    /**
     * Internal Getter for SystemEntryTime.
     * System entry time
     * @return Returns the Internal String
     */
    @JsonGetter("SystemEntryTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSystemEntryTime() {
        return this.systemEntryTime;
    }

    /**
     * Getter for SystemEntryTime.
     * System entry time
     * @return Returns the String
     */
    public String getSystemEntryTime() {
        return OptionalNullable.getFrom(systemEntryTime);
    }

    /**
     * Setter for SystemEntryTime.
     * System entry time
     * @param systemEntryTime Value for String
     */
    @JsonSetter("SystemEntryTime")
    public void setSystemEntryTime(String systemEntryTime) {
        this.systemEntryTime = OptionalNullable.of(systemEntryTime);
    }

    /**
     * UnSetter for SystemEntryTime.
     * System entry time
     */
    public void unsetSystemEntryTime() {
        systemEntryTime = null;
    }

    /**
     * Internal Getter for ColCoNetAmount.
     * ColCo net amount
     * @return Returns the Internal Double
     */
    @JsonGetter("ColCoNetAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetColCoNetAmount() {
        return this.colCoNetAmount;
    }

    /**
     * Getter for ColCoNetAmount.
     * ColCo net amount
     * @return Returns the Double
     */
    public Double getColCoNetAmount() {
        return OptionalNullable.getFrom(colCoNetAmount);
    }

    /**
     * Setter for ColCoNetAmount.
     * ColCo net amount
     * @param colCoNetAmount Value for Double
     */
    @JsonSetter("ColCoNetAmount")
    public void setColCoNetAmount(Double colCoNetAmount) {
        this.colCoNetAmount = OptionalNullable.of(colCoNetAmount);
    }

    /**
     * UnSetter for ColCoNetAmount.
     * ColCo net amount
     */
    public void unsetColCoNetAmount() {
        colCoNetAmount = null;
    }

    /**
     * Internal Getter for ColCoVATAmount.
     * ColCoVAT amount
     * @return Returns the Internal Double
     */
    @JsonGetter("ColCoVATAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetColCoVATAmount() {
        return this.colCoVATAmount;
    }

    /**
     * Getter for ColCoVATAmount.
     * ColCoVAT amount
     * @return Returns the Double
     */
    public Double getColCoVATAmount() {
        return OptionalNullable.getFrom(colCoVATAmount);
    }

    /**
     * Setter for ColCoVATAmount.
     * ColCoVAT amount
     * @param colCoVATAmount Value for Double
     */
    @JsonSetter("ColCoVATAmount")
    public void setColCoVATAmount(Double colCoVATAmount) {
        this.colCoVATAmount = OptionalNullable.of(colCoVATAmount);
    }

    /**
     * UnSetter for ColCoVATAmount.
     * ColCoVAT amount
     */
    public void unsetColCoVATAmount() {
        colCoVATAmount = null;
    }

    /**
     * Internal Getter for ColCoGrossAmount.
     * ColCo gross amount
     * @return Returns the Internal Double
     */
    @JsonGetter("ColCoGrossAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetColCoGrossAmount() {
        return this.colCoGrossAmount;
    }

    /**
     * Getter for ColCoGrossAmount.
     * ColCo gross amount
     * @return Returns the Double
     */
    public Double getColCoGrossAmount() {
        return OptionalNullable.getFrom(colCoGrossAmount);
    }

    /**
     * Setter for ColCoGrossAmount.
     * ColCo gross amount
     * @param colCoGrossAmount Value for Double
     */
    @JsonSetter("ColCoGrossAmount")
    public void setColCoGrossAmount(Double colCoGrossAmount) {
        this.colCoGrossAmount = OptionalNullable.of(colCoGrossAmount);
    }

    /**
     * UnSetter for ColCoGrossAmount.
     * ColCo gross amount
     */
    public void unsetColCoGrossAmount() {
        colCoGrossAmount = null;
    }

    /**
     * Internal Getter for InterimInvoiceId.
     * Interim invoice id
     * @return Returns the Internal Integer
     */
    @JsonGetter("InterimInvoiceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetInterimInvoiceId() {
        return this.interimInvoiceId;
    }

    /**
     * Getter for InterimInvoiceId.
     * Interim invoice id
     * @return Returns the Integer
     */
    public Integer getInterimInvoiceId() {
        return OptionalNullable.getFrom(interimInvoiceId);
    }

    /**
     * Setter for InterimInvoiceId.
     * Interim invoice id
     * @param interimInvoiceId Value for Integer
     */
    @JsonSetter("InterimInvoiceId")
    public void setInterimInvoiceId(Integer interimInvoiceId) {
        this.interimInvoiceId = OptionalNullable.of(interimInvoiceId);
    }

    /**
     * UnSetter for InterimInvoiceId.
     * Interim invoice id
     */
    public void unsetInterimInvoiceId() {
        interimInvoiceId = null;
    }

    /**
     * Internal Getter for InterimInvoiceNumber.
     * Interim invoice number
     * @return Returns the Internal String
     */
    @JsonGetter("InterimInvoiceNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInterimInvoiceNumber() {
        return this.interimInvoiceNumber;
    }

    /**
     * Getter for InterimInvoiceNumber.
     * Interim invoice number
     * @return Returns the String
     */
    public String getInterimInvoiceNumber() {
        return OptionalNullable.getFrom(interimInvoiceNumber);
    }

    /**
     * Setter for InterimInvoiceNumber.
     * Interim invoice number
     * @param interimInvoiceNumber Value for String
     */
    @JsonSetter("InterimInvoiceNumber")
    public void setInterimInvoiceNumber(String interimInvoiceNumber) {
        this.interimInvoiceNumber = OptionalNullable.of(interimInvoiceNumber);
    }

    /**
     * UnSetter for InterimInvoiceNumber.
     * Interim invoice number
     */
    public void unsetInterimInvoiceNumber() {
        interimInvoiceNumber = null;
    }

    /**
     * Internal Getter for InvoiceId.
     * Invoice id
     * @return Returns the Internal Integer
     */
    @JsonGetter("InvoiceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetInvoiceId() {
        return this.invoiceId;
    }

    /**
     * Getter for InvoiceId.
     * Invoice id
     * @return Returns the Integer
     */
    public Integer getInvoiceId() {
        return OptionalNullable.getFrom(invoiceId);
    }

    /**
     * Setter for InvoiceId.
     * Invoice id
     * @param invoiceId Value for Integer
     */
    @JsonSetter("InvoiceId")
    public void setInvoiceId(Integer invoiceId) {
        this.invoiceId = OptionalNullable.of(invoiceId);
    }

    /**
     * UnSetter for InvoiceId.
     * Invoice id
     */
    public void unsetInvoiceId() {
        invoiceId = null;
    }

    /**
     * Internal Getter for InvoiceNumber.
     * Invoice number
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceNumber() {
        return this.invoiceNumber;
    }

    /**
     * Getter for InvoiceNumber.
     * Invoice number
     * @return Returns the String
     */
    public String getInvoiceNumber() {
        return OptionalNullable.getFrom(invoiceNumber);
    }

    /**
     * Setter for InvoiceNumber.
     * Invoice number
     * @param invoiceNumber Value for String
     */
    @JsonSetter("InvoiceNumber")
    public void setInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = OptionalNullable.of(invoiceNumber);
    }

    /**
     * UnSetter for InvoiceNumber.
     * Invoice number
     */
    public void unsetInvoiceNumber() {
        invoiceNumber = null;
    }

    /**
     * Internal Getter for InvoiceDate.
     * Invoice date Format: yyyyMMdd
     * @return Returns the Internal String
     */
    @JsonGetter("InvoiceDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetInvoiceDate() {
        return this.invoiceDate;
    }

    /**
     * Getter for InvoiceDate.
     * Invoice date Format: yyyyMMdd
     * @return Returns the String
     */
    public String getInvoiceDate() {
        return OptionalNullable.getFrom(invoiceDate);
    }

    /**
     * Setter for InvoiceDate.
     * Invoice date Format: yyyyMMdd
     * @param invoiceDate Value for String
     */
    @JsonSetter("InvoiceDate")
    public void setInvoiceDate(String invoiceDate) {
        this.invoiceDate = OptionalNullable.of(invoiceDate);
    }

    /**
     * UnSetter for InvoiceDate.
     * Invoice date Format: yyyyMMdd
     */
    public void unsetInvoiceDate() {
        invoiceDate = null;
    }

    /**
     * Internal Getter for CustomerExchangeRate.
     * Customer exchange rate
     * @return Returns the Internal Double
     */
    @JsonGetter("CustomerExchangeRate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetCustomerExchangeRate() {
        return this.customerExchangeRate;
    }

    /**
     * Getter for CustomerExchangeRate.
     * Customer exchange rate
     * @return Returns the Double
     */
    public Double getCustomerExchangeRate() {
        return OptionalNullable.getFrom(customerExchangeRate);
    }

    /**
     * Setter for CustomerExchangeRate.
     * Customer exchange rate
     * @param customerExchangeRate Value for Double
     */
    @JsonSetter("CustomerExchangeRate")
    public void setCustomerExchangeRate(Double customerExchangeRate) {
        this.customerExchangeRate = OptionalNullable.of(customerExchangeRate);
    }

    /**
     * UnSetter for CustomerExchangeRate.
     * Customer exchange rate
     */
    public void unsetCustomerExchangeRate() {
        customerExchangeRate = null;
    }

    /**
     * Internal Getter for InvoiceNetAmount.
     * Invoice net amount
     * @return Returns the Internal Double
     */
    @JsonGetter("InvoiceNetAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetInvoiceNetAmount() {
        return this.invoiceNetAmount;
    }

    /**
     * Getter for InvoiceNetAmount.
     * Invoice net amount
     * @return Returns the Double
     */
    public Double getInvoiceNetAmount() {
        return OptionalNullable.getFrom(invoiceNetAmount);
    }

    /**
     * Setter for InvoiceNetAmount.
     * Invoice net amount
     * @param invoiceNetAmount Value for Double
     */
    @JsonSetter("InvoiceNetAmount")
    public void setInvoiceNetAmount(Double invoiceNetAmount) {
        this.invoiceNetAmount = OptionalNullable.of(invoiceNetAmount);
    }

    /**
     * UnSetter for InvoiceNetAmount.
     * Invoice net amount
     */
    public void unsetInvoiceNetAmount() {
        invoiceNetAmount = null;
    }

    /**
     * Internal Getter for InvoiceGrossAmount.
     * Invoice gross amount
     * @return Returns the Internal Double
     */
    @JsonGetter("InvoiceGrossAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetInvoiceGrossAmount() {
        return this.invoiceGrossAmount;
    }

    /**
     * Getter for InvoiceGrossAmount.
     * Invoice gross amount
     * @return Returns the Double
     */
    public Double getInvoiceGrossAmount() {
        return OptionalNullable.getFrom(invoiceGrossAmount);
    }

    /**
     * Setter for InvoiceGrossAmount.
     * Invoice gross amount
     * @param invoiceGrossAmount Value for Double
     */
    @JsonSetter("InvoiceGrossAmount")
    public void setInvoiceGrossAmount(Double invoiceGrossAmount) {
        this.invoiceGrossAmount = OptionalNullable.of(invoiceGrossAmount);
    }

    /**
     * UnSetter for InvoiceGrossAmount.
     * Invoice gross amount
     */
    public void unsetInvoiceGrossAmount() {
        invoiceGrossAmount = null;
    }

    /**
     * Internal Getter for InvoiceVATAmount.
     * Invoice VAT amount
     * @return Returns the Internal Double
     */
    @JsonGetter("InvoiceVATAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetInvoiceVATAmount() {
        return this.invoiceVATAmount;
    }

    /**
     * Getter for InvoiceVATAmount.
     * Invoice VAT amount
     * @return Returns the Double
     */
    public Double getInvoiceVATAmount() {
        return OptionalNullable.getFrom(invoiceVATAmount);
    }

    /**
     * Setter for InvoiceVATAmount.
     * Invoice VAT amount
     * @param invoiceVATAmount Value for Double
     */
    @JsonSetter("InvoiceVATAmount")
    public void setInvoiceVATAmount(Double invoiceVATAmount) {
        this.invoiceVATAmount = OptionalNullable.of(invoiceVATAmount);
    }

    /**
     * UnSetter for InvoiceVATAmount.
     * Invoice VAT amount
     */
    public void unsetInvoiceVATAmount() {
        invoiceVATAmount = null;
    }

    /**
     * Internal Getter for ReverseCharge.
     * True/False. Reverse charge.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("ReverseCharge")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetReverseCharge() {
        return this.reverseCharge;
    }

    /**
     * Getter for ReverseCharge.
     * True/False. Reverse charge.
     * @return Returns the Boolean
     */
    public Boolean getReverseCharge() {
        return OptionalNullable.getFrom(reverseCharge);
    }

    /**
     * Setter for ReverseCharge.
     * True/False. Reverse charge.
     * @param reverseCharge Value for Boolean
     */
    @JsonSetter("ReverseCharge")
    public void setReverseCharge(Boolean reverseCharge) {
        this.reverseCharge = OptionalNullable.of(reverseCharge);
    }

    /**
     * UnSetter for ReverseCharge.
     * True/False. Reverse charge.
     */
    public void unsetReverseCharge() {
        reverseCharge = null;
    }

    /**
     * Internal Getter for OriginalFeeItemId.
     * Original Fee Item id.
     * @return Returns the Internal Integer
     */
    @JsonGetter("OriginalFeeItemId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetOriginalFeeItemId() {
        return this.originalFeeItemId;
    }

    /**
     * Getter for OriginalFeeItemId.
     * Original Fee Item id.
     * @return Returns the Integer
     */
    public Integer getOriginalFeeItemId() {
        return OptionalNullable.getFrom(originalFeeItemId);
    }

    /**
     * Setter for OriginalFeeItemId.
     * Original Fee Item id.
     * @param originalFeeItemId Value for Integer
     */
    @JsonSetter("OriginalFeeItemId")
    public void setOriginalFeeItemId(Integer originalFeeItemId) {
        this.originalFeeItemId = OptionalNullable.of(originalFeeItemId);
    }

    /**
     * UnSetter for OriginalFeeItemId.
     * Original Fee Item id.
     */
    public void unsetOriginalFeeItemId() {
        originalFeeItemId = null;
    }

    /**
     * Internal Getter for OriginalCurrencyCode.
     * Original FeeItem Currency ISO code.
     * @return Returns the Internal String
     */
    @JsonGetter("OriginalCurrencyCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginalCurrencyCode() {
        return this.originalCurrencyCode;
    }

    /**
     * Getter for OriginalCurrencyCode.
     * Original FeeItem Currency ISO code.
     * @return Returns the String
     */
    public String getOriginalCurrencyCode() {
        return OptionalNullable.getFrom(originalCurrencyCode);
    }

    /**
     * Setter for OriginalCurrencyCode.
     * Original FeeItem Currency ISO code.
     * @param originalCurrencyCode Value for String
     */
    @JsonSetter("OriginalCurrencyCode")
    public void setOriginalCurrencyCode(String originalCurrencyCode) {
        this.originalCurrencyCode = OptionalNullable.of(originalCurrencyCode);
    }

    /**
     * UnSetter for OriginalCurrencyCode.
     * Original FeeItem Currency ISO code.
     */
    public void unsetOriginalCurrencyCode() {
        originalCurrencyCode = null;
    }

    /**
     * Internal Getter for OriginalCurrencySymbol.
     * Original FeeItem currency symbol
     * @return Returns the Internal String
     */
    @JsonGetter("OriginalCurrencySymbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginalCurrencySymbol() {
        return this.originalCurrencySymbol;
    }

    /**
     * Getter for OriginalCurrencySymbol.
     * Original FeeItem currency symbol
     * @return Returns the String
     */
    public String getOriginalCurrencySymbol() {
        return OptionalNullable.getFrom(originalCurrencySymbol);
    }

    /**
     * Setter for OriginalCurrencySymbol.
     * Original FeeItem currency symbol
     * @param originalCurrencySymbol Value for String
     */
    @JsonSetter("OriginalCurrencySymbol")
    public void setOriginalCurrencySymbol(String originalCurrencySymbol) {
        this.originalCurrencySymbol = OptionalNullable.of(originalCurrencySymbol);
    }

    /**
     * UnSetter for OriginalCurrencySymbol.
     * Original FeeItem currency symbol
     */
    public void unsetOriginalCurrencySymbol() {
        originalCurrencySymbol = null;
    }

    /**
     * Internal Getter for OriginalUnitPrice.
     * Original FeeItem unit price
     * @return Returns the Internal Double
     */
    @JsonGetter("OriginalUnitPrice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetOriginalUnitPrice() {
        return this.originalUnitPrice;
    }

    /**
     * Getter for OriginalUnitPrice.
     * Original FeeItem unit price
     * @return Returns the Double
     */
    public Double getOriginalUnitPrice() {
        return OptionalNullable.getFrom(originalUnitPrice);
    }

    /**
     * Setter for OriginalUnitPrice.
     * Original FeeItem unit price
     * @param originalUnitPrice Value for Double
     */
    @JsonSetter("OriginalUnitPrice")
    public void setOriginalUnitPrice(Double originalUnitPrice) {
        this.originalUnitPrice = OptionalNullable.of(originalUnitPrice);
    }

    /**
     * UnSetter for OriginalUnitPrice.
     * Original FeeItem unit price
     */
    public void unsetOriginalUnitPrice() {
        originalUnitPrice = null;
    }

    /**
     * Internal Getter for OriginalNetAmount.
     * Original FeeItem net amount
     * @return Returns the Internal Double
     */
    @JsonGetter("OriginalNetAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetOriginalNetAmount() {
        return this.originalNetAmount;
    }

    /**
     * Getter for OriginalNetAmount.
     * Original FeeItem net amount
     * @return Returns the Double
     */
    public Double getOriginalNetAmount() {
        return OptionalNullable.getFrom(originalNetAmount);
    }

    /**
     * Setter for OriginalNetAmount.
     * Original FeeItem net amount
     * @param originalNetAmount Value for Double
     */
    @JsonSetter("OriginalNetAmount")
    public void setOriginalNetAmount(Double originalNetAmount) {
        this.originalNetAmount = OptionalNullable.of(originalNetAmount);
    }

    /**
     * UnSetter for OriginalNetAmount.
     * Original FeeItem net amount
     */
    public void unsetOriginalNetAmount() {
        originalNetAmount = null;
    }

    /**
     * Internal Getter for OriginalVATAmount.
     * Original FeeItem VAT amount
     * @return Returns the Internal Double
     */
    @JsonGetter("OriginalVATAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetOriginalVATAmount() {
        return this.originalVATAmount;
    }

    /**
     * Getter for OriginalVATAmount.
     * Original FeeItem VAT amount
     * @return Returns the Double
     */
    public Double getOriginalVATAmount() {
        return OptionalNullable.getFrom(originalVATAmount);
    }

    /**
     * Setter for OriginalVATAmount.
     * Original FeeItem VAT amount
     * @param originalVATAmount Value for Double
     */
    @JsonSetter("OriginalVATAmount")
    public void setOriginalVATAmount(Double originalVATAmount) {
        this.originalVATAmount = OptionalNullable.of(originalVATAmount);
    }

    /**
     * UnSetter for OriginalVATAmount.
     * Original FeeItem VAT amount
     */
    public void unsetOriginalVATAmount() {
        originalVATAmount = null;
    }

    /**
     * Internal Getter for OriginalGrossAmount.
     * Original FeeItem gross amount
     * @return Returns the Internal Double
     */
    @JsonGetter("OriginalGrossAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetOriginalGrossAmount() {
        return this.originalGrossAmount;
    }

    /**
     * Getter for OriginalGrossAmount.
     * Original FeeItem gross amount
     * @return Returns the Double
     */
    public Double getOriginalGrossAmount() {
        return OptionalNullable.getFrom(originalGrossAmount);
    }

    /**
     * Setter for OriginalGrossAmount.
     * Original FeeItem gross amount
     * @param originalGrossAmount Value for Double
     */
    @JsonSetter("OriginalGrossAmount")
    public void setOriginalGrossAmount(Double originalGrossAmount) {
        this.originalGrossAmount = OptionalNullable.of(originalGrossAmount);
    }

    /**
     * UnSetter for OriginalGrossAmount.
     * Original FeeItem gross amount
     */
    public void unsetOriginalGrossAmount() {
        originalGrossAmount = null;
    }

    /**
     * Internal Getter for OriginalExchangeRate.
     * Original FeeItem exchange rate
     * @return Returns the Internal Double
     */
    @JsonGetter("OriginalExchangeRate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetOriginalExchangeRate() {
        return this.originalExchangeRate;
    }

    /**
     * Getter for OriginalExchangeRate.
     * Original FeeItem exchange rate
     * @return Returns the Double
     */
    public Double getOriginalExchangeRate() {
        return OptionalNullable.getFrom(originalExchangeRate);
    }

    /**
     * Setter for OriginalExchangeRate.
     * Original FeeItem exchange rate
     * @param originalExchangeRate Value for Double
     */
    @JsonSetter("OriginalExchangeRate")
    public void setOriginalExchangeRate(Double originalExchangeRate) {
        this.originalExchangeRate = OptionalNullable.of(originalExchangeRate);
    }

    /**
     * UnSetter for OriginalExchangeRate.
     * Original FeeItem exchange rate
     */
    public void unsetOriginalExchangeRate() {
        originalExchangeRate = null;
    }

    /**
     * Internal Getter for OriginalLegislativeRegionId.
     * Original legislative region id
     * @return Returns the Internal Integer
     */
    @JsonGetter("OriginalLegislativeRegionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetOriginalLegislativeRegionId() {
        return this.originalLegislativeRegionId;
    }

    /**
     * Getter for OriginalLegislativeRegionId.
     * Original legislative region id
     * @return Returns the Integer
     */
    public Integer getOriginalLegislativeRegionId() {
        return OptionalNullable.getFrom(originalLegislativeRegionId);
    }

    /**
     * Setter for OriginalLegislativeRegionId.
     * Original legislative region id
     * @param originalLegislativeRegionId Value for Integer
     */
    @JsonSetter("OriginalLegislativeRegionId")
    public void setOriginalLegislativeRegionId(Integer originalLegislativeRegionId) {
        this.originalLegislativeRegionId = OptionalNullable.of(originalLegislativeRegionId);
    }

    /**
     * UnSetter for OriginalLegislativeRegionId.
     * Original legislative region id
     */
    public void unsetOriginalLegislativeRegionId() {
        originalLegislativeRegionId = null;
    }

    /**
     * Internal Getter for OriginalLegislativeRegionName.
     * Original legislative region name
     * @return Returns the Internal String
     */
    @JsonGetter("OriginalLegislativeRegionName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginalLegislativeRegionName() {
        return this.originalLegislativeRegionName;
    }

    /**
     * Getter for OriginalLegislativeRegionName.
     * Original legislative region name
     * @return Returns the String
     */
    public String getOriginalLegislativeRegionName() {
        return OptionalNullable.getFrom(originalLegislativeRegionName);
    }

    /**
     * Setter for OriginalLegislativeRegionName.
     * Original legislative region name
     * @param originalLegislativeRegionName Value for String
     */
    @JsonSetter("OriginalLegislativeRegionName")
    public void setOriginalLegislativeRegionName(String originalLegislativeRegionName) {
        this.originalLegislativeRegionName = OptionalNullable.of(originalLegislativeRegionName);
    }

    /**
     * UnSetter for OriginalLegislativeRegionName.
     * Original legislative region name
     */
    public void unsetOriginalLegislativeRegionName() {
        originalLegislativeRegionName = null;
    }

    /**
     * Internal Getter for Frequency.
     * Fee frequency derived from Fee rules if applicable Returns ID-Description in one field
     * Example: 1- Daily (all days) 2-Daily (only working days) 3-Weekly – Monday 4-Weekly - Tuesday
     * @return Returns the Internal String
     */
    @JsonGetter("Frequency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFrequency() {
        return this.frequency;
    }

    /**
     * Getter for Frequency.
     * Fee frequency derived from Fee rules if applicable Returns ID-Description in one field
     * Example: 1- Daily (all days) 2-Daily (only working days) 3-Weekly – Monday 4-Weekly - Tuesday
     * @return Returns the String
     */
    public String getFrequency() {
        return OptionalNullable.getFrom(frequency);
    }

    /**
     * Setter for Frequency.
     * Fee frequency derived from Fee rules if applicable Returns ID-Description in one field
     * Example: 1- Daily (all days) 2-Daily (only working days) 3-Weekly – Monday 4-Weekly - Tuesday
     * @param frequency Value for String
     */
    @JsonSetter("Frequency")
    public void setFrequency(String frequency) {
        this.frequency = OptionalNullable.of(frequency);
    }

    /**
     * UnSetter for Frequency.
     * Fee frequency derived from Fee rules if applicable Returns ID-Description in one field
     * Example: 1- Daily (all days) 2-Daily (only working days) 3-Weekly – Monday 4-Weekly - Tuesday
     */
    public void unsetFrequency() {
        frequency = null;
    }

    /**
     * Internal Getter for FeeItemCardLevelBreakup.
     * Fee breakup at card level for Fee Items where applicable.
     * @return Returns the Internal String
     */
    @JsonGetter("FeeItemCardLevelBreakup")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFeeItemCardLevelBreakup() {
        return this.feeItemCardLevelBreakup;
    }

    /**
     * Getter for FeeItemCardLevelBreakup.
     * Fee breakup at card level for Fee Items where applicable.
     * @return Returns the String
     */
    public String getFeeItemCardLevelBreakup() {
        return OptionalNullable.getFrom(feeItemCardLevelBreakup);
    }

    /**
     * Setter for FeeItemCardLevelBreakup.
     * Fee breakup at card level for Fee Items where applicable.
     * @param feeItemCardLevelBreakup Value for String
     */
    @JsonSetter("FeeItemCardLevelBreakup")
    public void setFeeItemCardLevelBreakup(String feeItemCardLevelBreakup) {
        this.feeItemCardLevelBreakup = OptionalNullable.of(feeItemCardLevelBreakup);
    }

    /**
     * UnSetter for FeeItemCardLevelBreakup.
     * Fee breakup at card level for Fee Items where applicable.
     */
    public void unsetFeeItemCardLevelBreakup() {
        feeItemCardLevelBreakup = null;
    }

    /**
     * Internal Getter for OriginalFeeItemInvoiceId.
     * Invoice Id/ Billing Document Id of the original fee item (when not null). Applicable only for
     * fee items that are refund to an original fee item that is already invoiced.
     * @return Returns the Internal Integer
     */
    @JsonGetter("OriginalFeeItemInvoiceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetOriginalFeeItemInvoiceId() {
        return this.originalFeeItemInvoiceId;
    }

    /**
     * Getter for OriginalFeeItemInvoiceId.
     * Invoice Id/ Billing Document Id of the original fee item (when not null). Applicable only for
     * fee items that are refund to an original fee item that is already invoiced.
     * @return Returns the Integer
     */
    public Integer getOriginalFeeItemInvoiceId() {
        return OptionalNullable.getFrom(originalFeeItemInvoiceId);
    }

    /**
     * Setter for OriginalFeeItemInvoiceId.
     * Invoice Id/ Billing Document Id of the original fee item (when not null). Applicable only for
     * fee items that are refund to an original fee item that is already invoiced.
     * @param originalFeeItemInvoiceId Value for Integer
     */
    @JsonSetter("OriginalFeeItemInvoiceId")
    public void setOriginalFeeItemInvoiceId(Integer originalFeeItemInvoiceId) {
        this.originalFeeItemInvoiceId = OptionalNullable.of(originalFeeItemInvoiceId);
    }

    /**
     * UnSetter for OriginalFeeItemInvoiceId.
     * Invoice Id/ Billing Document Id of the original fee item (when not null). Applicable only for
     * fee items that are refund to an original fee item that is already invoiced.
     */
    public void unsetOriginalFeeItemInvoiceId() {
        originalFeeItemInvoiceId = null;
    }

    /**
     * Internal Getter for OriginalFeeItemInvoiceNumber.
     * Invoice Number of the original fee item (when not null). Applicable only for fee items that
     * are refund to an original fee item that is already invoiced.
     * @return Returns the Internal String
     */
    @JsonGetter("OriginalFeeItemInvoiceNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginalFeeItemInvoiceNumber() {
        return this.originalFeeItemInvoiceNumber;
    }

    /**
     * Getter for OriginalFeeItemInvoiceNumber.
     * Invoice Number of the original fee item (when not null). Applicable only for fee items that
     * are refund to an original fee item that is already invoiced.
     * @return Returns the String
     */
    public String getOriginalFeeItemInvoiceNumber() {
        return OptionalNullable.getFrom(originalFeeItemInvoiceNumber);
    }

    /**
     * Setter for OriginalFeeItemInvoiceNumber.
     * Invoice Number of the original fee item (when not null). Applicable only for fee items that
     * are refund to an original fee item that is already invoiced.
     * @param originalFeeItemInvoiceNumber Value for String
     */
    @JsonSetter("OriginalFeeItemInvoiceNumber")
    public void setOriginalFeeItemInvoiceNumber(String originalFeeItemInvoiceNumber) {
        this.originalFeeItemInvoiceNumber = OptionalNullable.of(originalFeeItemInvoiceNumber);
    }

    /**
     * UnSetter for OriginalFeeItemInvoiceNumber.
     * Invoice Number of the original fee item (when not null). Applicable only for fee items that
     * are refund to an original fee item that is already invoiced.
     */
    public void unsetOriginalFeeItemInvoiceNumber() {
        originalFeeItemInvoiceNumber = null;
    }

    /**
     * Internal Getter for OriginalFeeItemInvoiceDate.
     * Invoice Date of the original fee item (when not null). Applicable only for fee items that are
     * refund to an original fee item that is already invoiced. Format: yyyyMMdd
     * @return Returns the Internal String
     */
    @JsonGetter("OriginalFeeItemInvoiceDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginalFeeItemInvoiceDate() {
        return this.originalFeeItemInvoiceDate;
    }

    /**
     * Getter for OriginalFeeItemInvoiceDate.
     * Invoice Date of the original fee item (when not null). Applicable only for fee items that are
     * refund to an original fee item that is already invoiced. Format: yyyyMMdd
     * @return Returns the String
     */
    public String getOriginalFeeItemInvoiceDate() {
        return OptionalNullable.getFrom(originalFeeItemInvoiceDate);
    }

    /**
     * Setter for OriginalFeeItemInvoiceDate.
     * Invoice Date of the original fee item (when not null). Applicable only for fee items that are
     * refund to an original fee item that is already invoiced. Format: yyyyMMdd
     * @param originalFeeItemInvoiceDate Value for String
     */
    @JsonSetter("OriginalFeeItemInvoiceDate")
    public void setOriginalFeeItemInvoiceDate(String originalFeeItemInvoiceDate) {
        this.originalFeeItemInvoiceDate = OptionalNullable.of(originalFeeItemInvoiceDate);
    }

    /**
     * UnSetter for OriginalFeeItemInvoiceDate.
     * Invoice Date of the original fee item (when not null). Applicable only for fee items that are
     * refund to an original fee item that is already invoiced. Format: yyyyMMdd
     */
    public void unsetOriginalFeeItemInvoiceDate() {
        originalFeeItemInvoiceDate = null;
    }

    /**
     * Internal Getter for DriverName.
     * Driver name embossed on the Card
     * @return Returns the Internal String
     */
    @JsonGetter("DriverName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDriverName() {
        return this.driverName;
    }

    /**
     * Getter for DriverName.
     * Driver name embossed on the Card
     * @return Returns the String
     */
    public String getDriverName() {
        return OptionalNullable.getFrom(driverName);
    }

    /**
     * Setter for DriverName.
     * Driver name embossed on the Card
     * @param driverName Value for String
     */
    @JsonSetter("DriverName")
    public void setDriverName(String driverName) {
        this.driverName = OptionalNullable.of(driverName);
    }

    /**
     * UnSetter for DriverName.
     * Driver name embossed on the Card
     */
    public void unsetDriverName() {
        driverName = null;
    }

    /**
     * Internal Getter for EmbossText.
     * Text embossed on the Card
     * @return Returns the Internal String
     */
    @JsonGetter("EmbossText")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmbossText() {
        return this.embossText;
    }

    /**
     * Getter for EmbossText.
     * Text embossed on the Card
     * @return Returns the String
     */
    public String getEmbossText() {
        return OptionalNullable.getFrom(embossText);
    }

    /**
     * Setter for EmbossText.
     * Text embossed on the Card
     * @param embossText Value for String
     */
    @JsonSetter("EmbossText")
    public void setEmbossText(String embossText) {
        this.embossText = OptionalNullable.of(embossText);
    }

    /**
     * UnSetter for EmbossText.
     * Text embossed on the Card
     */
    public void unsetEmbossText() {
        embossText = null;
    }

    /**
     * Internal Getter for VRN.
     * Reg. Number embossed on the Card
     * @return Returns the Internal String
     */
    @JsonGetter("VRN")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVRN() {
        return this.vRN;
    }

    /**
     * Getter for VRN.
     * Reg. Number embossed on the Card
     * @return Returns the String
     */
    public String getVRN() {
        return OptionalNullable.getFrom(vRN);
    }

    /**
     * Setter for VRN.
     * Reg. Number embossed on the Card
     * @param vRN Value for String
     */
    @JsonSetter("VRN")
    public void setVRN(String vRN) {
        this.vRN = OptionalNullable.of(vRN);
    }

    /**
     * UnSetter for VRN.
     * Reg. Number embossed on the Card
     */
    public void unsetVRN() {
        vRN = null;
    }

    /**
     * Converts this FeeItem into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FeeItem [" + "feeItemId=" + feeItemId + ", accountId=" + accountId
                + ", accountNumber=" + accountNumber + ", accountShortName=" + accountShortName
                + ", invoiceAccountId=" + invoiceAccountId + ", invoiceAccountNumber="
                + invoiceAccountNumber + ", invoiceAccountShortName=" + invoiceAccountShortName
                + ", payerId=" + payerId + ", payerNumber=" + payerNumber + ", payerShortName="
                + payerShortName + ", cardId=" + cardId + ", pAN=" + pAN + ", cardGroupId="
                + cardGroupId + ", cardGroupName=" + cardGroupName + ", feeTypeId=" + feeTypeId
                + ", feeType=" + feeType + ", feeTypeGroup=" + feeTypeGroup + ", feeRuleId="
                + feeRuleId + ", feeRuleDescription=" + feeRuleDescription + ", feeRuleTiers="
                + feeRuleTiers + ", feeItemDate=" + feeItemDate + ", feeItemTime=" + feeItemTime
                + ", isManual=" + isManual + ", isCancelled=" + isCancelled
                + ", customerCurrencyCode=" + customerCurrencyCode + ", customerCurrencySymbol="
                + customerCurrencySymbol + ", productId=" + productId + ", productCode="
                + productCode + ", productName=" + productName + ", productGroupId="
                + productGroupId + ", productGroupName=" + productGroupName
                + ", lineItemDescription=" + lineItemDescription + ", quantity=" + quantity
                + ", isInvoiced=" + isInvoiced + ", vATCountryCode=" + vATCountryCode
                + ", vATCountryName=" + vATCountryName + ", vATPercentage=" + vATPercentage
                + ", vATCategoryID=" + vATCategoryID + ", vATCategoryDescription="
                + vATCategoryDescription + ", legislativeRegionId=" + legislativeRegionId
                + ", legislativeRegionName=" + legislativeRegionName + ", systemEntryDate="
                + systemEntryDate + ", systemEntryTime=" + systemEntryTime + ", colCoNetAmount="
                + colCoNetAmount + ", colCoVATAmount=" + colCoVATAmount + ", colCoGrossAmount="
                + colCoGrossAmount + ", interimInvoiceId=" + interimInvoiceId
                + ", interimInvoiceNumber=" + interimInvoiceNumber + ", invoiceId=" + invoiceId
                + ", invoiceNumber=" + invoiceNumber + ", invoiceDate=" + invoiceDate
                + ", customerExchangeRate=" + customerExchangeRate + ", invoiceNetAmount="
                + invoiceNetAmount + ", invoiceGrossAmount=" + invoiceGrossAmount
                + ", invoiceVATAmount=" + invoiceVATAmount + ", reverseCharge=" + reverseCharge
                + ", originalFeeItemId=" + originalFeeItemId + ", originalCurrencyCode="
                + originalCurrencyCode + ", originalCurrencySymbol=" + originalCurrencySymbol
                + ", originalUnitPrice=" + originalUnitPrice + ", originalNetAmount="
                + originalNetAmount + ", originalVATAmount=" + originalVATAmount
                + ", originalGrossAmount=" + originalGrossAmount + ", originalExchangeRate="
                + originalExchangeRate + ", originalLegislativeRegionId="
                + originalLegislativeRegionId + ", originalLegislativeRegionName="
                + originalLegislativeRegionName + ", frequency=" + frequency
                + ", feeItemCardLevelBreakup=" + feeItemCardLevelBreakup
                + ", originalFeeItemInvoiceId=" + originalFeeItemInvoiceId
                + ", originalFeeItemInvoiceNumber=" + originalFeeItemInvoiceNumber
                + ", originalFeeItemInvoiceDate=" + originalFeeItemInvoiceDate + ", driverName="
                + driverName + ", embossText=" + embossText + ", vRN=" + vRN + "]";
    }

    /**
     * Builds a new {@link FeeItem.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FeeItem.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .feeRuleTiers(getFeeRuleTiers());
        builder.feeItemId = internalGetFeeItemId();
        builder.accountId = internalGetAccountId();
        builder.accountNumber = internalGetAccountNumber();
        builder.accountShortName = internalGetAccountShortName();
        builder.invoiceAccountId = internalGetInvoiceAccountId();
        builder.invoiceAccountNumber = internalGetInvoiceAccountNumber();
        builder.invoiceAccountShortName = internalGetInvoiceAccountShortName();
        builder.payerId = internalGetPayerId();
        builder.payerNumber = internalGetPayerNumber();
        builder.payerShortName = internalGetPayerShortName();
        builder.cardId = internalGetCardId();
        builder.pAN = internalGetPAN();
        builder.cardGroupId = internalGetCardGroupId();
        builder.cardGroupName = internalGetCardGroupName();
        builder.feeTypeId = internalGetFeeTypeId();
        builder.feeType = internalGetFeeType();
        builder.feeTypeGroup = internalGetFeeTypeGroup();
        builder.feeRuleId = internalGetFeeRuleId();
        builder.feeRuleDescription = internalGetFeeRuleDescription();
        builder.feeItemDate = internalGetFeeItemDate();
        builder.feeItemTime = internalGetFeeItemTime();
        builder.isManual = internalGetIsManual();
        builder.isCancelled = internalGetIsCancelled();
        builder.customerCurrencyCode = internalGetCustomerCurrencyCode();
        builder.customerCurrencySymbol = internalGetCustomerCurrencySymbol();
        builder.productId = internalGetProductId();
        builder.productCode = internalGetProductCode();
        builder.productName = internalGetProductName();
        builder.productGroupId = internalGetProductGroupId();
        builder.productGroupName = internalGetProductGroupName();
        builder.lineItemDescription = internalGetLineItemDescription();
        builder.quantity = internalGetQuantity();
        builder.isInvoiced = internalGetIsInvoiced();
        builder.vATCountryCode = internalGetVATCountryCode();
        builder.vATCountryName = internalGetVATCountryName();
        builder.vATPercentage = internalGetVATPercentage();
        builder.vATCategoryID = internalGetVATCategoryID();
        builder.vATCategoryDescription = internalGetVATCategoryDescription();
        builder.legislativeRegionId = internalGetLegislativeRegionId();
        builder.legislativeRegionName = internalGetLegislativeRegionName();
        builder.systemEntryDate = internalGetSystemEntryDate();
        builder.systemEntryTime = internalGetSystemEntryTime();
        builder.colCoNetAmount = internalGetColCoNetAmount();
        builder.colCoVATAmount = internalGetColCoVATAmount();
        builder.colCoGrossAmount = internalGetColCoGrossAmount();
        builder.interimInvoiceId = internalGetInterimInvoiceId();
        builder.interimInvoiceNumber = internalGetInterimInvoiceNumber();
        builder.invoiceId = internalGetInvoiceId();
        builder.invoiceNumber = internalGetInvoiceNumber();
        builder.invoiceDate = internalGetInvoiceDate();
        builder.customerExchangeRate = internalGetCustomerExchangeRate();
        builder.invoiceNetAmount = internalGetInvoiceNetAmount();
        builder.invoiceGrossAmount = internalGetInvoiceGrossAmount();
        builder.invoiceVATAmount = internalGetInvoiceVATAmount();
        builder.reverseCharge = internalGetReverseCharge();
        builder.originalFeeItemId = internalGetOriginalFeeItemId();
        builder.originalCurrencyCode = internalGetOriginalCurrencyCode();
        builder.originalCurrencySymbol = internalGetOriginalCurrencySymbol();
        builder.originalUnitPrice = internalGetOriginalUnitPrice();
        builder.originalNetAmount = internalGetOriginalNetAmount();
        builder.originalVATAmount = internalGetOriginalVATAmount();
        builder.originalGrossAmount = internalGetOriginalGrossAmount();
        builder.originalExchangeRate = internalGetOriginalExchangeRate();
        builder.originalLegislativeRegionId = internalGetOriginalLegislativeRegionId();
        builder.originalLegislativeRegionName = internalGetOriginalLegislativeRegionName();
        builder.frequency = internalGetFrequency();
        builder.feeItemCardLevelBreakup = internalGetFeeItemCardLevelBreakup();
        builder.originalFeeItemInvoiceId = internalGetOriginalFeeItemInvoiceId();
        builder.originalFeeItemInvoiceNumber = internalGetOriginalFeeItemInvoiceNumber();
        builder.originalFeeItemInvoiceDate = internalGetOriginalFeeItemInvoiceDate();
        builder.driverName = internalGetDriverName();
        builder.embossText = internalGetEmbossText();
        builder.vRN = internalGetVRN();
        return builder;
    }

    /**
     * Class to build instances of {@link FeeItem}.
     */
    public static class Builder {
        private OptionalNullable<Integer> feeItemId;
        private OptionalNullable<Integer> accountId;
        private OptionalNullable<String> accountNumber;
        private OptionalNullable<String> accountShortName;
        private OptionalNullable<Integer> invoiceAccountId;
        private OptionalNullable<String> invoiceAccountNumber;
        private OptionalNullable<String> invoiceAccountShortName;
        private OptionalNullable<Integer> payerId;
        private OptionalNullable<String> payerNumber;
        private OptionalNullable<String> payerShortName;
        private OptionalNullable<Integer> cardId;
        private OptionalNullable<String> pAN;
        private OptionalNullable<Integer> cardGroupId;
        private OptionalNullable<String> cardGroupName;
        private OptionalNullable<Integer> feeTypeId;
        private OptionalNullable<String> feeType;
        private OptionalNullable<String> feeTypeGroup;
        private OptionalNullable<Integer> feeRuleId;
        private OptionalNullable<String> feeRuleDescription;
        private List<FeesFeeRuleTiers> feeRuleTiers;
        private OptionalNullable<String> feeItemDate;
        private OptionalNullable<String> feeItemTime;
        private OptionalNullable<Boolean> isManual;
        private OptionalNullable<Boolean> isCancelled;
        private OptionalNullable<String> customerCurrencyCode;
        private OptionalNullable<String> customerCurrencySymbol;
        private OptionalNullable<Integer> productId;
        private OptionalNullable<String> productCode;
        private OptionalNullable<String> productName;
        private OptionalNullable<Integer> productGroupId;
        private OptionalNullable<String> productGroupName;
        private OptionalNullable<String> lineItemDescription;
        private OptionalNullable<Integer> quantity;
        private OptionalNullable<Boolean> isInvoiced;
        private OptionalNullable<String> vATCountryCode;
        private OptionalNullable<String> vATCountryName;
        private OptionalNullable<Double> vATPercentage;
        private OptionalNullable<Integer> vATCategoryID;
        private OptionalNullable<String> vATCategoryDescription;
        private OptionalNullable<Integer> legislativeRegionId;
        private OptionalNullable<String> legislativeRegionName;
        private OptionalNullable<String> systemEntryDate;
        private OptionalNullable<String> systemEntryTime;
        private OptionalNullable<Double> colCoNetAmount;
        private OptionalNullable<Double> colCoVATAmount;
        private OptionalNullable<Double> colCoGrossAmount;
        private OptionalNullable<Integer> interimInvoiceId;
        private OptionalNullable<String> interimInvoiceNumber;
        private OptionalNullable<Integer> invoiceId;
        private OptionalNullable<String> invoiceNumber;
        private OptionalNullable<String> invoiceDate;
        private OptionalNullable<Double> customerExchangeRate;
        private OptionalNullable<Double> invoiceNetAmount;
        private OptionalNullable<Double> invoiceGrossAmount;
        private OptionalNullable<Double> invoiceVATAmount;
        private OptionalNullable<Boolean> reverseCharge;
        private OptionalNullable<Integer> originalFeeItemId;
        private OptionalNullable<String> originalCurrencyCode;
        private OptionalNullable<String> originalCurrencySymbol;
        private OptionalNullable<Double> originalUnitPrice;
        private OptionalNullable<Double> originalNetAmount;
        private OptionalNullable<Double> originalVATAmount;
        private OptionalNullable<Double> originalGrossAmount;
        private OptionalNullable<Double> originalExchangeRate;
        private OptionalNullable<Integer> originalLegislativeRegionId;
        private OptionalNullable<String> originalLegislativeRegionName;
        private OptionalNullable<String> frequency;
        private OptionalNullable<String> feeItemCardLevelBreakup;
        private OptionalNullable<Integer> originalFeeItemInvoiceId;
        private OptionalNullable<String> originalFeeItemInvoiceNumber;
        private OptionalNullable<String> originalFeeItemInvoiceDate;
        private OptionalNullable<String> driverName;
        private OptionalNullable<String> embossText;
        private OptionalNullable<String> vRN;



        /**
         * Setter for feeItemId.
         * @param  feeItemId  Integer value for feeItemId.
         * @return Builder
         */
        public Builder feeItemId(Integer feeItemId) {
            this.feeItemId = OptionalNullable.of(feeItemId);
            return this;
        }

        /**
         * UnSetter for feeItemId.
         * @return Builder
         */
        public Builder unsetFeeItemId() {
            feeItemId = null;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  Integer value for accountId.
         * @return Builder
         */
        public Builder accountId(Integer accountId) {
            this.accountId = OptionalNullable.of(accountId);
            return this;
        }

        /**
         * UnSetter for accountId.
         * @return Builder
         */
        public Builder unsetAccountId() {
            accountId = null;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = OptionalNullable.of(accountNumber);
            return this;
        }

        /**
         * UnSetter for accountNumber.
         * @return Builder
         */
        public Builder unsetAccountNumber() {
            accountNumber = null;
            return this;
        }

        /**
         * Setter for accountShortName.
         * @param  accountShortName  String value for accountShortName.
         * @return Builder
         */
        public Builder accountShortName(String accountShortName) {
            this.accountShortName = OptionalNullable.of(accountShortName);
            return this;
        }

        /**
         * UnSetter for accountShortName.
         * @return Builder
         */
        public Builder unsetAccountShortName() {
            accountShortName = null;
            return this;
        }

        /**
         * Setter for invoiceAccountId.
         * @param  invoiceAccountId  Integer value for invoiceAccountId.
         * @return Builder
         */
        public Builder invoiceAccountId(Integer invoiceAccountId) {
            this.invoiceAccountId = OptionalNullable.of(invoiceAccountId);
            return this;
        }

        /**
         * UnSetter for invoiceAccountId.
         * @return Builder
         */
        public Builder unsetInvoiceAccountId() {
            invoiceAccountId = null;
            return this;
        }

        /**
         * Setter for invoiceAccountNumber.
         * @param  invoiceAccountNumber  String value for invoiceAccountNumber.
         * @return Builder
         */
        public Builder invoiceAccountNumber(String invoiceAccountNumber) {
            this.invoiceAccountNumber = OptionalNullable.of(invoiceAccountNumber);
            return this;
        }

        /**
         * UnSetter for invoiceAccountNumber.
         * @return Builder
         */
        public Builder unsetInvoiceAccountNumber() {
            invoiceAccountNumber = null;
            return this;
        }

        /**
         * Setter for invoiceAccountShortName.
         * @param  invoiceAccountShortName  String value for invoiceAccountShortName.
         * @return Builder
         */
        public Builder invoiceAccountShortName(String invoiceAccountShortName) {
            this.invoiceAccountShortName = OptionalNullable.of(invoiceAccountShortName);
            return this;
        }

        /**
         * UnSetter for invoiceAccountShortName.
         * @return Builder
         */
        public Builder unsetInvoiceAccountShortName() {
            invoiceAccountShortName = null;
            return this;
        }

        /**
         * Setter for payerId.
         * @param  payerId  Integer value for payerId.
         * @return Builder
         */
        public Builder payerId(Integer payerId) {
            this.payerId = OptionalNullable.of(payerId);
            return this;
        }

        /**
         * UnSetter for payerId.
         * @return Builder
         */
        public Builder unsetPayerId() {
            payerId = null;
            return this;
        }

        /**
         * Setter for payerNumber.
         * @param  payerNumber  String value for payerNumber.
         * @return Builder
         */
        public Builder payerNumber(String payerNumber) {
            this.payerNumber = OptionalNullable.of(payerNumber);
            return this;
        }

        /**
         * UnSetter for payerNumber.
         * @return Builder
         */
        public Builder unsetPayerNumber() {
            payerNumber = null;
            return this;
        }

        /**
         * Setter for payerShortName.
         * @param  payerShortName  String value for payerShortName.
         * @return Builder
         */
        public Builder payerShortName(String payerShortName) {
            this.payerShortName = OptionalNullable.of(payerShortName);
            return this;
        }

        /**
         * UnSetter for payerShortName.
         * @return Builder
         */
        public Builder unsetPayerShortName() {
            payerShortName = null;
            return this;
        }

        /**
         * Setter for cardId.
         * @param  cardId  Integer value for cardId.
         * @return Builder
         */
        public Builder cardId(Integer cardId) {
            this.cardId = OptionalNullable.of(cardId);
            return this;
        }

        /**
         * UnSetter for cardId.
         * @return Builder
         */
        public Builder unsetCardId() {
            cardId = null;
            return this;
        }

        /**
         * Setter for pAN.
         * @param  pAN  String value for pAN.
         * @return Builder
         */
        public Builder pAN(String pAN) {
            this.pAN = OptionalNullable.of(pAN);
            return this;
        }

        /**
         * UnSetter for pAN.
         * @return Builder
         */
        public Builder unsetPAN() {
            pAN = null;
            return this;
        }

        /**
         * Setter for cardGroupId.
         * @param  cardGroupId  Integer value for cardGroupId.
         * @return Builder
         */
        public Builder cardGroupId(Integer cardGroupId) {
            this.cardGroupId = OptionalNullable.of(cardGroupId);
            return this;
        }

        /**
         * UnSetter for cardGroupId.
         * @return Builder
         */
        public Builder unsetCardGroupId() {
            cardGroupId = null;
            return this;
        }

        /**
         * Setter for cardGroupName.
         * @param  cardGroupName  String value for cardGroupName.
         * @return Builder
         */
        public Builder cardGroupName(String cardGroupName) {
            this.cardGroupName = OptionalNullable.of(cardGroupName);
            return this;
        }

        /**
         * UnSetter for cardGroupName.
         * @return Builder
         */
        public Builder unsetCardGroupName() {
            cardGroupName = null;
            return this;
        }

        /**
         * Setter for feeTypeId.
         * @param  feeTypeId  Integer value for feeTypeId.
         * @return Builder
         */
        public Builder feeTypeId(Integer feeTypeId) {
            this.feeTypeId = OptionalNullable.of(feeTypeId);
            return this;
        }

        /**
         * UnSetter for feeTypeId.
         * @return Builder
         */
        public Builder unsetFeeTypeId() {
            feeTypeId = null;
            return this;
        }

        /**
         * Setter for feeType.
         * @param  feeType  String value for feeType.
         * @return Builder
         */
        public Builder feeType(String feeType) {
            this.feeType = OptionalNullable.of(feeType);
            return this;
        }

        /**
         * UnSetter for feeType.
         * @return Builder
         */
        public Builder unsetFeeType() {
            feeType = null;
            return this;
        }

        /**
         * Setter for feeTypeGroup.
         * @param  feeTypeGroup  String value for feeTypeGroup.
         * @return Builder
         */
        public Builder feeTypeGroup(String feeTypeGroup) {
            this.feeTypeGroup = OptionalNullable.of(feeTypeGroup);
            return this;
        }

        /**
         * UnSetter for feeTypeGroup.
         * @return Builder
         */
        public Builder unsetFeeTypeGroup() {
            feeTypeGroup = null;
            return this;
        }

        /**
         * Setter for feeRuleId.
         * @param  feeRuleId  Integer value for feeRuleId.
         * @return Builder
         */
        public Builder feeRuleId(Integer feeRuleId) {
            this.feeRuleId = OptionalNullable.of(feeRuleId);
            return this;
        }

        /**
         * UnSetter for feeRuleId.
         * @return Builder
         */
        public Builder unsetFeeRuleId() {
            feeRuleId = null;
            return this;
        }

        /**
         * Setter for feeRuleDescription.
         * @param  feeRuleDescription  String value for feeRuleDescription.
         * @return Builder
         */
        public Builder feeRuleDescription(String feeRuleDescription) {
            this.feeRuleDescription = OptionalNullable.of(feeRuleDescription);
            return this;
        }

        /**
         * UnSetter for feeRuleDescription.
         * @return Builder
         */
        public Builder unsetFeeRuleDescription() {
            feeRuleDescription = null;
            return this;
        }

        /**
         * Setter for feeRuleTiers.
         * @param  feeRuleTiers  List of FeesFeeRuleTiers value for feeRuleTiers.
         * @return Builder
         */
        public Builder feeRuleTiers(List<FeesFeeRuleTiers> feeRuleTiers) {
            this.feeRuleTiers = feeRuleTiers;
            return this;
        }

        /**
         * Setter for feeItemDate.
         * @param  feeItemDate  String value for feeItemDate.
         * @return Builder
         */
        public Builder feeItemDate(String feeItemDate) {
            this.feeItemDate = OptionalNullable.of(feeItemDate);
            return this;
        }

        /**
         * UnSetter for feeItemDate.
         * @return Builder
         */
        public Builder unsetFeeItemDate() {
            feeItemDate = null;
            return this;
        }

        /**
         * Setter for feeItemTime.
         * @param  feeItemTime  String value for feeItemTime.
         * @return Builder
         */
        public Builder feeItemTime(String feeItemTime) {
            this.feeItemTime = OptionalNullable.of(feeItemTime);
            return this;
        }

        /**
         * UnSetter for feeItemTime.
         * @return Builder
         */
        public Builder unsetFeeItemTime() {
            feeItemTime = null;
            return this;
        }

        /**
         * Setter for isManual.
         * @param  isManual  Boolean value for isManual.
         * @return Builder
         */
        public Builder isManual(Boolean isManual) {
            this.isManual = OptionalNullable.of(isManual);
            return this;
        }

        /**
         * UnSetter for isManual.
         * @return Builder
         */
        public Builder unsetIsManual() {
            isManual = null;
            return this;
        }

        /**
         * Setter for isCancelled.
         * @param  isCancelled  Boolean value for isCancelled.
         * @return Builder
         */
        public Builder isCancelled(Boolean isCancelled) {
            this.isCancelled = OptionalNullable.of(isCancelled);
            return this;
        }

        /**
         * UnSetter for isCancelled.
         * @return Builder
         */
        public Builder unsetIsCancelled() {
            isCancelled = null;
            return this;
        }

        /**
         * Setter for customerCurrencyCode.
         * @param  customerCurrencyCode  String value for customerCurrencyCode.
         * @return Builder
         */
        public Builder customerCurrencyCode(String customerCurrencyCode) {
            this.customerCurrencyCode = OptionalNullable.of(customerCurrencyCode);
            return this;
        }

        /**
         * UnSetter for customerCurrencyCode.
         * @return Builder
         */
        public Builder unsetCustomerCurrencyCode() {
            customerCurrencyCode = null;
            return this;
        }

        /**
         * Setter for customerCurrencySymbol.
         * @param  customerCurrencySymbol  String value for customerCurrencySymbol.
         * @return Builder
         */
        public Builder customerCurrencySymbol(String customerCurrencySymbol) {
            this.customerCurrencySymbol = OptionalNullable.of(customerCurrencySymbol);
            return this;
        }

        /**
         * UnSetter for customerCurrencySymbol.
         * @return Builder
         */
        public Builder unsetCustomerCurrencySymbol() {
            customerCurrencySymbol = null;
            return this;
        }

        /**
         * Setter for productId.
         * @param  productId  Integer value for productId.
         * @return Builder
         */
        public Builder productId(Integer productId) {
            this.productId = OptionalNullable.of(productId);
            return this;
        }

        /**
         * UnSetter for productId.
         * @return Builder
         */
        public Builder unsetProductId() {
            productId = null;
            return this;
        }

        /**
         * Setter for productCode.
         * @param  productCode  String value for productCode.
         * @return Builder
         */
        public Builder productCode(String productCode) {
            this.productCode = OptionalNullable.of(productCode);
            return this;
        }

        /**
         * UnSetter for productCode.
         * @return Builder
         */
        public Builder unsetProductCode() {
            productCode = null;
            return this;
        }

        /**
         * Setter for productName.
         * @param  productName  String value for productName.
         * @return Builder
         */
        public Builder productName(String productName) {
            this.productName = OptionalNullable.of(productName);
            return this;
        }

        /**
         * UnSetter for productName.
         * @return Builder
         */
        public Builder unsetProductName() {
            productName = null;
            return this;
        }

        /**
         * Setter for productGroupId.
         * @param  productGroupId  Integer value for productGroupId.
         * @return Builder
         */
        public Builder productGroupId(Integer productGroupId) {
            this.productGroupId = OptionalNullable.of(productGroupId);
            return this;
        }

        /**
         * UnSetter for productGroupId.
         * @return Builder
         */
        public Builder unsetProductGroupId() {
            productGroupId = null;
            return this;
        }

        /**
         * Setter for productGroupName.
         * @param  productGroupName  String value for productGroupName.
         * @return Builder
         */
        public Builder productGroupName(String productGroupName) {
            this.productGroupName = OptionalNullable.of(productGroupName);
            return this;
        }

        /**
         * UnSetter for productGroupName.
         * @return Builder
         */
        public Builder unsetProductGroupName() {
            productGroupName = null;
            return this;
        }

        /**
         * Setter for lineItemDescription.
         * @param  lineItemDescription  String value for lineItemDescription.
         * @return Builder
         */
        public Builder lineItemDescription(String lineItemDescription) {
            this.lineItemDescription = OptionalNullable.of(lineItemDescription);
            return this;
        }

        /**
         * UnSetter for lineItemDescription.
         * @return Builder
         */
        public Builder unsetLineItemDescription() {
            lineItemDescription = null;
            return this;
        }

        /**
         * Setter for quantity.
         * @param  quantity  Integer value for quantity.
         * @return Builder
         */
        public Builder quantity(Integer quantity) {
            this.quantity = OptionalNullable.of(quantity);
            return this;
        }

        /**
         * UnSetter for quantity.
         * @return Builder
         */
        public Builder unsetQuantity() {
            quantity = null;
            return this;
        }

        /**
         * Setter for isInvoiced.
         * @param  isInvoiced  Boolean value for isInvoiced.
         * @return Builder
         */
        public Builder isInvoiced(Boolean isInvoiced) {
            this.isInvoiced = OptionalNullable.of(isInvoiced);
            return this;
        }

        /**
         * UnSetter for isInvoiced.
         * @return Builder
         */
        public Builder unsetIsInvoiced() {
            isInvoiced = null;
            return this;
        }

        /**
         * Setter for vATCountryCode.
         * @param  vATCountryCode  String value for vATCountryCode.
         * @return Builder
         */
        public Builder vATCountryCode(String vATCountryCode) {
            this.vATCountryCode = OptionalNullable.of(vATCountryCode);
            return this;
        }

        /**
         * UnSetter for vATCountryCode.
         * @return Builder
         */
        public Builder unsetVATCountryCode() {
            vATCountryCode = null;
            return this;
        }

        /**
         * Setter for vATCountryName.
         * @param  vATCountryName  String value for vATCountryName.
         * @return Builder
         */
        public Builder vATCountryName(String vATCountryName) {
            this.vATCountryName = OptionalNullable.of(vATCountryName);
            return this;
        }

        /**
         * UnSetter for vATCountryName.
         * @return Builder
         */
        public Builder unsetVATCountryName() {
            vATCountryName = null;
            return this;
        }

        /**
         * Setter for vATPercentage.
         * @param  vATPercentage  Double value for vATPercentage.
         * @return Builder
         */
        public Builder vATPercentage(Double vATPercentage) {
            this.vATPercentage = OptionalNullable.of(vATPercentage);
            return this;
        }

        /**
         * UnSetter for vATPercentage.
         * @return Builder
         */
        public Builder unsetVATPercentage() {
            vATPercentage = null;
            return this;
        }

        /**
         * Setter for vATCategoryID.
         * @param  vATCategoryID  Integer value for vATCategoryID.
         * @return Builder
         */
        public Builder vATCategoryID(Integer vATCategoryID) {
            this.vATCategoryID = OptionalNullable.of(vATCategoryID);
            return this;
        }

        /**
         * UnSetter for vATCategoryID.
         * @return Builder
         */
        public Builder unsetVATCategoryID() {
            vATCategoryID = null;
            return this;
        }

        /**
         * Setter for vATCategoryDescription.
         * @param  vATCategoryDescription  String value for vATCategoryDescription.
         * @return Builder
         */
        public Builder vATCategoryDescription(String vATCategoryDescription) {
            this.vATCategoryDescription = OptionalNullable.of(vATCategoryDescription);
            return this;
        }

        /**
         * UnSetter for vATCategoryDescription.
         * @return Builder
         */
        public Builder unsetVATCategoryDescription() {
            vATCategoryDescription = null;
            return this;
        }

        /**
         * Setter for legislativeRegionId.
         * @param  legislativeRegionId  Integer value for legislativeRegionId.
         * @return Builder
         */
        public Builder legislativeRegionId(Integer legislativeRegionId) {
            this.legislativeRegionId = OptionalNullable.of(legislativeRegionId);
            return this;
        }

        /**
         * UnSetter for legislativeRegionId.
         * @return Builder
         */
        public Builder unsetLegislativeRegionId() {
            legislativeRegionId = null;
            return this;
        }

        /**
         * Setter for legislativeRegionName.
         * @param  legislativeRegionName  String value for legislativeRegionName.
         * @return Builder
         */
        public Builder legislativeRegionName(String legislativeRegionName) {
            this.legislativeRegionName = OptionalNullable.of(legislativeRegionName);
            return this;
        }

        /**
         * UnSetter for legislativeRegionName.
         * @return Builder
         */
        public Builder unsetLegislativeRegionName() {
            legislativeRegionName = null;
            return this;
        }

        /**
         * Setter for systemEntryDate.
         * @param  systemEntryDate  String value for systemEntryDate.
         * @return Builder
         */
        public Builder systemEntryDate(String systemEntryDate) {
            this.systemEntryDate = OptionalNullable.of(systemEntryDate);
            return this;
        }

        /**
         * UnSetter for systemEntryDate.
         * @return Builder
         */
        public Builder unsetSystemEntryDate() {
            systemEntryDate = null;
            return this;
        }

        /**
         * Setter for systemEntryTime.
         * @param  systemEntryTime  String value for systemEntryTime.
         * @return Builder
         */
        public Builder systemEntryTime(String systemEntryTime) {
            this.systemEntryTime = OptionalNullable.of(systemEntryTime);
            return this;
        }

        /**
         * UnSetter for systemEntryTime.
         * @return Builder
         */
        public Builder unsetSystemEntryTime() {
            systemEntryTime = null;
            return this;
        }

        /**
         * Setter for colCoNetAmount.
         * @param  colCoNetAmount  Double value for colCoNetAmount.
         * @return Builder
         */
        public Builder colCoNetAmount(Double colCoNetAmount) {
            this.colCoNetAmount = OptionalNullable.of(colCoNetAmount);
            return this;
        }

        /**
         * UnSetter for colCoNetAmount.
         * @return Builder
         */
        public Builder unsetColCoNetAmount() {
            colCoNetAmount = null;
            return this;
        }

        /**
         * Setter for colCoVATAmount.
         * @param  colCoVATAmount  Double value for colCoVATAmount.
         * @return Builder
         */
        public Builder colCoVATAmount(Double colCoVATAmount) {
            this.colCoVATAmount = OptionalNullable.of(colCoVATAmount);
            return this;
        }

        /**
         * UnSetter for colCoVATAmount.
         * @return Builder
         */
        public Builder unsetColCoVATAmount() {
            colCoVATAmount = null;
            return this;
        }

        /**
         * Setter for colCoGrossAmount.
         * @param  colCoGrossAmount  Double value for colCoGrossAmount.
         * @return Builder
         */
        public Builder colCoGrossAmount(Double colCoGrossAmount) {
            this.colCoGrossAmount = OptionalNullable.of(colCoGrossAmount);
            return this;
        }

        /**
         * UnSetter for colCoGrossAmount.
         * @return Builder
         */
        public Builder unsetColCoGrossAmount() {
            colCoGrossAmount = null;
            return this;
        }

        /**
         * Setter for interimInvoiceId.
         * @param  interimInvoiceId  Integer value for interimInvoiceId.
         * @return Builder
         */
        public Builder interimInvoiceId(Integer interimInvoiceId) {
            this.interimInvoiceId = OptionalNullable.of(interimInvoiceId);
            return this;
        }

        /**
         * UnSetter for interimInvoiceId.
         * @return Builder
         */
        public Builder unsetInterimInvoiceId() {
            interimInvoiceId = null;
            return this;
        }

        /**
         * Setter for interimInvoiceNumber.
         * @param  interimInvoiceNumber  String value for interimInvoiceNumber.
         * @return Builder
         */
        public Builder interimInvoiceNumber(String interimInvoiceNumber) {
            this.interimInvoiceNumber = OptionalNullable.of(interimInvoiceNumber);
            return this;
        }

        /**
         * UnSetter for interimInvoiceNumber.
         * @return Builder
         */
        public Builder unsetInterimInvoiceNumber() {
            interimInvoiceNumber = null;
            return this;
        }

        /**
         * Setter for invoiceId.
         * @param  invoiceId  Integer value for invoiceId.
         * @return Builder
         */
        public Builder invoiceId(Integer invoiceId) {
            this.invoiceId = OptionalNullable.of(invoiceId);
            return this;
        }

        /**
         * UnSetter for invoiceId.
         * @return Builder
         */
        public Builder unsetInvoiceId() {
            invoiceId = null;
            return this;
        }

        /**
         * Setter for invoiceNumber.
         * @param  invoiceNumber  String value for invoiceNumber.
         * @return Builder
         */
        public Builder invoiceNumber(String invoiceNumber) {
            this.invoiceNumber = OptionalNullable.of(invoiceNumber);
            return this;
        }

        /**
         * UnSetter for invoiceNumber.
         * @return Builder
         */
        public Builder unsetInvoiceNumber() {
            invoiceNumber = null;
            return this;
        }

        /**
         * Setter for invoiceDate.
         * @param  invoiceDate  String value for invoiceDate.
         * @return Builder
         */
        public Builder invoiceDate(String invoiceDate) {
            this.invoiceDate = OptionalNullable.of(invoiceDate);
            return this;
        }

        /**
         * UnSetter for invoiceDate.
         * @return Builder
         */
        public Builder unsetInvoiceDate() {
            invoiceDate = null;
            return this;
        }

        /**
         * Setter for customerExchangeRate.
         * @param  customerExchangeRate  Double value for customerExchangeRate.
         * @return Builder
         */
        public Builder customerExchangeRate(Double customerExchangeRate) {
            this.customerExchangeRate = OptionalNullable.of(customerExchangeRate);
            return this;
        }

        /**
         * UnSetter for customerExchangeRate.
         * @return Builder
         */
        public Builder unsetCustomerExchangeRate() {
            customerExchangeRate = null;
            return this;
        }

        /**
         * Setter for invoiceNetAmount.
         * @param  invoiceNetAmount  Double value for invoiceNetAmount.
         * @return Builder
         */
        public Builder invoiceNetAmount(Double invoiceNetAmount) {
            this.invoiceNetAmount = OptionalNullable.of(invoiceNetAmount);
            return this;
        }

        /**
         * UnSetter for invoiceNetAmount.
         * @return Builder
         */
        public Builder unsetInvoiceNetAmount() {
            invoiceNetAmount = null;
            return this;
        }

        /**
         * Setter for invoiceGrossAmount.
         * @param  invoiceGrossAmount  Double value for invoiceGrossAmount.
         * @return Builder
         */
        public Builder invoiceGrossAmount(Double invoiceGrossAmount) {
            this.invoiceGrossAmount = OptionalNullable.of(invoiceGrossAmount);
            return this;
        }

        /**
         * UnSetter for invoiceGrossAmount.
         * @return Builder
         */
        public Builder unsetInvoiceGrossAmount() {
            invoiceGrossAmount = null;
            return this;
        }

        /**
         * Setter for invoiceVATAmount.
         * @param  invoiceVATAmount  Double value for invoiceVATAmount.
         * @return Builder
         */
        public Builder invoiceVATAmount(Double invoiceVATAmount) {
            this.invoiceVATAmount = OptionalNullable.of(invoiceVATAmount);
            return this;
        }

        /**
         * UnSetter for invoiceVATAmount.
         * @return Builder
         */
        public Builder unsetInvoiceVATAmount() {
            invoiceVATAmount = null;
            return this;
        }

        /**
         * Setter for reverseCharge.
         * @param  reverseCharge  Boolean value for reverseCharge.
         * @return Builder
         */
        public Builder reverseCharge(Boolean reverseCharge) {
            this.reverseCharge = OptionalNullable.of(reverseCharge);
            return this;
        }

        /**
         * UnSetter for reverseCharge.
         * @return Builder
         */
        public Builder unsetReverseCharge() {
            reverseCharge = null;
            return this;
        }

        /**
         * Setter for originalFeeItemId.
         * @param  originalFeeItemId  Integer value for originalFeeItemId.
         * @return Builder
         */
        public Builder originalFeeItemId(Integer originalFeeItemId) {
            this.originalFeeItemId = OptionalNullable.of(originalFeeItemId);
            return this;
        }

        /**
         * UnSetter for originalFeeItemId.
         * @return Builder
         */
        public Builder unsetOriginalFeeItemId() {
            originalFeeItemId = null;
            return this;
        }

        /**
         * Setter for originalCurrencyCode.
         * @param  originalCurrencyCode  String value for originalCurrencyCode.
         * @return Builder
         */
        public Builder originalCurrencyCode(String originalCurrencyCode) {
            this.originalCurrencyCode = OptionalNullable.of(originalCurrencyCode);
            return this;
        }

        /**
         * UnSetter for originalCurrencyCode.
         * @return Builder
         */
        public Builder unsetOriginalCurrencyCode() {
            originalCurrencyCode = null;
            return this;
        }

        /**
         * Setter for originalCurrencySymbol.
         * @param  originalCurrencySymbol  String value for originalCurrencySymbol.
         * @return Builder
         */
        public Builder originalCurrencySymbol(String originalCurrencySymbol) {
            this.originalCurrencySymbol = OptionalNullable.of(originalCurrencySymbol);
            return this;
        }

        /**
         * UnSetter for originalCurrencySymbol.
         * @return Builder
         */
        public Builder unsetOriginalCurrencySymbol() {
            originalCurrencySymbol = null;
            return this;
        }

        /**
         * Setter for originalUnitPrice.
         * @param  originalUnitPrice  Double value for originalUnitPrice.
         * @return Builder
         */
        public Builder originalUnitPrice(Double originalUnitPrice) {
            this.originalUnitPrice = OptionalNullable.of(originalUnitPrice);
            return this;
        }

        /**
         * UnSetter for originalUnitPrice.
         * @return Builder
         */
        public Builder unsetOriginalUnitPrice() {
            originalUnitPrice = null;
            return this;
        }

        /**
         * Setter for originalNetAmount.
         * @param  originalNetAmount  Double value for originalNetAmount.
         * @return Builder
         */
        public Builder originalNetAmount(Double originalNetAmount) {
            this.originalNetAmount = OptionalNullable.of(originalNetAmount);
            return this;
        }

        /**
         * UnSetter for originalNetAmount.
         * @return Builder
         */
        public Builder unsetOriginalNetAmount() {
            originalNetAmount = null;
            return this;
        }

        /**
         * Setter for originalVATAmount.
         * @param  originalVATAmount  Double value for originalVATAmount.
         * @return Builder
         */
        public Builder originalVATAmount(Double originalVATAmount) {
            this.originalVATAmount = OptionalNullable.of(originalVATAmount);
            return this;
        }

        /**
         * UnSetter for originalVATAmount.
         * @return Builder
         */
        public Builder unsetOriginalVATAmount() {
            originalVATAmount = null;
            return this;
        }

        /**
         * Setter for originalGrossAmount.
         * @param  originalGrossAmount  Double value for originalGrossAmount.
         * @return Builder
         */
        public Builder originalGrossAmount(Double originalGrossAmount) {
            this.originalGrossAmount = OptionalNullable.of(originalGrossAmount);
            return this;
        }

        /**
         * UnSetter for originalGrossAmount.
         * @return Builder
         */
        public Builder unsetOriginalGrossAmount() {
            originalGrossAmount = null;
            return this;
        }

        /**
         * Setter for originalExchangeRate.
         * @param  originalExchangeRate  Double value for originalExchangeRate.
         * @return Builder
         */
        public Builder originalExchangeRate(Double originalExchangeRate) {
            this.originalExchangeRate = OptionalNullable.of(originalExchangeRate);
            return this;
        }

        /**
         * UnSetter for originalExchangeRate.
         * @return Builder
         */
        public Builder unsetOriginalExchangeRate() {
            originalExchangeRate = null;
            return this;
        }

        /**
         * Setter for originalLegislativeRegionId.
         * @param  originalLegislativeRegionId  Integer value for originalLegislativeRegionId.
         * @return Builder
         */
        public Builder originalLegislativeRegionId(Integer originalLegislativeRegionId) {
            this.originalLegislativeRegionId = OptionalNullable.of(originalLegislativeRegionId);
            return this;
        }

        /**
         * UnSetter for originalLegislativeRegionId.
         * @return Builder
         */
        public Builder unsetOriginalLegislativeRegionId() {
            originalLegislativeRegionId = null;
            return this;
        }

        /**
         * Setter for originalLegislativeRegionName.
         * @param  originalLegislativeRegionName  String value for originalLegislativeRegionName.
         * @return Builder
         */
        public Builder originalLegislativeRegionName(String originalLegislativeRegionName) {
            this.originalLegislativeRegionName = OptionalNullable.of(originalLegislativeRegionName);
            return this;
        }

        /**
         * UnSetter for originalLegislativeRegionName.
         * @return Builder
         */
        public Builder unsetOriginalLegislativeRegionName() {
            originalLegislativeRegionName = null;
            return this;
        }

        /**
         * Setter for frequency.
         * @param  frequency  String value for frequency.
         * @return Builder
         */
        public Builder frequency(String frequency) {
            this.frequency = OptionalNullable.of(frequency);
            return this;
        }

        /**
         * UnSetter for frequency.
         * @return Builder
         */
        public Builder unsetFrequency() {
            frequency = null;
            return this;
        }

        /**
         * Setter for feeItemCardLevelBreakup.
         * @param  feeItemCardLevelBreakup  String value for feeItemCardLevelBreakup.
         * @return Builder
         */
        public Builder feeItemCardLevelBreakup(String feeItemCardLevelBreakup) {
            this.feeItemCardLevelBreakup = OptionalNullable.of(feeItemCardLevelBreakup);
            return this;
        }

        /**
         * UnSetter for feeItemCardLevelBreakup.
         * @return Builder
         */
        public Builder unsetFeeItemCardLevelBreakup() {
            feeItemCardLevelBreakup = null;
            return this;
        }

        /**
         * Setter for originalFeeItemInvoiceId.
         * @param  originalFeeItemInvoiceId  Integer value for originalFeeItemInvoiceId.
         * @return Builder
         */
        public Builder originalFeeItemInvoiceId(Integer originalFeeItemInvoiceId) {
            this.originalFeeItemInvoiceId = OptionalNullable.of(originalFeeItemInvoiceId);
            return this;
        }

        /**
         * UnSetter for originalFeeItemInvoiceId.
         * @return Builder
         */
        public Builder unsetOriginalFeeItemInvoiceId() {
            originalFeeItemInvoiceId = null;
            return this;
        }

        /**
         * Setter for originalFeeItemInvoiceNumber.
         * @param  originalFeeItemInvoiceNumber  String value for originalFeeItemInvoiceNumber.
         * @return Builder
         */
        public Builder originalFeeItemInvoiceNumber(String originalFeeItemInvoiceNumber) {
            this.originalFeeItemInvoiceNumber = OptionalNullable.of(originalFeeItemInvoiceNumber);
            return this;
        }

        /**
         * UnSetter for originalFeeItemInvoiceNumber.
         * @return Builder
         */
        public Builder unsetOriginalFeeItemInvoiceNumber() {
            originalFeeItemInvoiceNumber = null;
            return this;
        }

        /**
         * Setter for originalFeeItemInvoiceDate.
         * @param  originalFeeItemInvoiceDate  String value for originalFeeItemInvoiceDate.
         * @return Builder
         */
        public Builder originalFeeItemInvoiceDate(String originalFeeItemInvoiceDate) {
            this.originalFeeItemInvoiceDate = OptionalNullable.of(originalFeeItemInvoiceDate);
            return this;
        }

        /**
         * UnSetter for originalFeeItemInvoiceDate.
         * @return Builder
         */
        public Builder unsetOriginalFeeItemInvoiceDate() {
            originalFeeItemInvoiceDate = null;
            return this;
        }

        /**
         * Setter for driverName.
         * @param  driverName  String value for driverName.
         * @return Builder
         */
        public Builder driverName(String driverName) {
            this.driverName = OptionalNullable.of(driverName);
            return this;
        }

        /**
         * UnSetter for driverName.
         * @return Builder
         */
        public Builder unsetDriverName() {
            driverName = null;
            return this;
        }

        /**
         * Setter for embossText.
         * @param  embossText  String value for embossText.
         * @return Builder
         */
        public Builder embossText(String embossText) {
            this.embossText = OptionalNullable.of(embossText);
            return this;
        }

        /**
         * UnSetter for embossText.
         * @return Builder
         */
        public Builder unsetEmbossText() {
            embossText = null;
            return this;
        }

        /**
         * Setter for vRN.
         * @param  vRN  String value for vRN.
         * @return Builder
         */
        public Builder vRN(String vRN) {
            this.vRN = OptionalNullable.of(vRN);
            return this;
        }

        /**
         * UnSetter for vRN.
         * @return Builder
         */
        public Builder unsetVRN() {
            vRN = null;
            return this;
        }

        /**
         * Builds a new {@link FeeItem} object using the set fields.
         * @return {@link FeeItem}
         */
        public FeeItem build() {
            return new FeeItem(feeItemId, accountId, accountNumber, accountShortName,
                    invoiceAccountId, invoiceAccountNumber, invoiceAccountShortName, payerId,
                    payerNumber, payerShortName, cardId, pAN, cardGroupId, cardGroupName, feeTypeId,
                    feeType, feeTypeGroup, feeRuleId, feeRuleDescription, feeRuleTiers, feeItemDate,
                    feeItemTime, isManual, isCancelled, customerCurrencyCode,
                    customerCurrencySymbol, productId, productCode, productName, productGroupId,
                    productGroupName, lineItemDescription, quantity, isInvoiced, vATCountryCode,
                    vATCountryName, vATPercentage, vATCategoryID, vATCategoryDescription,
                    legislativeRegionId, legislativeRegionName, systemEntryDate, systemEntryTime,
                    colCoNetAmount, colCoVATAmount, colCoGrossAmount, interimInvoiceId,
                    interimInvoiceNumber, invoiceId, invoiceNumber, invoiceDate,
                    customerExchangeRate, invoiceNetAmount, invoiceGrossAmount, invoiceVATAmount,
                    reverseCharge, originalFeeItemId, originalCurrencyCode, originalCurrencySymbol,
                    originalUnitPrice, originalNetAmount, originalVATAmount, originalGrossAmount,
                    originalExchangeRate, originalLegislativeRegionId,
                    originalLegislativeRegionName, frequency, feeItemCardLevelBreakup,
                    originalFeeItemInvoiceId, originalFeeItemInvoiceNumber,
                    originalFeeItemInvoiceDate, driverName, embossText, vRN);
        }
    }
}
