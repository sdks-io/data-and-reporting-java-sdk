/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for UpdateOdometer type.
 */
public class UpdateOdometer {
    private String salesItemId;
    private Integer newOdometerValue;

    /**
     * Default constructor.
     */
    public UpdateOdometer() {
    }

    /**
     * Initialization constructor.
     * @param  salesItemId  String value for salesItemId.
     * @param  newOdometerValue  Integer value for newOdometerValue.
     */
    public UpdateOdometer(
            String salesItemId,
            Integer newOdometerValue) {
        this.salesItemId = salesItemId;
        this.newOdometerValue = newOdometerValue;
    }

    /**
     * Getter for SalesItemId.
     * Unique SalesItemId (Either Billed on Unbilled) Mandatory
     * @return Returns the String
     */
    @JsonGetter("SalesItemId")
    public String getSalesItemId() {
        return salesItemId;
    }

    /**
     * Setter for SalesItemId.
     * Unique SalesItemId (Either Billed on Unbilled) Mandatory
     * @param salesItemId Value for String
     */
    @JsonSetter("SalesItemId")
    public void setSalesItemId(String salesItemId) {
        this.salesItemId = salesItemId;
    }

    /**
     * Getter for NewOdometerValue.
     * NewOdometerValue that needs to be updated
     * @return Returns the Integer
     */
    @JsonGetter("NewOdometerValue")
    public Integer getNewOdometerValue() {
        return newOdometerValue;
    }

    /**
     * Setter for NewOdometerValue.
     * NewOdometerValue that needs to be updated
     * @param newOdometerValue Value for Integer
     */
    @JsonSetter("NewOdometerValue")
    public void setNewOdometerValue(Integer newOdometerValue) {
        this.newOdometerValue = newOdometerValue;
    }

    /**
     * Converts this UpdateOdometer into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdateOdometer [" + "salesItemId=" + salesItemId + ", newOdometerValue="
                + newOdometerValue + "]";
    }

    /**
     * Builds a new {@link UpdateOdometer.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdateOdometer.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(salesItemId, newOdometerValue);
        return builder;
    }

    /**
     * Class to build instances of {@link UpdateOdometer}.
     */
    public static class Builder {
        private String salesItemId;
        private Integer newOdometerValue;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  salesItemId  String value for salesItemId.
         * @param  newOdometerValue  Integer value for newOdometerValue.
         */
        public Builder(String salesItemId, Integer newOdometerValue) {
            this.salesItemId = salesItemId;
            this.newOdometerValue = newOdometerValue;
        }

        /**
         * Setter for salesItemId.
         * @param  salesItemId  String value for salesItemId.
         * @return Builder
         */
        public Builder salesItemId(String salesItemId) {
            this.salesItemId = salesItemId;
            return this;
        }

        /**
         * Setter for newOdometerValue.
         * @param  newOdometerValue  Integer value for newOdometerValue.
         * @return Builder
         */
        public Builder newOdometerValue(Integer newOdometerValue) {
            this.newOdometerValue = newOdometerValue;
            return this;
        }

        /**
         * Builds a new {@link UpdateOdometer} object using the set fields.
         * @return {@link UpdateOdometer}
         */
        public UpdateOdometer build() {
            return new UpdateOdometer(salesItemId, newOdometerValue);
        }
    }
}
