/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for InvoiceSearchRequest type.
 */
public class InvoiceSearchRequest {
    private InvoiceSearchRequestFilters filters;
    private Integer pageSize;
    private Integer page;
    private List<Integer> sortBy;

    /**
     * Default constructor.
     */
    public InvoiceSearchRequest() {
    }

    /**
     * Initialization constructor.
     * @param  filters  InvoiceSearchRequestFilters value for filters.
     * @param  pageSize  Integer value for pageSize.
     * @param  page  Integer value for page.
     * @param  sortBy  List of Integer value for sortBy.
     */
    public InvoiceSearchRequest(
            InvoiceSearchRequestFilters filters,
            Integer pageSize,
            Integer page,
            List<Integer> sortBy) {
        this.filters = filters;
        this.pageSize = pageSize;
        this.page = page;
        this.sortBy = sortBy;
    }

    /**
     * Getter for Filters.
     * @return Returns the InvoiceSearchRequestFilters
     */
    @JsonGetter("Filters")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InvoiceSearchRequestFilters getFilters() {
        return filters;
    }

    /**
     * Setter for Filters.
     * @param filters Value for InvoiceSearchRequestFilters
     */
    @JsonSetter("Filters")
    public void setFilters(InvoiceSearchRequestFilters filters) {
        this.filters = filters;
    }

    /**
     * Getter for PageSize.
     * @return Returns the Integer
     */
    @JsonGetter("PageSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * Setter for PageSize.
     * @param pageSize Value for Integer
     */
    @JsonSetter("PageSize")
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    /**
     * Getter for Page.
     * @return Returns the Integer
     */
    @JsonGetter("Page")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPage() {
        return page;
    }

    /**
     * Setter for Page.
     * @param page Value for Integer
     */
    @JsonSetter("Page")
    public void setPage(Integer page) {
        this.page = page;
    }

    /**
     * Getter for SortBy.
     * Sort option – 1.	InvoiceDate ASC 2.	InvoiceDate DESC 3.	NetAmountCustomerCurrency ASC
     * 4.	NetAmountCustomerCurrency DESC Optional Note: This option uses a column name with a
     * combination of “ASC or DESC” for sorting. If only the column name is provided, it is sorted
     * by ascending. Example values to be passed: [“InvoiceDate”, “NetAmountCustomerCurrency DESC”]
     * @return Returns the List of Integer
     */
    @JsonGetter("SortBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Integer> getSortBy() {
        return sortBy;
    }

    /**
     * Setter for SortBy.
     * Sort option – 1.	InvoiceDate ASC 2.	InvoiceDate DESC 3.	NetAmountCustomerCurrency ASC
     * 4.	NetAmountCustomerCurrency DESC Optional Note: This option uses a column name with a
     * combination of “ASC or DESC” for sorting. If only the column name is provided, it is sorted
     * by ascending. Example values to be passed: [“InvoiceDate”, “NetAmountCustomerCurrency DESC”]
     * @param sortBy Value for List of Integer
     */
    @JsonSetter("SortBy")
    public void setSortBy(List<Integer> sortBy) {
        this.sortBy = sortBy;
    }

    /**
     * Converts this InvoiceSearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InvoiceSearchRequest [" + "filters=" + filters + ", pageSize=" + pageSize
                + ", page=" + page + ", sortBy=" + sortBy + "]";
    }

    /**
     * Builds a new {@link InvoiceSearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InvoiceSearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .filters(getFilters())
                .pageSize(getPageSize())
                .page(getPage())
                .sortBy(getSortBy());
        return builder;
    }

    /**
     * Class to build instances of {@link InvoiceSearchRequest}.
     */
    public static class Builder {
        private InvoiceSearchRequestFilters filters;
        private Integer pageSize;
        private Integer page;
        private List<Integer> sortBy;



        /**
         * Setter for filters.
         * @param  filters  InvoiceSearchRequestFilters value for filters.
         * @return Builder
         */
        public Builder filters(InvoiceSearchRequestFilters filters) {
            this.filters = filters;
            return this;
        }

        /**
         * Setter for pageSize.
         * @param  pageSize  Integer value for pageSize.
         * @return Builder
         */
        public Builder pageSize(Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        /**
         * Setter for page.
         * @param  page  Integer value for page.
         * @return Builder
         */
        public Builder page(Integer page) {
            this.page = page;
            return this;
        }

        /**
         * Setter for sortBy.
         * @param  sortBy  List of Integer value for sortBy.
         * @return Builder
         */
        public Builder sortBy(List<Integer> sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        /**
         * Builds a new {@link InvoiceSearchRequest} object using the set fields.
         * @return {@link InvoiceSearchRequest}
         */
        public InvoiceSearchRequest build() {
            return new InvoiceSearchRequest(filters, pageSize, page, sortBy);
        }
    }
}
