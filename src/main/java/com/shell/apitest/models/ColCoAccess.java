/*
 * ShellDataReportingAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ColCoAccess type.
 */
public class ColCoAccess {
    private OptionalNullable<String> colCoId;
    private OptionalNullable<String> colCoCode;
    private OptionalNullable<String> colCoCountryName;
    private OptionalNullable<String> issuingCountryNumber;

    /**
     * Default constructor.
     */
    public ColCoAccess() {
    }

    /**
     * Initialization constructor.
     * @param  colCoId  String value for colCoId.
     * @param  colCoCode  String value for colCoCode.
     * @param  colCoCountryName  String value for colCoCountryName.
     * @param  issuingCountryNumber  String value for issuingCountryNumber.
     */
    public ColCoAccess(
            String colCoId,
            String colCoCode,
            String colCoCountryName,
            String issuingCountryNumber) {
        this.colCoId = OptionalNullable.of(colCoId);
        this.colCoCode = OptionalNullable.of(colCoCode);
        this.colCoCountryName = OptionalNullable.of(colCoCountryName);
        this.issuingCountryNumber = OptionalNullable.of(issuingCountryNumber);
    }

    /**
     * Initialization constructor.
     * @param  colCoId  String value for colCoId.
     * @param  colCoCode  String value for colCoCode.
     * @param  colCoCountryName  String value for colCoCountryName.
     * @param  issuingCountryNumber  String value for issuingCountryNumber.
     */

    protected ColCoAccess(OptionalNullable<String> colCoId, OptionalNullable<String> colCoCode,
            OptionalNullable<String> colCoCountryName,
            OptionalNullable<String> issuingCountryNumber) {
        this.colCoId = colCoId;
        this.colCoCode = colCoCode;
        this.colCoCountryName = colCoCountryName;
        this.issuingCountryNumber = issuingCountryNumber;
    }

    /**
     * Internal Getter for ColCoId.
     * Collecting company ID.
     * @return Returns the Internal String
     */
    @JsonGetter("ColCoId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetColCoId() {
        return this.colCoId;
    }

    /**
     * Getter for ColCoId.
     * Collecting company ID.
     * @return Returns the String
     */
    public String getColCoId() {
        return OptionalNullable.getFrom(colCoId);
    }

    /**
     * Setter for ColCoId.
     * Collecting company ID.
     * @param colCoId Value for String
     */
    @JsonSetter("ColCoId")
    public void setColCoId(String colCoId) {
        this.colCoId = OptionalNullable.of(colCoId);
    }

    /**
     * UnSetter for ColCoId.
     * Collecting company ID.
     */
    public void unsetColCoId() {
        colCoId = null;
    }

    /**
     * Internal Getter for ColCoCode.
     * Collecting company code.
     * @return Returns the Internal String
     */
    @JsonGetter("ColCoCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetColCoCode() {
        return this.colCoCode;
    }

    /**
     * Getter for ColCoCode.
     * Collecting company code.
     * @return Returns the String
     */
    public String getColCoCode() {
        return OptionalNullable.getFrom(colCoCode);
    }

    /**
     * Setter for ColCoCode.
     * Collecting company code.
     * @param colCoCode Value for String
     */
    @JsonSetter("ColCoCode")
    public void setColCoCode(String colCoCode) {
        this.colCoCode = OptionalNullable.of(colCoCode);
    }

    /**
     * UnSetter for ColCoCode.
     * Collecting company code.
     */
    public void unsetColCoCode() {
        colCoCode = null;
    }

    /**
     * Internal Getter for ColCoCountryName.
     * Collecting company’s Country name. ex: United Kingdom
     * @return Returns the Internal String
     */
    @JsonGetter("ColCoCountryName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetColCoCountryName() {
        return this.colCoCountryName;
    }

    /**
     * Getter for ColCoCountryName.
     * Collecting company’s Country name. ex: United Kingdom
     * @return Returns the String
     */
    public String getColCoCountryName() {
        return OptionalNullable.getFrom(colCoCountryName);
    }

    /**
     * Setter for ColCoCountryName.
     * Collecting company’s Country name. ex: United Kingdom
     * @param colCoCountryName Value for String
     */
    @JsonSetter("ColCoCountryName")
    public void setColCoCountryName(String colCoCountryName) {
        this.colCoCountryName = OptionalNullable.of(colCoCountryName);
    }

    /**
     * UnSetter for ColCoCountryName.
     * Collecting company’s Country name. ex: United Kingdom
     */
    public void unsetColCoCountryName() {
        colCoCountryName = null;
    }

    /**
     * Internal Getter for IssuingCountryNumber.
     * Issuing Country Number. ex: 032 - Czech Republic
     * @return Returns the Internal String
     */
    @JsonGetter("IssuingCountryNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetIssuingCountryNumber() {
        return this.issuingCountryNumber;
    }

    /**
     * Getter for IssuingCountryNumber.
     * Issuing Country Number. ex: 032 - Czech Republic
     * @return Returns the String
     */
    public String getIssuingCountryNumber() {
        return OptionalNullable.getFrom(issuingCountryNumber);
    }

    /**
     * Setter for IssuingCountryNumber.
     * Issuing Country Number. ex: 032 - Czech Republic
     * @param issuingCountryNumber Value for String
     */
    @JsonSetter("IssuingCountryNumber")
    public void setIssuingCountryNumber(String issuingCountryNumber) {
        this.issuingCountryNumber = OptionalNullable.of(issuingCountryNumber);
    }

    /**
     * UnSetter for IssuingCountryNumber.
     * Issuing Country Number. ex: 032 - Czech Republic
     */
    public void unsetIssuingCountryNumber() {
        issuingCountryNumber = null;
    }

    /**
     * Converts this ColCoAccess into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ColCoAccess [" + "colCoId=" + colCoId + ", colCoCode=" + colCoCode
                + ", colCoCountryName=" + colCoCountryName + ", issuingCountryNumber="
                + issuingCountryNumber + "]";
    }

    /**
     * Builds a new {@link ColCoAccess.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ColCoAccess.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.colCoId = internalGetColCoId();
        builder.colCoCode = internalGetColCoCode();
        builder.colCoCountryName = internalGetColCoCountryName();
        builder.issuingCountryNumber = internalGetIssuingCountryNumber();
        return builder;
    }

    /**
     * Class to build instances of {@link ColCoAccess}.
     */
    public static class Builder {
        private OptionalNullable<String> colCoId;
        private OptionalNullable<String> colCoCode;
        private OptionalNullable<String> colCoCountryName;
        private OptionalNullable<String> issuingCountryNumber;



        /**
         * Setter for colCoId.
         * @param  colCoId  String value for colCoId.
         * @return Builder
         */
        public Builder colCoId(String colCoId) {
            this.colCoId = OptionalNullable.of(colCoId);
            return this;
        }

        /**
         * UnSetter for colCoId.
         * @return Builder
         */
        public Builder unsetColCoId() {
            colCoId = null;
            return this;
        }

        /**
         * Setter for colCoCode.
         * @param  colCoCode  String value for colCoCode.
         * @return Builder
         */
        public Builder colCoCode(String colCoCode) {
            this.colCoCode = OptionalNullable.of(colCoCode);
            return this;
        }

        /**
         * UnSetter for colCoCode.
         * @return Builder
         */
        public Builder unsetColCoCode() {
            colCoCode = null;
            return this;
        }

        /**
         * Setter for colCoCountryName.
         * @param  colCoCountryName  String value for colCoCountryName.
         * @return Builder
         */
        public Builder colCoCountryName(String colCoCountryName) {
            this.colCoCountryName = OptionalNullable.of(colCoCountryName);
            return this;
        }

        /**
         * UnSetter for colCoCountryName.
         * @return Builder
         */
        public Builder unsetColCoCountryName() {
            colCoCountryName = null;
            return this;
        }

        /**
         * Setter for issuingCountryNumber.
         * @param  issuingCountryNumber  String value for issuingCountryNumber.
         * @return Builder
         */
        public Builder issuingCountryNumber(String issuingCountryNumber) {
            this.issuingCountryNumber = OptionalNullable.of(issuingCountryNumber);
            return this;
        }

        /**
         * UnSetter for issuingCountryNumber.
         * @return Builder
         */
        public Builder unsetIssuingCountryNumber() {
            issuingCountryNumber = null;
            return this;
        }

        /**
         * Builds a new {@link ColCoAccess} object using the set fields.
         * @return {@link ColCoAccess}
         */
        public ColCoAccess build() {
            return new ColCoAccess(colCoId, colCoCode, colCoCountryName, issuingCountryNumber);
        }
    }
}
